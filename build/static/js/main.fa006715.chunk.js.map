{"version":3,"sources":["assets/logo_transparent.png","components/Carousel/CarouselImg/1/1.jpg","components/Carousel/CarouselImg/2/2.jpg","components/Carousel/CarouselImg/3/3.jpg","components/Carousel/CarouselImg/4/4.jpg","components/Carousel/CarouselImg/5/5.jpg","components/About/img/S1.png","components/About/img/S2.png","components/About/img/S3.png","components/About/img/S4.png","components/About/img/S6.png","components/About/img/S7.png","components/About/img/S8.jpeg","helpers/auth-header.js","helpers/handle-response.js","helpers/history.js","services/authentication.service.js","components/Header/Header.js","components/Loader/Loader.js","components/Cards/Cards.js","CovidApi/index.js","components/Carousel/Carousel.js","components/Home/Home.js","components/About/About.js","components/Sidebar/Sidebar.js","components/ModalBody/ModalBody.js","components/GenericTable/GenericTable.js","components/Directory/Directory.js","components/HealthStats/HealthStats.js","components/PVTGTracker/PVTGTracker.js","components/PETracker/PETracker.js","components/Dashboard/Dashboard.js","components/PHC/PHC.js","components/VillageSecretariat/VillageSec.js","components/Village/Village.js","components/BasicDetailsForm/BasicDetailsForm.js","components/TestDetailsForm/TestDetailsForm.js","components/HospitalDetailsForm/HospitalDetailsForm.js","components/ObservationsForm/ObservationsForm.js","components/BloodProfile/BloodProfile.js","components/FormSuccess/FormSuccess.js","components/MainForm/MainForm.js","components/Error404/Error404.js","components/PrivateRoute/PrivateRoute.js","components/Login/Login.js","App.js","serviceWorker.js","helpers/fake-backend.js","index.js"],"names":["module","exports","authHeader","currentUser","authenticationService","currentUserValue","token","Authorization","handleResponse","response","status","data","logout","history","createBrowserHistory","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","URI","process","login","username","password","axios","post","then","user","userData","timestamp","Date","setItem","stringify","next","removeItem","refresh","value","newData","asObservable","Header","Navbar","collapseOnSelect","expand","variant","Brand","href","alt","src","logo","Toggle","aria-controls","Collapse","id","Nav","className","Link","icon","faHome","color","faChartLine","faUserPlus","faInfoCircle","Button","onClick","faSignOutAlt","faSignInAlt","Component","OurLoader","Container","Row","style","textAlign","Col","type","height","width","React","Cards","props","confirmed","recovered","deaths","active","districtData","dataLabels","dataValues","i","length","push","name","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","CardDeck","Card","text","bg","xs","s","md","Body","Title","Text","start","end","duration","separator","options","title","display","fontSize","legend","position","fetchData","a","get","Slider","state","Carousel","Item","S1","S2","S3","S4","S5","Home","fetchedData","this","setState","Fragment","sm","About","marginTop","imgCard3","imgCard1","imgCard2","imgCard7","imgCard4","imgCard6","imgCard8","SideBar","views","useEffect","element","document","getElementById","currentView","classList","contains","remove","add","changeView","ModalBody","patient","patientDetails","firstName","lastName","surname","fullName","concat","pedalEdema","isPedalTypeEmpty","pedaltype","adhaar","slice","Form","Group","as","Label","Control","placeholder","toUpperCase","disabled","village","age","phone","bloodgroup","deceased","PVTG","GenericTable","handleClose","show","handleShowCustom","indx","patientDetailsModal","handleSearchChange","event","idFragments","target","split","obj","key","dataType","dataTypes","keys","indexOf","Number","MIN_VALUE","MAX_VALUE","isNotNullOrUndefinedOrBlank","undefined","clearFilters","min","max","noOfRows","changeNoOfRows","Math","abs","nextPage","currentPageIndex","previousPage","handleShow","bind","stateObj","headers","loading","pageData","dataLength","lastPageIndex","floor","filter","rowData","toLowerCase","includes","toString","onChange","Table","striped","bordered","hover","map","header","index","colSpan","inputType","row","indexRow","indexCol","Modal","onHide","closeButton","Footer","justifyContent","Directory","uri","getVillageNameFromId","villageList","village_id","searchField","patientList","responseVillage","filteredData","type_data","catch","err","structuredData","newPatient","HealthStats","patientCount","responseStats","responseAll","BloodUrea","Electrolytes_Potassium","Electrolytes_Sodium","SerumCreatinine","UricAcid","bloodUreaData","hoverBackgroundColor","Severe","potassiumData","sodiumData","uricAcidData","serumCreatinineData","MI","right","PVTGTracker","pvtgData","ST","NST","PETracker","peData","PE","total","peTypeData","Single","Bilateral","Dashboard","nextView","dashView","pageWrapId","outerContainerId","PHC","phcList","phcValue","handleChange","fetchVillageSec","phc","PHC_id","VillageSec","villageSecList","villageSecValue","fetchVillages","villageSec","villagesec_id","Village","villageValue","updateValue","BasicDetailsForm","componentDidMount","adhaarNumber","getValue","adhaarFirst","substring","adhaarSecond","adhaarThird","input","fetchOrUpdatePHCList","mandal","village_sec","phcLoading","mandal_id","fetchOrUpdateVillageSecList","villageSecLoading","fetchOrUpdateVillageList","villageLoading","validate","validIds","invalidIds","adhaarIds","filled","Boolean","relation","gaurdian_name","gender","maritalstatus","border","window","location","focus","Error","saveData","changeData","formName","handleCheckboxChange","checked","dataToSave","address","children","deworming","smoking","drinking","Promise","resolve","loadNextForm","restrictDigits","strValue","changeAdhaarFocus","updateState","valueObj","styles","center","paddingLeft","left","Check","controlId","TestDetailsForm","previous","validateOneDigitAfterDecimalSerumCreatine","validateOneDigitAfterDecimalBloodUrea","validateOneDigitAfterDecimalUricAcid","validateOneDigitAfterDecimalElectrolytesSodium","validateOneDigitAfterDecimalElectrolytesPotassium","validateOneDigitAfterDecimalBun","validateAndNext","validateAndSubmit","btn","submit","serumCreatinineAfterReRendering","serumCreatinine","bloodUreaAfterReRendering","bloodUrea","uricAcidfterReRendering","uricAcid","electrolytesSodiumReRendering","electrolytes_sodium","electrolytesPotassiumReRendering","electrolytes_potassium","bunReRendering","bun","dateoftesting","kidneystatus","ailments","dialysis","doctorreq","opd","paddingRight","role","HospitalDetailsForm","handleReferredTo","referredToSelected","referredto","hospitalAdmit","dateOfAdmit","refered","treatmentDone","discharge","dischargeStatus","deathDate","placeOfDeath","causeOfDeath","recovery","otherReferedHospitalName","rows","class","ObservationsForm","weight","temperature","bloodpressure","heartrate","pulserate","respiratoryrate","bpm","fever","aches","cold","cough","fatigue","diarrohea","bleeding","infection","otherSymptoms","defaultChecked","BloodProfile","date","wbc","pcv","rbc","mcv","mchc","rdw","monocytes","lymphocytes","eosinophils","neutroophils","haemoglobin","platelet","mch","Eosinophils","Neutrophils","FormSuccess","faCheckCircle","size","marginBottom","MainForm","generatePkid","result","characters","charactersLength","charAt","random","appendState","childState","callback","submitForm","opdCheck","dialysisCheck","doctorreqCheck","dataToSend","pkid","villagesec","referred","ref_status","BasicVitals","Temperature","BP","HR","Pulse","RespRate","BasicSymptoms","Fever","Cold","Cough","Fatigue","Aches","Diarrohea","Bleeding","Infection","others","report","patient_status","hb","wbc_count","diffrential_count","plat_count","habits","alert","Error404","seconds","setInterval","innerHTML","clearInterval","faTimesCircle","PrivateRoute","component","rest","render","to","pathname","from","Login","error","margin","App","refreshAuth","msecDifference","getTime","subscribe","x","exact","path","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","users","realFetch","fetch","url","opts","isLoggedIn","reject","setTimeout","endsWith","method","params","body","find","ok","message","configureFakeBackend","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fa006715.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.e386adfe.png\";","module.exports = __webpack_public_path__ + \"static/media/1.0e8e7eee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.cd72baca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.92c3f481.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.a3659dab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.5adf671c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/S1.fa95cb07.png\";","module.exports = __webpack_public_path__ + \"static/media/S2.36374932.png\";","module.exports = __webpack_public_path__ + \"static/media/S3.52172d80.png\";","module.exports = __webpack_public_path__ + \"static/media/S4.534dbb4b.png\";","module.exports = __webpack_public_path__ + \"static/media/S6.0b25fff5.png\";","module.exports = __webpack_public_path__ + \"static/media/S7.3d234977.png\";","module.exports = __webpack_public_path__ + \"static/media/S8.85ee65bb.jpeg\";","import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `JWT ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","import { authenticationService } from '../services';\n\nexport function handleResponse(response) {\n    // return response.text().then(text => {\n    //     const data = text && JSON.parse(text);\n    //     if (!response.ok) {\n    //         if ([400, 401, 403].indexOf(response.status) !== -1) {\n    //             // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n    //             authenticationService.logout();\n    //             window.location.reload();\n    //         }\n\n    //         const error = (data && data.message) || response.statusText;\n    //         return Promise.reject(error);\n    //     }\n\n    //     return data;\n    // });\n    // console.log(response);\n    if(response.status === 200){\n        return response.data;\n    }\n    else {\n        authenticationService.logout();\n        return false;\n    }\n    // if([400, 401, 403].indexOf(response.status) !== -1){\n    //     authenticationService.logout();\n    //     window.location.reload();\n    //     return false;\n    // }\n    // return response.data;\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { BehaviorSubject } from 'rxjs';\n\nimport { handleResponse } from '../helpers';\n\nimport axios from 'axios';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nconst URI = process.env.REACT_APP_SERVER_URI;\n\nexport const authenticationService = {\n    login,\n    logout,\n    refresh,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n\n    return axios.post(URI + 'token_jwt_get/', { username, password })\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            if(user){\n                let userData = {\n                    username,\n                    token: user.token,\n                    timestamp: new Date()\n                }\n                localStorage.setItem('currentUser', JSON.stringify(userData));\n                currentUserSubject.next(userData);\n\n                return user;\n            }\n        });\n}\n\nfunction refresh() {\n    if(currentUserSubject.value){\n        axios.post(URI + 'token_jwt_refresh/', { token: currentUserSubject.value.token })\n            .then(handleResponse)\n            .then(data => {\n                if(data) {\n                    let newData = { ...currentUserSubject.value };\n                    newData.token = data.token;\n                    newData.timestamp = new Date();\n\n                    localStorage.setItem('currentUser', JSON.stringify(newData));\n                    currentUserSubject.next(newData);\n                }\n            });\n    }\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport './Header.css'\n\nimport { faHome, faChartLine, faUserPlus, faInfoCircle, faSignOutAlt, faSignInAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { authenticationService } from '../../services';\n\nimport logo from '../../assets/logo_transparent.png';\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<img alt=\"TracerIND\" src={logo} />\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} color=\"white\" /> &nbsp;Home\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/dashboard\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartLine} color=\"white\" /> &nbsp;Dashboard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/add\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus} color=\"white\" /> &nbsp;New Patient\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/about\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} color=\"white\" /> &nbsp;About\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\tif (authenticationService.currentUserValue) {\n\t\t\t\t\t\t\t\t\treturn <Button className=\"nav-button\" variant=\"transparent\" onClick={authenticationService.logout}>\n\t\t\t\t\t\t\t\t\t\tLogout &nbsp;\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSignOutAlt} color=\"white\" />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn <Nav.Link href=\"/login\">\n\t\t\t\t\t\t\t\t\t\tLogin &nbsp; <FontAwesomeIcon icon={faSignInAlt} color=\"white\" />\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner'\nimport {Container, Row, Col} from 'react-bootstrap';\n\nexport default class OurLoader extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row style={{textAlign: \"center\"}}>\n                    <Col>\n                        <Loader\n                            type=\"Puff\"\n                            color=\"#0a5767\"\n                            height={200}\n                            width={200}\n                            // timeout={3000} //3 secs\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport './Cards.css'\nimport { Card, CardDeck, Container, Row, Col } from 'react-bootstrap';\nimport {Bar} from 'react-chartjs-2';\nimport CountUp from 'react-countup';\nimport OurLoader from '../Loader/Loader';\n\nconst Cards = (props) => {\n\n  let { confirmed, recovered, deaths, active, districtData } = props.data; \n\n  if (!confirmed) {\n    return <OurLoader />\n  }\n  \n  let dataLabels = [], dataValues = [];\n\n  for(let i = 0; i < districtData.length; i++) {\n    dataLabels.push(districtData[i].name);\n    dataValues.push(districtData[i].confirmed);\n  }\n\n  const barData = {\n    labels: dataLabels,\n    datasets: [\n      {\n        label: 'Confirmed cases',\n        backgroundColor: '#0a5767',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: dataValues\n      }\n    ]\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>\n        COVID-19 stats for Andhra Pradesh\n      </h2>\n      <CardDeck>\n        <Card\n          text=\"D13C2B\"\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n          <Card.Body className=\"confirmed\">\n            <Card.Title> Confirmed </Card.Title>\n            <Card.Text><CountUp start={0} end={confirmed} duration={1} separator=\",\" /> </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n          <Card.Body className=\"active\">\n            <Card.Title> Active </Card.Title>\n            <Card.Text> <CountUp start={0} end={active} duration={1} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n          <Card.Body className=\"recovered\">\n            <Card.Title> Recovered </Card.Title>\n            <Card.Text> <CountUp start={0} end={recovered} duration={1} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n          <Card.Body className=\"deaths\">\n            <Card.Title> Deaths </Card.Title>\n            <Card.Text> <CountUp start={0} end={deaths} duration={1} separator=\",\" /></Card.Text>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n      <br/>\n      <Container id=\"stateWiseData\">\n        <Row>\n          <Col>\n            <Bar\n              data={barData}\n              options={{\n                title: {\n                  display: true,\n                  text: 'District wise distribution',\n                  fontSize: 20\n                },\n                legend: {\n                  display: true,\n                  position: 'right'\n                }\n              }}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = \"https://api.covidindiatracker.com/state_data.json\"\n\nexport const fetchData = async() =>{\n    try{\n        const {data} = await axios.get(url);\n        console.log(data);\n        if(data && data.length) {\n          for (let i = 0; i < data.length; i++){\n            if(data[i].id === 'IN-AP'){\n              return data[i];\n            }\n          }\n        }\n      // return data[1];\n    }\n    catch(error){\n\n    }\n}\n","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\n\n// import S from './CarouselImg/event.jpg';\nimport S1 from './CarouselImg/1/1.jpg';\nimport S2 from './CarouselImg/2/2.jpg';\nimport S3 from './CarouselImg/3/3.jpg';\nimport S4 from './CarouselImg/4/4.jpg';\nimport S5 from './CarouselImg/5/5.jpg';\n\n\nimport './Carousel.css';\n\nexport default class Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#0a5767\"}}>\n        <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"cImage d-block w-100 h-50\"\n            src={S1}\n            alt=\"First slide\"\n          />\n        </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              src={S2}\n              alt=\"Second slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S3}\n              alt=\"Third slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S4}\n              alt=\"Fourth slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S5}\n              alt=\"Fifth slide\"\n            />\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Home.css';\nimport Cards from '../Cards/Cards';\nimport { fetchData } from '../../CovidApi';\n// import Infotrack from '../Infotrack/Infotrack';\n// import Bucket from '../Bucket/Bucket';\nimport Slider from '../Carousel/Carousel';\n// import Header from '../Header/Header';\n// import Sidenav from '../Sidenav/Sidenav';\nexport default class Home extends Component {\n  state = {\n    data: {},\n  }\n  //Comment\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <React.Fragment>\n        {/* <Header /> */}\n        <Container >\n          {/* <Infotrack /> */}\n          <br />\n          <Slider />\n          <Row className=\"show-grid text-center new4\">\n            <Col sm={12}>\n              <Cards data={data} />\n            </Col>\n          </Row>\n          {/* <Sidenav /> */}\n          {/* <Row>\n          <Col>\n            <Bucket />\n          </Col>\n          <Col>\n          </Col>\n        </Row> */}\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n","\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nimport imgCard1 from \"./img/S1.png\";\nimport imgCard2 from \"./img/S2.png\";\nimport imgCard3 from \"./img/S3.png\";\nimport imgCard4 from \"./img/S4.png\";\n// import imgCard5 from \"./img/S5.png\";\nimport imgCard6 from \"./img/S6.png\";\nimport imgCard7 from \"./img/S7.png\";\nimport imgCard8 from \"./img/S8.jpeg\";\nimport './About.css';\n\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Container>\n        <h1 style={{ marginTop: \"1rem\" }} className=\"heading\"><span>meet </span>Our Team</h1>\n        <div className=\"profiles\">\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard3} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shlok Parida</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard1} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Prakruti Chandak</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard2} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Abhishek Prasad </h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard7} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shubhankar</h3>\n                <h5>Android Developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard4} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Hrituja Khatavkar</h3>\n                <h5>Frontend developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard6} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">  Gaurav Roy </h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard8} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Palak Rai</h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { push as Menu } from \"react-burger-menu\";\nimport './Sidebar.css'\n\n\nexport default function SideBar(props) {\n\n  const views = ['PatientStatus', 'HealthStats', 'PVTGTracker', 'PedalEdemaTracker'];\n\n  React.useEffect(() => {\n    for(let i = 0; i < views.length; i++){\n      let element = document.getElementById(views[i]);\n      if(views[i] !== props.currentView){\n        if (element.classList.contains('sidebar-active')){\n          element.classList.remove('sidebar-active');\n        }\n      }\n      else{\n        element.classList.add('sidebar-active');\n      }\n    }\n  })\n\n  return (\n    // Pass on our props\n    <Menu {...props}>\n      <button className=\"menu-item\" id=\"PatientStatus\" onClick={() => props.changeView('PatientStatus')}>\n        Patient Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"HealthStats\" onClick={() => props.changeView('HealthStats')}>\n        Health Stats\n      </button>\n\n      <button className=\"menu-item\" id=\"PVTGTracker\" onClick={() => props.changeView('PVTGTracker')}>\n        PVTG Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"PedalEdemaTracker\" onClick={() => props.changeView('PedalEdemaTracker')}>\n        Pedal Edema Tracker\n      </button>\n    </Menu>\n  );\n};\n","import React from 'react';\n\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\n\nclass ModalBody extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let patientDetails = this.props\n        let patient = patientDetails.patientDetails\n        let firstName = patient.name;\n        let space = \" \";\n        let lastName = patient.surname;\n        let fullName = firstName.concat(space, lastName);\n        let pedalEdema = 'Yes'\n        let isPedalTypeEmpty = true\n        if (patient.pedalEdema === 'N') {\n            pedalEdema = 'No'\n        }\n        if (pedalEdema === 'Yes') {\n            // console.log(\"here\")\n            if (!(patient.pedaltype === '')) {\n                // console.log(\"here\")\n                isPedalTypeEmpty = false\n            }\n        }\n        let adhaar = patient.adhaar.slice(0, 4) + \"-\" + patient.adhaar.slice(4, 8) + \"-\" + patient.adhaar.slice(8)\n        // console.log(adhaar)\n        // console.log(patient)\n        return (\n            <Container>\n                <Form>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Name: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"name\" value={fullName.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Adhaar: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"adhar\" value={adhaar} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Village: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"vilage\" value={patient.village} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Age: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"age\" value={patient.age} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Phone: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"phone\" value={patient.phone} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Blood Group: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"bloodGroup\" value={patient.bloodgroup.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Deceased: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"deceased\" value={patient.deceased.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>PVTG: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pvtg\" value={patient.PVTG.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Pedal Edema: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pedal\" value={pedalEdema.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {(() => {\n                        if (isPedalTypeEmpty) {\n                            return (\n                                <Container></Container>\n                            )\n                        }\n                        else {\n                            return (\n                                <Row>\n                                    <Col >\n                                        <Form.Group as={Row}>\n                                            <Col sm={3}>\n                                                <Form.Label>Pedal Type: </Form.Label>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Form.Control placeholder=\"\" id=\"pedalType\" value={patient.pedaltype.toUpperCase()} disabled\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n\n                    })()}\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default ModalBody;","import React from 'react';\n\nimport { Table, Button, Row, Col, Modal } from 'react-bootstrap';\nimport ModalBody from '../ModalBody/ModalBody';\nimport './GenericTable.css';\n\n//Received props\n//Json data -- data\n//List of headings -- headers\n//List of Json keys to be displayed under each heading -- keys\n//List of data types for each column for making filters -- dataTypes\n//All list should be of equal lengths and in same sequence. Otherwise table will show unpredictable behaviour\n//loading -- loading\n\nclass GenericTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleShowCustom = this.handleShowCustom.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            noOfRows: \"\",\n            currentPageIndex: 0,\n            show: false,\n            patientDetailsModal: {}\n        }\n    }\n\n\n    handleClose = () => {\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        console.log(\"handleShow called\")\n\n    }\n\n    handleShowCustom = (value, indx) => {\n        this.setState({ show: true, patientDetailsModal: value });\n    }\n\n    componentDidMount() {\n        let stateObj = {};\n        let { dataTypes, keys } = this.props;\n        for (let i = 0; i < dataTypes.length; i++) {\n            if (dataTypes[i] === 'Number') {\n                stateObj['KEY_' + keys[i]] = {                  //Appending KEY_ to prevent data overwrite if any props key matches our internal state key\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n            }\n            else if (dataTypes[i] === 'String') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n            else if (dataTypes[i] === 'Boolean') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n        }\n        this.setState(stateObj);\n    }\n\n    handleSearchChange = event => {\n        let idFragments = event.target.id.split('_');\n        let obj = {};\n        let key = idFragments[1];\n        let dataType = this.props.dataTypes[this.props.keys.indexOf(key)];\n\n        if (dataType === 'String') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        else if (dataType === 'Number') {\n            obj['KEY_' + key] = this.state['KEY_' + key];\n            if (event.target.value === \"\") {\n                obj['KEY_' + key][idFragments[2]] = idFragments[2] === 'min' ? Number.MIN_VALUE : Number.MAX_VALUE;\n            }\n            else {\n                obj['KEY_' + key][idFragments[2]] = Number(event.target.value);\n            }\n        }\n        else if (dataType === 'Boolean') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        this.setState(obj);\n    }\n\n    isNotNullOrUndefinedOrBlank = (value) => {\n        return (value !== null && value !== undefined && value !== \"\");\n    }\n\n    clearFilters = () => {\n        let { dataTypes, keys } = this.props;\n        let obj = {};\n        for (let i = 0; i < keys.length; i++) {\n            if (dataTypes[i] === \"String\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n            else if (dataTypes[i] === \"Number\") {\n                obj['KEY_' + keys[i]] = {\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n                document.getElementById('KEY_' + keys[i] + '_min').value = \"\";\n                document.getElementById('KEY_' + keys[i] + '_max').value = \"\";\n            }\n            else if (dataTypes[i] === \"Boolean\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n        }\n        obj.noOfRows = \"\";\n        this.setState(obj);\n    }\n\n    changeNoOfRows = event => {\n        if (event.target.value !== \"\") {\n            event.target.value = Math.abs(event.target.value);\n        }\n        this.setState({ noOfRows: event.target.value });\n    }\n\n    nextPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex + 1 });\n    }\n\n    previousPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex - 1 });\n    }\n\n    render() {\n        let { headers, data, loading, keys, dataTypes } = this.props;\n        let pageData = [];\n        let { noOfRows, currentPageIndex, patientDetailsModal } = this.state;\n        let dataLength = 0;\n        let lastPageIndex = 0;\n\n        if (!loading) {\n\n            dataLength = data.length;\n            if (noOfRows !== \"\") {\n                if (dataLength % noOfRows === 0) {\n                    lastPageIndex = Math.floor(dataLength / noOfRows) - 1;\n                }\n                else {\n                    lastPageIndex = Math.floor(dataLength / noOfRows);\n                }\n            }\n\n            if (noOfRows === \"\") {\n                pageData = data;\n            }\n            else if (dataLength >= (currentPageIndex + 1) * noOfRows) {\n                pageData = data.slice(currentPageIndex * noOfRows, (currentPageIndex + 1) * noOfRows);\n            }\n            else {\n                pageData = data.slice(currentPageIndex * noOfRows, dataLength);\n            }\n\n            pageData = pageData.filter(rowData => {\n                for (let i = 0; i < keys.length; i++) {\n                    if (dataTypes[i] === \"String\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && !rowData[keys[i]].toLowerCase().includes(this.state['KEY_' + keys[i]].toLowerCase())) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Number\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && (rowData[keys[i]] < this.state['KEY_' + keys[i]].min || rowData[keys[i]] > this.state['KEY_' + keys[i]].max)) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Boolean\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]].toString()) && this.isNotNullOrUndefinedOrBlank(this.state['KEY_' + keys[i]]) && (rowData[keys[i]].toString() !== this.state['KEY_' + keys[i]].toString())) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n        }\n        //  console.log(pageData)\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm={3} xs={4} >\n                        <Button variant=\"danger\" onClick={this.clearFilters} className=\"filter-button\">\n                            Clear filters\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"previousButton\" onClick={this.previousPage} disabled={currentPageIndex === 0} >\n                            Previous Page\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"nextButton\" onClick={this.nextPage} disabled={currentPageIndex >= lastPageIndex}>\n                            Next Page\n                        </Button>\n                    </Col>\n\n                    <Col sm={3}>\n                        <input type=\"number\" min=\"1\" value={this.state.noOfRows} placeholder=\"No. of Rows\" onChange={this.changeNoOfRows} className=\"row-input-field\" />\n                    </Col>\n                </Row>\n                <Table style={{ textAlign: \"center\" }} striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            {\n                                headers.map((header, index) => {\n                                    return (\n                                        <td key={index}>{header}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (() => {\n                                if (loading) {\n                                    return (\n                                        <tr>\n                                            <td colSpan={headers.length}>\n                                                Loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <React.Fragment>\n                                            <tr key=\"searchFields\">\n                                                {\n                                                    keys.map((key, i) => {\n                                                        let inputType = \"text\";\n                                                        if (dataTypes[i] === 'Number') {\n                                                            inputType = \"number\";\n                                                        }\n                                                        if (dataTypes[i] === 'Boolean') {\n                                                            inputType = \"booleanSelect\";\n                                                        }\n                                                        if (inputType === \"text\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key}\n                                                                        placeholder=\"Filter\"\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"number\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_min'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Min\"\n                                                                        className=\"form-control input-min\"\n                                                                    />\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_max'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Max\"\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"booleanSelect\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <select\n                                                                        value={this.state['KEY_' + key]}\n                                                                        id={'KEY_' + key}\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"Yes\">Yes</option>\n                                                                        <option value=\"No\">No</option>\n                                                                    </select>\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else {\n                                                            return (\n                                                                <td></td>\n                                                            )\n                                                        }\n                                                    })\n                                                }\n                                            </tr>\n                                            {\n                                                (() => {\n                                                    if (pageData.length === 0) {\n                                                        return (\n                                                            <tr>\n                                                                <td colSpan={headers.length}>\n                                                                    Nothing found to display.\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    else {\n                                                        return (\n                                                            pageData.map((row, indexRow) => {\n                                                                return (\n                                                                    <tr onClick={() => this.handleShowCustom(row, indexRow)} key={indexRow}>\n                                                                        {\n                                                                            keys.map((key, indexCol) => {\n                                                                                return (\n                                                                                    <td key={indexCol}>\n                                                                                        {row[key] ? row[key].toString() : \"\"}\n                                                                                    </td>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                        )\n                                                    }\n                                                })()\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n                            })()\n                        }\n                    </tbody>\n                </Table>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Patient Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ModalBody patientDetails={patientDetailsModal} />\n                    </Modal.Body>\n                    <Modal.Footer style={{justifyContent: \"center\"}}>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        {/* <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                            </Button> */}\n                    </Modal.Footer>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GenericTable;\n","import React from 'react';\n\nimport { Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport './Directory.css';\nimport GenericTable from '../GenericTable/GenericTable';\n\nimport { authHeader } from '../../helpers';\n\nclass Directory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchField: \"\",\n            patientList: [],\n            villageList: [],\n            loading: true\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetAllPatient/',\n            {\n                headers: authHeader()\n        }).then(response => {\n                    // console.log(response);\n                    axios.get(this.uri + 'GetAllVillage/', \n                    {\n                        headers: authHeader()\n                    }).then(responseVillage => {\n                        // this.setState({ villageList: responseVillage.data });\n                        // this.setState({ loading: false });\n                        //Hiding Development data\n                        var filteredData = response.data;\n                        if(process.env.REACT_APP_SHOW_DEV_DATA === 'OFF'){\n                            filteredData = response.data.filter(patient => {\n                                if (patient.type_data && patient.type_data.toLowerCase() === 'production') {\n                                    return true;\n                                }\n                                return false;\n                            })\n                        }                        \n                        this.setState(\n                            {\n                                patientList: filteredData,\n                                villageList: responseVillage.data,\n                                loading: false\n                            }\n                        )\n                    })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                    // this.setState({ patientList: response.data });\n                })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getVillageNameFromId = (id) => {\n        // console.log(\"Id received \" + id);\n        let { villageList } = this.state;\n        if (villageList.length > 0) {\n            for (let i = 0; i < villageList.length; i++) {\n                if (villageList[i].village_id === id) {\n                    return villageList[i].name;\n                }\n            }\n        }\n    }\n\n    render() {\n        const headers = ['Name', 'Village', 'Kidney Status', 'Deceased'];\n        const keys = ['fullName', 'village', 'kidneystatus', 'deceased'];\n        const dataTypes = ['String', 'String', 'String', 'Boolean'];\n        let structuredData = this.state.patientList.map(patient => {\n            let newPatient = { ...patient };\n            newPatient.village = this.getVillageNameFromId(patient.village);\n            newPatient[\"fullName\"] = newPatient.name + ' ' + newPatient.surname;\n            newPatient.deceased = newPatient.deceased ? \"Yes\" : \"No\";\n            return newPatient;\n        });\n\n        return (\n            <Container style={{ marginTop: \"2rem\" }}>\n                <GenericTable data={structuredData} loading={this.state.loading} headers={headers} keys={keys} dataTypes={dataTypes} />\n            </Container>\n        )\n    }\n}\n\nexport default Directory;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport OurLoader from '../Loader/Loader';\nimport { Pie } from 'react-chartjs-2';\n\nimport { authHeader } from '../../helpers';\n\nimport './HealthStats.css';\n\nclass HealthStats extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {},\n            patientCount: null\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetStats/',\n            {\n                headers: authHeader()\n            }\n        ).then(responseStats => {\n            // console.log(responseStats);\n            axios.get(this.uri + 'GetAllPatient',\n                {\n                    headers: authHeader()\n                }).then(responseAll => {\n                    this.setState({ data: responseStats.data, patientCount: responseAll.data.length }, () => this.setState({ loading: false }));\n                })\n                .catch(err => {\n                    throw err;\n                })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { BloodUrea, Electrolytes_Potassium, Electrolytes_Sodium, SerumCreatinine, UricAcid } = this.state.data;\n            // console.log(this.state);\n            const bloodUreaData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Blood Urea',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - BloodUrea.Severe, BloodUrea.Severe]\n                    }\n                ]\n            }\n            const potassiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Potassium(K)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Potassium.Severe, Electrolytes_Potassium.Severe]\n                    }\n                ]\n            }\n            const sodiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Sodium(Na)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Sodium.Severe, Electrolytes_Sodium.Severe]\n                    }\n                ]\n            }\n            const uricAcidData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - UricAcid.Severe, UricAcid.Severe]\n                    }\n                ]\n            }\n            const serumCreatinineData = {\n                labels: ['Normal', 'Critical', 'Mild'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00',\n                            '#00A6B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800',\n                            '#003350'\n                        ],\n                        data: [this.state.patientCount - (SerumCreatinine.Severe + SerumCreatinine.MI), SerumCreatinine.Severe, SerumCreatinine.MI]\n                    }\n                ]\n            }\n            return (\n                <Container style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Blood Urea</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={bloodUreaData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Blood Urea',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Potassium(K)</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={potassiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Potassium(K)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Sodium(Na)  </h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={sodiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Sodium(Na)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Uric Acid</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={uricAcidData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Uric Acid',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\" }} className=\"metric singleMetricInOneRow\">\n                        <Col>\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Serum Creatinine</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={serumCreatinineData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Serum Creatinine',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default HealthStats;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { authHeader } from '../../helpers';\nimport OurLoader from '../Loader/Loader';\n\nclass PVTGTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPVTG/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({ loading: false }))\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { PVTG, ST, NST } = this.state.data;\n            // console.log(PVTG, ST, NST);\n            const pvtgData = {\n                labels: ['PVTG', 'ST', 'Non ST'],\n                datasets: [\n                    {\n                        label: 'Caste distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#6800B4',\n                            '#2FDE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#35014F',\n                            '#175000'\n                        ],\n                        data: [PVTG, ST, NST]\n                    }\n                ]\n            }\n            return (\n                <Container className=\"metric\" style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col style={{right: \"3rem\"}}>\n                            <h3>PVTG Distribution</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={pvtgData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Caste Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PVTGTracker;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport OurLoader from '../Loader/Loader';\n\nimport { authHeader } from '../../helpers';\n\nclass PETracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: {}\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPE/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({loading: false}));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            const peData = {\n                labels: ['Yes', 'No'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema Distribution',\n                        backgroundColor: [\n                            '#B21F00',\n                            '#6800B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#501800',\n                            '#35014F'\n                        ],\n                        data: [this.state.data.PE, this.state.data.total - this.state.data.PE]\n                    }\n                ]\n            }\n            const peTypeData = {\n                labels: ['Single Leg', 'Bilateral'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema type distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#C9DE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#4B5000'\n                        ],\n                        data: [this.state.data.Single, this.state.data.Bilateral]\n                    }\n                ]\n            }\n            return (\n                <Container style={{textAlign: \"center\"}}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"2rem\" }}>\n                                    <h3>Pedal Edema Cases</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Cases',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{right: \"3rem\"}}>\n                                    <h3>Pedal Edema Type Distribution</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peTypeData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Type Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PETracker;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './Dashboard.css';\n\nimport SideBar from '../Sidebar/Sidebar';\nimport Directory from '../Directory/Directory';\nimport HealthStats from '../HealthStats/HealthStats';\nimport PVTGTracker from '../PVTGTracker/PVTGTracker';\nimport PETracker from '../PETracker/PETracker';\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dashView: \"PatientStatus\"\n        }\n    }\n\n    changeView = (nextView) => {\n        this.setState({dashView: nextView});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"SideBarContainer\">\n                    <SideBar currentView={this.state.dashView} changeView={this.changeView} pageWrapId={\"page-wrap\"} outerContainerId={\"SideBarContainer\"} />\n                    <div id=\"page-wrap\">\n                        {\n                            (() => {\n                                switch (this.state.dashView) {\n                                    case \"PatientStatus\":\n                                        return <Directory />\n                                    case \"HealthStats\":\n                                        return <HealthStats />\n                                    case \"PVTGTracker\":\n                                        return <PVTGTracker />\n                                    case \"PedalEdemaTracker\":\n                                        return <PETracker />\n                                    default:\n                                        return (\n                                            <Container>\n                                                <Row style={{ marginTop: \"40vh\" }}>\n                                                    <Col>\n                                                        <h1>\n                                                            Coming Soon..\n                                                        </h1>\n                                                    </Col>\n                                                </Row>\n                                            </Container>\n                                        )\n                                }\n                            })()\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\n\nexport default function PHC(props) {\n    let {loading, phcList} = props;\n\n    React.useEffect(() => {\n        if (props.phcValue) {\n            document.getElementById(props.id).value = props.phcValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillageSec(event.target.value);\n    }\n\n    if (!phcList) {\n        phcList = [];\n    }\n\n    if(!loading) {\n        if (phcList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC</option>\n                    {\n                        phcList.map((phc, i) => {\n                            return (\n                                <option value={phc.PHC_id} key={i}>{phc.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Mandal First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}\n","import React  from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function VillageSec(props) {\n    let { loading, villageSecList } = props;\n    \n    React.useEffect(() => {\n        if (props.villageSecValue) {\n            document.getElementById(props.id).value = props.villageSecValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillages(event.target.value);\n    }\n\n    if (!villageSecList) {\n        villageSecList = [];\n    }\n\n    if(!loading) {\n        if (villageSecList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageSecList.map((villageSec, i) => {\n                            return (\n                                <option value={villageSec.villagesec_id} key={i}>{villageSec.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC first</option>\n                </Form.Control>\n            )\n        }\n    }\n    else{\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function Village(props) {\n    let { loading, villageList } = props;\n    React.useEffect(() => {\n        if (props.villageValue) {\n            document.getElementById(props.id).value = props.villageValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.updateValue({ village: event.target.value });\n    }\n\n    if (!villageList) {\n        villageList = [];\n    }\n\n    if (!loading) {\n        if (villageList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageList.map((village, i) => {\n                            return (\n                                <option value={village.village_id} key={i}>{village.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Sub center First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PHC from '../PHC/PHC';\nimport VillageSec from '../VillageSecretariat/VillageSec';\nimport Village from '../Village/Village';\nimport axios from 'axios';\n\nimport { authHeader } from '../../helpers';\n\nimport './BasicDetailsForm.css';\nclass BasicDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaarFirst: \"\",\n            adhaarSecond: \"\",\n            adhaarThird: \"\",\n            mandal: props.getValue('mandal'),\n            phc: props.getValue('phc'),\n            village_sec: props.getValue('village_sec'),\n            village: props.getValue('village'),\n            name: props.getValue('name'),\n            surname: props.getValue('surname'),\n            relation: props.getValue('relation'),\n            gaurdian_name: props.getValue('gaurdian_name'),\n            age: props.getValue('age'),\n            gender: props.getValue('gender'),\n            maritalstatus: props.getValue('maritalstatus'),\n            phone: props.getValue('phone'),\n            bloodgroup: props.getValue('bloodgroup'),\n            PVTG: props.getValue('PVTG'),\n            address: props.getValue('address'),\n            deworming: props.getValue('deworming'),\n            phcList: props.getValue('phcList'),\n            villageList: props.getValue('villageList'),\n            villageSecList: props.getValue('villageSecList'),\n            phcLoading: false,\n            villageSecLoading: false,\n            villageLoading: false,\n            smoking: props.getValue('smoking'),\n            drinking: props.getValue('drinking')\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount = () => {\n        let adhaarNumber = this.props.getValue('adhaar');\n        if (adhaarNumber) {\n            this.setState({ adhaarFirst: adhaarNumber.substring(0, 4) });\n            this.setState({ adhaarSecond: adhaarNumber.substring(4, 8) });\n            this.setState({ adhaarThird: adhaarNumber.substring(8, 12) });\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    fetchOrUpdatePHCList = event => {\n        this.setState(\n            {\n                mandal: event.target.value,\n                phcList: [],\n                phc: \"\",\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                phcLoading: event.target.value ? true : false,\n            }\n        );\n        if (event.target.value) {\n            console.log(\"Getting phcs\");\n            axios.post(this.uri + 'GetPHCData/'\n                , {\n                    mandal_id: event.target.value\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ phcList: response.data, phcLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageSecList = (phc) => {\n        this.setState(\n            {\n                phc: phc,\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                villageSecLoading: phc ? true : false\n            }\n        );\n        if (phc) {\n            console.log(\"Getting village secs\");\n            axios.post(this.uri + 'GetVillageSecData/',\n                {\n                    PHC_id: phc\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageSecList: response.data, villageSecLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageList = (villageSec) => {\n        this.setState({ \n            villageList: [], \n            village: \"\", \n            village_sec: villageSec, \n            villageLoading: villageSec ? true : false \n        });\n        if (villageSec) {\n            console.log(\"Getting villages\");\n            axios.post(this.uri + 'GetVillageData/',\n                {\n                    villagesec_id: villageSec\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageList: response.data, villageLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    validate = () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        let validIds = [];\n        let invalidIds = [];\n        try {\n            //Adhaar fields validation\n            let adhaarIds = [\"adhaarFirst\", \"adhaarSecond\", \"adhaarThird\"];\n            let filled = false;\n            for (let i = 0; i < adhaarIds.length; i++) {\n                if (this.state[adhaarIds[i]] !== \"\") {\n                    filled = true;\n                    break;\n                }\n            }\n            if (filled) {\n                for (let i = 0; i < adhaarIds.length; i++) {\n                    if (this.state[adhaarIds[i]].length < 4) {\n                        invalidIds.push(adhaarIds[i]);\n                    }\n                    else {\n                        validIds.push(adhaarIds[i]);\n                    }\n                }\n            }\n            //Other field validations\n            Boolean(this.state.mandal) ? validIds.push('mandal') : invalidIds.push('mandal');\n            Boolean(this.state.phc) ? validIds.push('phc') : invalidIds.push('phc');\n            Boolean(this.state.village_sec) ? validIds.push('village_sec') : invalidIds.push('village_sec');\n            Boolean(this.state.village) ? validIds.push('village') : invalidIds.push('village');\n            Boolean(this.state.name) ? validIds.push('name') : invalidIds.push('name');\n            Boolean(this.state.surname) ? validIds.push('surname') : invalidIds.push('surname');\n            Boolean(this.state.relation) ? validIds.push('relation') : invalidIds.push('relation');\n            Boolean(this.state.gaurdian_name) ? validIds.push('gaurdian_name') : invalidIds.push('gaurdian_name');\n            Boolean(this.state.age) ? validIds.push('age') : invalidIds.push('age');\n            Boolean(this.state.gender) ? validIds.push('gender') : invalidIds.push('gender');\n            Boolean(this.state.maritalstatus) ? validIds.push('maritalstatus') : invalidIds.push('maritalstatus');\n            Boolean(this.state.bloodgroup) ? validIds.push('bloodgroup') : invalidIds.push('bloodgroup');\n            Boolean(this.state.PVTG) ? validIds.push('PVTG') : invalidIds.push('PVTG');\n            if (this.state.phone === \"\" || this.state.phone.length !== 10) {\n                invalidIds.push('phone');\n            }\n            else {\n                validIds.push('phone');\n            }\n            for (let i = 0; i < validIds.length; i++) {\n                document.getElementById(validIds[i]).style.border = \"\";\n            }\n            if (invalidIds.length > 0) {\n                window.location.href = \"#\" + invalidIds[0];\n                for (let i = 0; i < invalidIds.length; i++) {\n                    document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                }\n                document.getElementById(invalidIds[0]).focus();\n                throw new Error();\n            }\n            else {\n                window.location.href = \"#\";\n            }\n            //Still in try block? Means all fields valid. Now saving the data to parent component.\n            this.saveData();\n            this.props.changeData({ formName: \"Observations\" });\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({ [input]: document.getElementById(input).checked });\n    }\n\n    saveData = async () => {\n        let dataToSave = {\n            adhaar: this.state.adhaarFirst + this.state.adhaarSecond + this.state.adhaarThird,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            village_sec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            address: this.state.address,\n            children: this.state.children,\n            deworming: this.state.deworming,\n            phcList: this.state.phcList,\n            villageList: this.state.villageList,\n            villageSecList: this.state.villageSecList,\n            smoking: this.state.smoking,\n            drinking: this.state.drinking\n        }\n        await new Promise(resolve => this.props.changeData(dataToSave, () => resolve()));\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    restrictDigits = length => event => {\n        let strValue = event.target.value.toString();\n        if (strValue.length > length) {\n            event.target.value = Number(strValue.substring(0, length));\n        }\n        this.setState({ [event.target.id]: event.target.value.toString() });\n        if (event.target.id.includes('adhaar')) {\n            this.changeAdhaarFocus(event.target.id, event.target.value);\n        }\n    }\n\n    updateState = (valueObj) => {\n        this.setState(valueObj);\n    }\n\n    changeAdhaarFocus = (id, value) => {\n        if (id === 'adhaarFirst' && value.length === 4) {\n            document.getElementById('adhaarSecond').focus();\n        }\n        else if (id === 'adhaarSecond' && value.length === 4) {\n            document.getElementById('adhaarThird').focus();\n        }\n    }\n\n    render() {\n\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Basic Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3} xs={12}>\n                                        <Form.Label>Aadhar Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarFirst\"\n                                            value={this.state.adhaarFirst}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarSecond\"\n                                            value={this.state.adhaarSecond}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarThird\"\n                                            value={this.state.adhaarThird}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Mandal :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.fetchOrUpdatePHCList}\n                                            id=\"mandal\"\n                                            value={this.state.mandal}\n                                        >\n                                            <option value=\"\">Select Mandal</option>\n                                            <option value=\"01\">Chintoor</option>\n                                            <option value=\"02\">Yetapaka</option>\n                                            <option value=\"03\">Kunnavaram</option>\n                                            <option value=\"04\">V.R Puram</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>PHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <PHC phcList={this.state.phcList}\n                                            phcValue={this.state.phc}\n                                            fetchVillageSec={this.fetchOrUpdateVillageSecList}\n                                            loading={this.state.phcLoading}\n                                            id=\"phc\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sub Center :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <VillageSec\n                                            id=\"village_sec\"\n                                            villageSecValue={this.state.village_sec}\n                                            villageSecList={this.state.villageSecList}\n                                            loading={this.state.villageSecLoading}\n                                            fetchVillages={this.fetchOrUpdateVillageList}\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Village :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Village\n                                            updateValue={this.updateState}\n                                            id=\"village\"\n                                            villageList={this.state.villageList}\n                                            loading={this.state.villageLoading}\n                                            villageValue={this.state.village}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>First Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"First Name\"\n                                            id=\"name\"\n                                            onChange={this.handleChange('name')}\n                                            value={this.state.name} />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Surname :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Surname\"\n                                            onChange={this.handleChange('surname')}\n                                            id=\"surname\"\n                                            value={this.state.surname} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>S/o, D/o, W/o:</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"relation\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"son\"\n                                                    id=\"sonOf\"\n                                                    label=\"Son of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"son\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"daughter\"\n                                                    id=\"daughterOf\"\n                                                    label=\"Daughter of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"daughter\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"wife\"\n                                                    id=\"wifeOf\"\n                                                    label=\"Wife of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"wife\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Label>Guardian Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter Name\"\n                                            onChange={this.handleChange('gaurdian_name')}\n                                            id=\"gaurdian_name\"\n                                            value={this.state.gaurdian_name}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"age\">\n                                    <Col sm={3}>\n                                        <Form.Label>Age : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"99\"\n                                            type=\"number\"\n                                            placeholder=\"Enter age\"\n                                            onChange={this.restrictDigits(2)}\n                                            value={this.state.age} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Sex :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"gender\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"M\"\n                                                    id=\"male\"\n                                                    label=\"Male\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"M\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"F\"\n                                                    id=\"female\"\n                                                    label=\"Female\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"F\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NB\"\n                                                    id=\"transgender\"\n                                                    label=\"Transgender\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"NB\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Marital Status :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('maritalstatus')}\n                                            id=\"maritalstatus\"\n                                            value={this.state.maritalstatus}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"single\">Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"separated\">Separated</option>\n                                            <option value=\"divorced\">Divorced</option>\n                                            <option value=\"widowed\">Widowed</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Phone Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999999999\"\n                                            type=\"number\"\n                                            placeholder=\"Enter Contact number\"\n                                            id=\"phone\"\n                                            onChange={this.restrictDigits(10)}\n                                            value={this.state.phone} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"address\">\n                                    <Col sm={3}>\n                                        <Form.Label>Address : </Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <textarea\n                                            placeholder=\"Enter address\"\n                                            value={this.state.address}\n                                            onChange={this.handleChange('address')}\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"bloodgroup\">\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Group :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('bloodgroup')}\n                                            value={this.state.bloodgroup}\n                                        >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"o-\">O-</option>\n                                            <option value=\"o+\">O+</option>\n                                            <option value=\"a-\">A-</option>\n                                            <option value=\"a+\">A+</option>\n                                            <option value=\"b-\">B-</option>\n                                            <option value=\"b+\">B+</option>\n                                            <option value=\"ab-\">AB-</option>\n                                            <option value=\"ab+\">AB+</option>\n                                            <option value=\"N.A.\">Not yet known</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Deworming :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"deworming\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"deworming_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"deworming_no\"\n                                                    label=\"No\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Caste :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"PVTG\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"ST\"\n                                                    id=\"PVTG_st\"\n                                                    label=\"ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"ST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NST\"\n                                                    id=\"PVTG_nst\"\n                                                    label=\"Non ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"NST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"PVTG\"\n                                                    id=\"PVTG_pvt\"\n                                                    label=\"PVTG\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"PVTG\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Label>\n                                                    Habits :\n                                                </Form.Label>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <Row>\n                                            <Col sm={3}>\n                                               <Form.Label>\n                                                    Smoking\n                                               </Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"smoking\"\n                                                    name=\"smoking\"\n                                                    onClick={this.handleCheckboxChange('smoking')}\n                                                    checked={this.state.smoking}\n                                                />\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Label>Drinking</Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"drinking\"\n                                                    name=\"drinking\"\n                                                    onClick={this.handleCheckboxChange('drinking')}\n                                                    checked={this.state.drinking}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={styles.center}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validate}>Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BasicDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './TestDetailsForm.css';\n\nclass TestDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateoftesting: props.getValue('dateoftesting'),\n            serumCreatinine: props.getValue('serumCreatinine'),\n            bloodUrea: props.getValue('bloodUrea'),\n            uricAcid: props.getValue('uricAcid'),\n            electrolytes_sodium: props.getValue('electrolytes_sodium'),\n            electrolytes_potassium: props.getValue('electrolytes_potassium'),\n            bun: props.getValue('bun'),\n            pedalEdema: props.getValue('pedalEdema'),\n            pedaltype: props.getValue('pedaltype'),\n            kidneystatus: props.getValue('kidneystatus'),\n            ailments: props.getValue('ailments'),\n            dialysis: props.getValue('dialysis'),\n            doctorreq: props.getValue('doctorreq'),\n            opd: props.getValue('opd'),\n            btn: \"Submit\",\n            loading: false,\n        }\n    }\n\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    previous = () => {\n        console.log(this.state)\n        this.saveData().then(() => {\n            this.props.changeData({ formName: \"BloodProfile\" });\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateOneDigitAfterDecimalSerumCreatine = event => {\n        if (event.target.value > 2 && event.target.value < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBloodUrea = event => {\n        if (event.target.value > 15 && event.target.value < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalUricAcid = event => {\n        if (event.target.value > 2.6 && event.target.value < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesSodium = event => {\n        if (event.target.value > 135 && event.target.value < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesPotassium = event => {\n        if (event.target.value > 3.5 && event.target.value < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBun = event => {\n        if (event.target.value > 8 && event.target.value < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"HospitalDetails\");\n    }\n\n    // mandatoryFieldCheck = () => {\n    //     let invalidIds = [];\n    //     try {\n    //         if (this.state.kidneystatus === 'abnormal') {\n    //             if (this.state.doctorreq === \"\") {\n    //                 invalidIds.push('doctorreq')\n    //             }\n    //             if (this.state.dialysis === \"\") {\n    //                 invalidIds.push('dialysis')\n    //             }\n    //             if (invalidIds.length > 0) {\n    //                 window.location.href = \"#\" + invalidIds[0];\n    //                 for (let i = 0; i < invalidIds.length; i++) {\n    //                     document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n    //                 }\n    //                 document.getElementById(invalidIds[0]).focus();\n    //                 throw new Error();\n    //             }\n    //             else {\n    //                 window.location.href = \"#\";\n    //             }\n    //         }\n    //     }\n    //     catch (err) {\n    //         // console.log(false);\n    //     }\n    // }\n\n    validateAndSubmit = () => {\n            console.log(this.state)\n            this.setState({ btn: \"Submitting\" });\n            this.setState({ loading: true })\n            this.saveData()\n                .then(() => {\n                    console.log(this.state)\n                    this.props.submit();\n                })\n\n    }\n\n    serumCreatinineAfterReRendering = () => {\n        if (this.state.serumCreatinine > 2 && this.state.serumCreatinine < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (this.state.serumCreatinine > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bloodUreaAfterReRendering = () => {\n        if (this.state.bloodUrea > 15 && this.state.bloodUrea < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bloodUrea > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    uricAcidfterReRendering = () => {\n        if (this.state.uricAcid > 2.6 && this.state.uricAcid < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (this.state.uricAcid > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesSodiumReRendering = () => {\n        if (this.state.electrolytes_sodium > 135 && this.state.electrolytes_sodium < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_sodium > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesPotassiumReRendering = () => {\n        if (this.state.electrolytes_potassium > 3.5 && this.state.electrolytes_potassium < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_potassium > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bunReRendering = () => {\n        if (this.state.bun > 8 && this.state.bun < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bun > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.state)\n        this.serumCreatinineAfterReRendering();\n        this.bloodUreaAfterReRendering();\n        this.uricAcidfterReRendering();\n        this.electrolytesPotassiumReRendering();\n        this.electrolytesSodiumReRendering();\n        this.bunReRendering();\n\n    }\n\n    render() {\n        const { loading, btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Testing Details</legend>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date of Testing : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"date\" placeholder=\"\" id=\"dateoftesting\" onChange={this.handleChange('dateoftesting')}\n                                            value={this.state.dateoftesting} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Serum Creatinine : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control min=\"0\" type=\"number\" placeholder=\"mg/dl\" id=\"serumCreatinine\" onChange={this.validateOneDigitAfterDecimalSerumCreatine}\n                                            value={this.state.serumCreatinine} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Urea : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bloodUrea\" onChange={this.validateOneDigitAfterDecimalBloodUrea}\n                                            value={this.state.bloodUrea}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Uric Acid : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"uricAcid\" onChange={this.validateOneDigitAfterDecimalUricAcid}\n                                            value={this.state.uricAcid} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Electrolytes </h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sodium(Na) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_sodium\" onChange={this.validateOneDigitAfterDecimalElectrolytesSodium}\n                                            value={this.state.electrolytes_sodium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Potassium(K) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_potassium\" onChange={this.validateOneDigitAfterDecimalElectrolytesPotassium}\n                                            value={this.state.electrolytes_potassium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>BUN (Blood Urea Nitrogen) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bun\" onChange={this.validateOneDigitAfterDecimalBun}\n                                            value={this.state.bun} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={6} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row} >\n                                    <Col sm={6}>\n                                        <Form.Label>Pedal Edema :</Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"Y\"\n                                                    id=\"yes\"\n                                                    label=\"Yes\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"Y\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"N\"\n                                                    id=\"no\"\n                                                    label=\"No\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"N\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6} >\n                                {(() => {\n                                    if (this.state.pedalEdema === 'Y') {\n                                        return (\n                                            <Form.Group as={Row} controlId=\"pedaltype\">\n                                                <Col sm={6}>\n                                                    <Form.Label>Pedal Type :</Form.Label>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <Form.Control as=\"select\" onChange={this.handleChange('pedaltype')} value={this.state.pedaltype}>\n                                                        <option value=\"\">Choose...</option>\n                                                        <option value=\"single leg\">Single Leg</option>\n                                                        <option value=\"bilateral\">Bilateral</option>\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <p></p>\n                                        )\n                                    }\n                                })()}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={3}>\n                                <Form.Label>Kidney Functioning Status :</Form.Label>\n                            </Col>\n                            <Col sm={3}>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"good\"\n                                            id=\"good\"\n                                            label=\"Good\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"good\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"abnormal\"\n                                            id=\"abnormal\"\n                                            label=\"Abnormal\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"abnormal\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {(() => {\n                            if (this.state.kidneystatus === 'good') {\n                                return (\n                                    <Container></Container>\n                                )\n                            }\n                            else if (this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Specify the ailments : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.ailments} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={3}>\n                                                <Form.Label>Need for Dialysis :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"dialysis\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"yes\"\n                                                            label=\"Yes\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"no\"\n                                                            label=\"No\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={4}>\n                                                <Form.Label>Need for immediate Doctor Supervision :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"doctorreq\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"true\"\n                                                            label=\"Yes\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"false\"\n                                                            label=\"No\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    </React.Fragment>\n                                )\n                            }\n                        })()}\n                        <br />\n                        {(() => {\n                            if (this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={4}>\n                                            <Form.Label>Patient Type :</Form.Label>\n                                        </Col>\n                                        <Col sm={3} id=\"opd \">\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"true\"\n                                                        id=\"opd\"\n                                                        label=\"IP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"true\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"false\"\n                                                        id=\"opd\"\n                                                        label=\"OP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"false\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n\n                        {(() => {\n                            if (this.state.opd === 'true' && this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndNext}\n                                                className=\"cool-button\"\n                                            >Next</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous.bind(this)}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndSubmit}\n                                                className=\"cool-button\"\n                                            >{loading && <i className=\"spinner-border spinner-border-sm\" role=\"status\"></i>} {btn}</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n                    </fieldset>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default TestDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n// import { DateTime } from 'react-datetime-bootstrap';\n\nclass HospitalDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hospitalAdmit: props.getValue('hospitalAdmit'),\n            dateOfAdmit: props.getValue('dateOfAdmit'),\n            refered: props.getValue('refered'),\n            referredto: props.getValue('referredto'),\n            status: props.getValue('status'),\n            treatmentDone: props.getValue('treatmentDone'),\n            dialysis: props.getValue('dialysis'),\n            discharge: props.getValue('discharge'),\n            dischargeStatus: props.getValue('dischargeStatus'),\n            deceased: props.getValue('deceased'),\n            deathDate: props.getValue('deathDate'),\n            placeOfDeath: props.getValue('placeOfDeath'),\n            causeOfDeath: props.getValue('causeOfDeath'),\n            recovery: props.getValue('recovery'),\n            otherReferedHospitalName: \"\",\n            referredToSelected: props.getValue('referredToSelected') ? props.getValue('referredToSelected') : 'NO',\n            btn: \"Submit\",\n            loading:false,\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n\n    validateAndSubmit = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        // this.props.changeData(this.state);\n        this.setState({btn:\"Submitting\"});\n        this.setState({loading:true})\n       await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        // this.loadNextForm(\"HospitalDetails\");\n       this.props.submit();\n\n\n\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"TestDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    handleReferredTo = event => {\n        let value = event.target.value;\n        if(value === \"\"){\n            this.setState({ referredToSelected: 'NO', referredto: \"\" })\n        }\n        else if(value === 'other'){\n            this.setState({referredToSelected: 'OTHER', referredto: \"\"});\n        }\n        else {\n            this.setState(\n                { referredto: value, referredToSelected: 'YES' }\n            );\n        }\n    }\n\n    render() {\n      const {loading} = this.state;\n      const {btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Hospital Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"phc\">\n                                    <Col sm={3}>\n                                        <Form.Label>Hospital admitted in :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hospitalAdmit')}\n                                            value={this.state.hospitalAdmit} >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"PHC/Tulasipaka\">PHC/Tulasipaka</option>\n                                            <option value=\"PHC/E.D Pally\">PHC/E.D Pally</option>\n                                            <option value=\"PHC/Laxmipuram\">PHC/Laxmipuram</option>\n                                            <option value=\"PHC/Nellipaka\">PHC/Nellipaka</option>\n                                            <option value=\"PHC/Gowridevipeta\">PHC/Gowridevipeta</option>\n                                            <option value=\"PHC/Kuturu\">PHC/Kuturu</option>\n                                            <option value=\"PHC/Rekhapally\">PHC/Rekhapally</option>\n                                            <option value=\"PHC/Jeediguppa\">PHC/Jeediguppa</option>\n                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                            <option value=\"other\">other</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date Of Admit :</Form.Label>\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <input type=\"date\" value={this.state.dateOfAdmit} className=\"form-control\" id=\"dateOfAdmit\" onChange={this.handleChange('dateOfAdmit')} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>  Refered To any Hospitals :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"refered_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"refered_no\"\n                                                    label=\"No\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        {(() => {\n                            if (this.state.refered === \"true\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"referredto\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Hospital Refered to :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control\n                                                            as=\"select\"\n\n                                                            onChange={this.handleReferredTo}\n                                                            value={this.state.referredToSelected === 'OTHER' ? 'other' : this.state.referredto} >\n                                                            <option value=\"\">Choose...</option>\n                                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                                            <option value=\"other\">other</option>\n                                                        </Form.Control>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {(() => {\n                                                            if (this.state.referredToSelected === 'OTHER') {\n                                                                return (\n                                                                    <Form.Control as=\"textarea\"\n                                                                        type=\"text\"\n                                                                        placeholder=\"Enter Hospital Name\"\n                                                                        onChange={this.handleChange('referredto')}\n                                                                        value={this.state.referredto} />\n                                                                )\n                                                            }\n                                                            else {\n                                                                return;\n                                                            }\n                                                        })()}\n                                                    </Col>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"status\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Health Status at the time of referring :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Health Status at the time of referring\"\n                                                            onChange={this.handleChange('status')}\n                                                            value={this.state.status} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Need for dialysis :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"true\"\n                                                                    id=\"dialysis_yes\"\n                                                                    label=\"Yes\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"true\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"false\"\n                                                                    id=\"dialysis_no\"\n                                                                    label=\"No\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"false\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Treatment Provided\"\n                                                            onChange={this.handleChange('treatmentDone')}\n                                                            value={this.state.treatmentDone}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"discharge\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {/* <DateTime pickerOptions={{ format: \"LL\" }} /> */}\n                                                        <input type=\"date\" value={this.state.discharge} id=\"discharge\" className=\"form-control\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"recovery\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Recovery Status :</Form.Label>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Control as=\"textarea\" rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the recovery Status at the time of discharge\"\n                                                            onChange={this.handleChange('recovery')}\n                                                            value={this.state.recovery} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            }\n                            else if (this.state.refered === \"false\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control placeholder=\"Enter details\" as=\"textarea\" rows=\"3\" />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <input type=\"date\" className=\"form-control\" id=\"discharge2\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                )\n                            }\n                        })()}\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.previous.bind(this)} >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validateAndSubmit}>{loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default HospitalDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './ObservationsForm.css';\n\nclass ObservationsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: props.getValue('weight'),\n            height: props.getValue('height'),\n            temperature: props.getValue('temperature'),\n            bloodpressure: props.getValue('bloodpressure'),\n            heartrate: props.getValue('heartrate'),\n            pulserate: props.getValue('pulserate'),\n            respiratoryrate: props.getValue('respiratoryrate'),\n            bpm: props.getValue('bpm'),\n            fever: props.getValue('fever'),\n            aches: props.getValue('aches'),\n            cold: props.getValue('cold'),\n            cough: props.getValue('cough'),\n            fatigue: props.getValue('fatigue'),\n            diarrohea: props.getValue('diarrohea'),\n            bleeding: props.getValue('bleeding'),\n            infection: props.getValue('infection'),\n            otherSymptoms: props.getValue('otherSymptoms')\n        }\n    }\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({[input]: document.getElementById(input).checked});\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"BloodProfile\");\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"UserDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Observations By Doctor</legend>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Vitals</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Weight :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Weight in kgs\"\n                                            onChange={this.handleChange('weight')}\n                                            value={this.state.weight}\n                                            id=\"weight\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Height :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Height in cms\"\n                                            onChange={this.handleChange('height')}\n                                            value={this.state.height}\n                                            id=\"height\"\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Temperature :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"° Farhenheit\"\n                                            onChange={this.handleChange('temperature')}\n                                            value={this.state.temperature}\n                                            id=\"temperature\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Pressure :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"XX/XX (mm of Hg)\"\n                                            onChange={this.handleChange('bloodpressure')}\n                                            value={this.state.bloodpressure}\n                                            id=\"bloodpressure\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Heart Rate</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('heartrate')}\n                                            value={this.state.heartrate}\n                                            id=\"heartrate\"\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Pulse Rate:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('pulserate')}\n                                            value={this.state.pulserate}\n                                            id=\"pulserate\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Respiratory Rate :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('respiratoryrate')}\n                                            value={this.state.respiratoryrate}\n                                            id=\"respiratoryrate\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Sypmtoms</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Fever :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fever\"\n                                            name=\"fever\"\n                                            onClick={this.handleCheckboxChange('fever')}\n                                            defaultChecked={this.state.fever}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cold :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cold\"\n                                            name=\"cold\"\n                                            onClick={this.handleCheckboxChange('cold')}\n                                            defaultChecked={this.state.cold}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cough :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cough\"\n                                            name=\"cough\"\n                                            onClick={this.handleCheckboxChange('cough')}\n                                            defaultChecked={this.state.cough}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Fatigue : </Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fatigue\"\n                                            name=\"fatigue\"\n                                            onClick={this.handleCheckboxChange('fatigue')}\n                                            defaultChecked={this.state.fatigue}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Aches & Pains :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"aches\"\n                                            name=\"aches\"\n                                            onClick={this.handleCheckboxChange('aches')}\n                                            defaultChecked={this.state.aches}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Diarrohea :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"diarrohea\"\n                                            name=\"diarrohea\"\n                                            onClick={this.handleCheckboxChange('diarrohea')}\n                                            defaultChecked={this.state.diarrohea}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Bleeding :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            id=\"bleeding\"\n                                            name=\"bleeding\"\n                                            type=\"checkbox\"\n                                            onClick={this.handleCheckboxChange('bleeding')}\n                                            defaultChecked={this.state.bleeding}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Infection :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"infection\"\n                                            name=\"bleeding\"\n                                            onClick={this.handleCheckboxChange('infection')}\n                                            defaultChecked={this.state.infection}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Others :</Form.Label>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <textarea\n                                            placeholder=\"Other Symptoms(If any)\"\n                                            onChange={this.handleChange('otherSymptoms')}\n                                            value={this.state.otherSymptoms}\n                                            id=\"otherSymptoms\"\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\"\n                                    onClick={this.previous}\n                                    className=\"cool-button\"\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\"\n                                    onClick={this.validateAndNext}\n                                    className=\"cool-button\"\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default ObservationsForm;\n","import React from 'react';\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap';\nimport './BloodProfile.css';\nclass BloodProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: props.getValue('date'),\n            wbc: props.getValue('wbc'),\n            pcv: props.getValue('pcv'),\n            rbc: props.getValue('rbc'),\n            mcv: props.getValue('mch'),\n            mchc: props.getValue('mchc'),\n            rdw: props.getValue('rdw'),\n            monocytes: props.getValue('monocytes'),\n            lymphocytes: props.getValue('lymphocytes'),\n            eosinophils: props.getValue('eosinophils'),\n            neutroophils: props.getValue('neutrophils'),\n            haemoglobin: props.getValue('haemoglobin'),\n            platelet: props.getValue('platelet'),\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    next = () => {\n        this.saveData().then(() => {\n            this.props.changeData({formName: \"TestDetails\"});\n        })\n    }\n\n    previous = () => {\n        this.saveData().then(() => {\n            this.props.changeData({formName: \"Observations\"});\n        })\n    }\n\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Blood Profile</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Date of testing :</Form.Label>\n                                    </Col>\n                                <Col sm={3}>\n                                 <Form.Control \n                                   rows=\"3\"\n                                   type=\"date\"\n                                   placeholder=\"DD/MM/YYYY\"\n                                   onChange={this.handleChange('date')}\n                                   value={this.state.date}\n                                   id=\"date\" />\n                                  </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Total WBC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"WBC in (K/microL)\"\n                                            onChange={this.handleChange('wbc')}\n                                            value={this.state.wbc}\n                                            id=\"wbc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Haemoglobin :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Haemoglobin in (g/dL)\"\n                                            onChange={this.handleChange('haemoglobin')}\n                                            value={this.state.haemoglobin}\n                                            id=\"haemoglobin\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Packed Cell Volume :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Packed Cell Volume in (%)\"\n                                            onChange={this.handleChange('pcv')}\n                                            value={this.state.pcv}\n                                            id=\"pcv\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>RBC Count :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"RBC in (mill/mm3)\"\n                                            onChange={this.handleChange('rbc')}\n                                            value={this.state.rbc}\n                                            id=\"rbc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCV :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCV in (fL)\"\n                                            onChange={this.handleChange('mcv')}\n                                            value={this.state.mcv}\n                                            id=\"mcv\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCH :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCH in (g)\"\n                                            onChange={this.handleChange('mch')}\n                                            value={this.state.mch}\n                                            id=\"mch\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCHC in (g/dL)\"\n                                            onChange={this.handleChange('mchc')}\n                                            value={this.state.mchc}\n                                            id=\"mchc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Red Cell Distotion Width :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Red Cell Distotion Width  (%)\"\n                                            onChange={this.handleChange('rdw')}\n                                            value={this.state.rdw}\n                                            id=\"rdw\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Platelet Count :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Platlet in (K/microL)\"\n                                            onChange={this.handleChange('platelet')}\n                                            value={this.state.platelet}\n                                            id=\"platelet\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Differential Count</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Monocytes:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('monocytes')}\n                                            value={this.state.monocytes}\n                                            id=\"monocytes\"\n                                        />\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Lymphocytes :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('lymphocytes')}\n                                            value={this.state.lymphocytes}\n                                            id=\"lymphocytes\" />\n\n                                    </Col>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Eosinophils :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('eosinophils')}\n                                            value={this.state.Eosinophils}\n                                            id=\"eosinophils\" />\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Neutrophils :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('neutrophils')}\n                                            value={this.state.Neutrophils}\n                                            id=\"neutroophils\" />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row style={{textAlign: \"center\"}}>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button \n                                    variant=\"primary\"\n                                    className=\"cool-button\"\n                                    onClick={this.previous}\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button \n                                    variant=\"primary\"\n                                    className=\"cool-button\"\n                                    onClick={this.next}\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BloodProfile;\n\n\n","import React from 'react';\n\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FormSuccess.css';\n\nexport default function FormSuccess() {\n\n    const redirect = () => {\n        window.location.href = \"/add\";\n    }\n\n    return (\n        <Container>\n            <fieldset style={{textAlign: \"center\"}}>\n                <legend className=\"success-legend\">Success</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Data Saved Sucessfully</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        <Button variant=\"primary\"\n                        onClick={redirect}\n                        className=\"cool-button\"\n                        >\n                            Add another patient\n                        </Button>\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container>\n    )\n}","import React from 'react';\n\nimport BasicDetailsForm from '../BasicDetailsForm/BasicDetailsForm';\nimport TestDetailsForm from '../TestDetailsForm/TestDetailsForm';\nimport HospitalDetailsForm from '../HospitalDetailsForm/HospitalDetailsForm';\nimport ObservationsForm from '../ObservationsForm/ObservationsForm';\nimport BloodProfile from '../BloodProfile/BloodProfile';\n\nimport axios from 'axios';\nimport { uri } from '../../index';\nimport FormSuccess from '../FormSuccess/FormSuccess';\n\nimport { authenticationService } from '../../services';\nimport { authHeader } from '../../helpers';\n\nclass MainForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            formName: \"UserDetails\",\n            pkid: this.generatePkid(32)\n        }\n    }\n\n    generatePkid = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    appendState = (childState, callback) => {\n        if (callback) {\n            this.setState(childState, callback());\n        }\n        else {\n            this.setState(childState);\n        }\n    }\n\n    getValue = (key) => {\n        return this.state[key] === undefined ? \"\" : this.state[key];\n    }\n\n    submitForm = () => {\n        let opdCheck = false\n        let dialysisCheck = false\n        let doctorreqCheck =  false\n        if (this.state.kidneystatus === \"abnormal\") {\n            if (this.state.dialysis === 'true') {\n                dialysisCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n                dialysisCheck = false\n        }\n\n        if (this.state.kidneystatus === \"abnormal\") {\n           \n            if (this.state.doctorreq === 'true') {\n                doctorreqCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n            doctorreqCheck = false\n        }\n\n        if (this.state.kidneystatus === 'good' || this.state.doctorreq === 'false') {\n            opdCheck = false\n        }\n        else if (this.state.kidneystatus === 'abnormal' && this.state.doctorreq === 'true') {\n            opdCheck = true\n        }\n        let dataToSend = {\n            pkid: this.state.pkid,\n            adhaar: ['dev', 'dev2'].indexOf(authenticationService.currentUserValue.username) !== -1 ? this.state.adhaar : \"\",\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            villagesec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            dateoftesting: this.state.dateoftesting ? this.state.dateoftesting : \"\",\n            serumCreatinine: this.state.serumCreatinine ? this.state.serumCreatinine : 0,\n            bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n            uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n            electrolytes_sodium: this.state.electrolytes_sodium ? this.state.electrolytes_sodium : 0,\n            electrolytes_potassium: this.state.electrolytes_potassium ? this.state.electrolytes_potassium : 0,\n            bun: this.state.bun ? this.state.bun : 0,\n            pedalEdema: this.state.pedalEdema ? this.state.pedalEdema : \"\",\n            pedaltype: this.state.pedalEdema === 'N' ? \"\" : this.state.pedaltype,\n            kidneystatus: this.state.kidneystatus !== undefined ? this.state.kidneystatus : \"\",\n            ailments: this.state.kidneystatus === \"good\" ? \"\" : this.state.ailments,\n            dialysis: dialysisCheck,\n            doctorreq: doctorreqCheck,\n            hospitalAdmit: this.state.hospitalAdmit !== undefined ? this.state.hospitalAdmit : \"\",\n            dateOfAdmit: this.state.dateOfAdmit !== undefined ? this.state.dateOfAdmit : \"\",\n            refered: this.state.refered ? this.state.refered : false,\n            referredto: this.state.referred === \"yes\" ? this.state.referredto : \"\",\n            ref_status: this.state.referred === \"yes\" ? this.state.status : \"\",\n            treatmentDone: this.state.referred === \"yes\" ? this.state.treatmentDone : \"\",\n            discharge: this.state.referred === \"no\" ? this.state.discharge : \"\",\n            dischargeStatus: this.state.referred === \"no\" ? this.state.dischargeStatus : \"\",\n            deceased: this.state.referred === \"no\" ? this.state.deceased : false,\n            deathDate: this.state.deceased === \"yes\" ? this.state.deathDate : \"\",\n            placeOfDeath: this.state.deceased === \"yes\" ? this.state.placeOfDeath : \"\",\n            causeOfDeath: this.state.deceased === \"yes\" ? this.state.causeOfDeath : \"\",\n            deworming: this.state.deworming ? this.state.deworming : false,\n            type_data: ['dev', 'dev2'].indexOf(authenticationService.currentUserValue.username) !== -1 ? \"Development\" : \"Production\",\n            opd: opdCheck,\n            weight: this.state.weight ? this.state.weight : 0.0,\n            height: this.state.height ? this.state.height : 0.0,\n            BasicVitals: {\n                Temperature: this.state.temperature,\n                BP: this.state.bloodpressure,\n                HR: this.state.heartrate,\n                Pulse: this.state.pulserate,\n                RespRate: this.state.respiratoryrate\n            },\n            BasicSymptoms: {\n                Fever: this.state.fever,\n                Cold: this.state.cold,\n                Cough: this.state.cough,\n                Fatigue: this.state.fatigue,\n                Aches: this.state.aches,\n                Diarrohea: this.state.diarrohea,\n                Bleeding: this.state.bleeding,\n                Infection: this.state.infection,\n                others: this.state.otherSymptoms\n            },\n            report: {},\n            patient_status: \"Closed\",\n            hb: this.state.haemoglobin ? this.state.haemoglobin : 0.0,\n            wbc_count: this.state.wbc ? this.state.wbc : 0.0,\n            diffrential_count: {\n                monocytes: this.state.monocytes ? this.state.monocytes : null,\n                lymphocytes: this.state.lymphocytes ? this.state.lymphocytes : null,\n                eosinophils: this.state.eosinophils ? this.state.eosinophils : null\n            },\n            plat_count: this.state.platelet ? this.state.platelet : 0.0,\n            habits: {\n                smoking: this.state.smoking,\n                drinking: this.state.drinking\n            }\n        }\n        axios.post(uri + 'AddPatient/',\n            dataToSend,\n            {\n                headers: authHeader()\n            }).then(response => {\n                console.log(dataToSend);\n                // console.log(\"Sending data\");\n                // console.log(response);\n                if (response.data.pkid === this.state.pkid) {\n                    this.setState({}, this.setState({ formName: \"Success\" }));\n                }\n                else {\n                    alert(\"Failed to save.. Please Try again\");\n                    // this.setState({ formName: \"Success\" });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        switch (this.state.formName) {\n            case \"UserDetails\":\n                return <BasicDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"TestDetails\":\n                return <TestDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"HospitalDetails\":\n                return <HospitalDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Observations\": \n                return <ObservationsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"BloodProfile\":\n                return <BloodProfile submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Success\":\n                return <FormSuccess />\n            default:\n                return \"\";\n        }\n    }\n}\n\nexport default MainForm;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Error404() {\n\n    var seconds = 3;\n\n    setInterval(() => {\n        seconds--;\n        document.getElementById('seconds').innerHTML = seconds;\n        if(seconds === 0){\n            clearInterval();\n            window.location.href = \"/\";\n        }\n    }, 1000);\n\n    return (\n        <Container>\n            <fieldset style={{ textAlign: \"center\" }}>\n                <legend className=\"success-legend\">Error 404</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faTimesCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Page Not Found</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        Redirecting to homepage in <span id=\"seconds\">{seconds}</span> seconds...\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container >\n    )\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\n// import Header from '../Header/Header';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <React.Fragment>\n            {/* <Header /> */}\n            <Component {...props} />\n        </React.Fragment>\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './Login.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { authenticationService } from '../../services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            btn:\"Login\",\n            username: \"\",\n            password: \"\",\n            loading:false,\n            text:false\n        }\n        if (authenticationService.currentUserValue) {\n            this.props.history.push('/');\n        }\n    }\n\n    login = () => {\n        let { username, password } = this.state;\n        if(!username || !password)\n        {\n          alert(\"Both fields are mandatory\");\n        }\n        else{\n        this.setState({ btn: \"Logging in\", loading: true });\n        authenticationService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => {\n                    console.log(error);\n                    this.setState({ btn: \"Login\", loading: false });\n                }\n            );\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        const {loading}=this.state;\n        const { btn } = this.state ;\n        return (\n            <Container style={{ marginTop: \"10vh\", textAlign: \"center\" }}>\n                <Row className=\"heading\">\n                    <Col>\n                        <h2>Kindly Login to access all features..</h2>\n                    </Col>\n                </Row>\n                <fieldset style={{ marginTop: \"10vh\"}}>\n                    <legend>Enter your Login Details</legend>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"username\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Username :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter username\" onChange={this.handleChange('username')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"password\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Password :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter password\" type=\"password\" onChange={this.handleChange('password')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                        <Col>\n                        <Button className=\"cool-button\" size=\"lg\" onClick={this.login} >\n                          {loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MainForm from './components/MainForm/MainForm';\nimport Error404 from './components/Error404/Error404';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Login from './components/Login/Login';\nimport { history } from './helpers';\nimport { authenticationService } from './services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    authenticationService.currentUser.subscribe(x => this.setState({ currentUser: x }, this.refreshAuth));\n  }\n\n  refreshAuth = () => {\n    let { currentUser } = this.state;\n    if (currentUser) {\n      let msecDifference = new Date().getTime() - new Date(this.state.currentUser.timestamp).getTime();\n      if(msecDifference / (1000 * 60 * 60) >= 4){\n        authenticationService.logout();\n      }\n      else if(msecDifference / (1000 * 60 * 60) > 3) {\n        authenticationService.refresh();\n      }\n    }\n  }\n\n  logout() {\n    authenticationService.logout();\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Router history={history}>\n          <div>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/\" component={Home} />\n              <PrivateRoute exact path=\"/about\" component={About} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/add\" component={MainForm} />\n              {/* <PrivateRoute exact path=\"/directory\" component={Directory} /> */}\n              <Route component={Error404} />\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'test', lastName: 'test' },\n        { id: 2, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureFakeBackend } from './helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport const uri = process.env.REACT_APP_SERVER_URI;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}