{"version":3,"sources":["components/About/img/S1.png","components/About/img/S2.png","components/About/img/S3.png","components/About/img/S4.png","components/About/img/S5.png","components/About/img/S6.png","components/About/img/S7.png","components/About/img/S8.jpeg","assets/logo_transparent.png","components/Loader/Loader.js","components/Cards/Cards.js","CovidApi/index.js","components/Home/Home.js","components/About/About.js","components/Sidebar/Sidebar.js","components/ModalBody/ModalBody.js","components/GenericTable/GenericTable.js","services/authentication.service.js","helpers/auth-header.js","helpers/handle-response.js","helpers/history.js","components/Directory/Directory.js","components/HealthStats/HealthStats.js","components/PVTGTracker/PVTGTracker.js","components/PETracker/PETracker.js","components/Dashboard/Dashboard.js","components/PHC/PHC.js","components/VillageSecretariat/VillageSec.js","components/Village/Village.js","components/BasicDetailsForm/BasicDetailsForm.js","components/TestDetailsForm/TestDetailsForm.js","components/HospitalDetailsForm/HospitalDetailsForm.js","components/ObservationsForm/ObservationsForm.js","components/FormSuccess/FormSuccess.js","components/MainForm/MainForm.js","components/Error404/Error404.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/Login/Login.js","App.js","serviceWorker.js","helpers/fake-backend.js","index.js"],"names":["module","exports","OurLoader","Container","Row","style","textAlign","Col","type","color","height","width","React","Component","Cards","data","confirmed","recovered","deaths","active","className","CardDeck","Card","text","bg","xs","s","md","Body","Title","Text","start","end","duration","separator","fetchData","a","axios","get","modifiedData","Home","state","fetchedData","this","setState","Jumbotron","About","marginTop","sm","alt","src","imgCard3","imgCard1","imgCard2","imgCard4","imgCard5","imgCard6","imgCard7","imgCard8","SideBar","props","views","useEffect","i","length","element","document","getElementById","currentView","classList","contains","remove","add","id","onClick","changeView","ModalBody","patient","patientDetails","firstName","name","lastName","surname","fullName","concat","pedalEdema","isPedalTypeEmpty","pedaltype","adhaar","slice","Form","Group","as","Label","Control","placeholder","value","toUpperCase","disabled","village","age","phone","bloodgroup","deceased","PVTG","GenericTable","handleClose","show","handleShowCustom","indx","patientDetailsModal","handleSearchChange","event","idFragments","target","split","obj","key","dataType","dataTypes","keys","indexOf","Number","MIN_VALUE","MAX_VALUE","isNotNullOrUndefinedOrBlank","undefined","clearFilters","min","max","noOfRows","changeNoOfRows","Math","abs","nextPage","currentPageIndex","previousPage","handleShow","bind","console","log","stateObj","headers","loading","pageData","dataLength","lastPageIndex","floor","filter","rowData","toLowerCase","includes","toString","Fragment","Button","variant","onChange","Table","striped","bordered","hover","map","header","index","colSpan","inputType","display","row","indexRow","indexCol","Modal","onHide","Header","closeButton","Footer","justifyContent","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","URI","process","authenticationService","login","username","password","post","then","handleResponse","user","userData","token","timestamp","Date","setItem","stringify","next","logout","removeItem","refresh","newData","currentUser","asObservable","authHeader","currentUserValue","Authorization","response","status","history","createBrowserHistory","Directory","uri","getVillageNameFromId","villageList","village_id","searchField","patientList","responseVillage","catch","err","structuredData","newPatient","HealthStats","patientCount","responseStats","responseAll","BloodUrea","Electrolytes_Potassium","Electrolytes_Sodium","SerumCreatinine","UricAcid","bloodUreaData","labels","datasets","label","backgroundColor","hoverBackgroundColor","Severe","potassiumData","sodiumData","uricAcidData","serumCreatinineData","MI","right","options","title","fontSize","legend","position","PVTGTracker","pvtgData","ST","NST","PETracker","peData","PE","total","peTypeData","Single","Bilateral","Dashboard","nextView","dashView","pageWrapId","outerContainerId","PHC","phcList","phcValue","handleChange","fetchVillageSec","phc","PHC_id","VillageSec","villageSecList","villageSecValue","fetchVillages","villageSec","villagesec_id","Village","villageValue","updateValue","BasicDetailsForm","componentDidMount","adhaarNumber","getValue","adhaarFirst","substring","adhaarSecond","adhaarThird","input","fetchOrUpdatePHCList","mandal","village_sec","phcLoading","mandal_id","fetchOrUpdateVillageSecList","villageSecLoading","fetchOrUpdateVillageList","villageLoading","validate","validIds","invalidIds","adhaarIds","filled","push","Boolean","relation","gaurdian_name","gender","maritalstatus","border","window","location","href","focus","Error","saveData","changeData","formName","handleCheckboxChange","checked","dataToSave","address","children","deworming","smoking","drinking","Promise","resolve","loadNextForm","restrictDigits","strValue","changeAdhaarFocus","updateState","valueObj","styles","center","paddingLeft","left","Check","controlId","TestDetailsForm","previous","validateOneDigitAfterDecimalSerumCreatine","validateOneDigitAfterDecimalBloodUrea","validateOneDigitAfterDecimalUricAcid","validateOneDigitAfterDecimalElectrolytesSodium","validateOneDigitAfterDecimalElectrolytesPotassium","validateOneDigitAfterDecimalBun","validateAndNext","validateAndSubmit","btn","submit","serumCreatinineAfterReRendering","serumCreatinine","bloodUreaAfterReRendering","bloodUrea","uricAcidfterReRendering","uricAcid","electrolytesSodiumReRendering","electrolytes_sodium","electrolytesPotassiumReRendering","electrolytes_potassium","bunReRendering","bun","dateoftesting","kidneystatus","ailments","dialysis","doctorreq","opd","paddingRight","role","HospitalDetailsForm","handleReferredTo","referredToSelected","referredto","hospitalAdmit","dateOfAdmit","refered","treatmentDone","discharge","dischargeStatus","deathDate","placeOfDeath","causeOfDeath","recovery","otherReferedHospitalName","rows","class","ObservationsForm","weight","temperature","bloodpressure","heartrate","pulserate","respiratoryrate","bpm","fever","aches","cold","cough","fatigue","diarrohea","bleeding","infection","FormSuccess","icon","faCheckCircle","size","marginBottom","MainForm","generatePkid","result","characters","charactersLength","charAt","random","appendState","childState","callback","submitForm","opdCheck","dialysisCheck","doctorreqCheck","dataToSend","pkid","villagesec","referred","ref_status","type_data","BasicVitals","Temperature","BP","HR","Pulse","RespRate","BasicSymptoms","Fever","Cold","Cough","Fatigue","Aches","Diarrohea","Bleeding","Infection","others","report","patient_status","hb","wbc_count","diffrential_count","plat_count","habits","alert","Error404","seconds","setInterval","innerHTML","clearInterval","faTimesCircle","Navbar","collapseOnSelect","expand","Brand","logo","Toggle","aria-controls","Collapse","Nav","Link","faHome","faChartLine","faUserPlus","faInfoCircle","PrivateRoute","component","rest","render","to","pathname","from","Login","error","margin","App","refreshAuth","msecDifference","getTime","subscribe","x","exact","path","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","users","realFetch","fetch","url","opts","isLoggedIn","reject","setTimeout","endsWith","method","params","body","find","ok","message","configureFakeBackend","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c5474534.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/S1.fa95cb07.png\";","module.exports = __webpack_public_path__ + \"static/media/S2.36374932.png\";","module.exports = __webpack_public_path__ + \"static/media/S3.52172d80.png\";","module.exports = __webpack_public_path__ + \"static/media/S4.534dbb4b.png\";","module.exports = __webpack_public_path__ + \"static/media/S5.50e3b725.png\";","module.exports = __webpack_public_path__ + \"static/media/S6.0b25fff5.png\";","module.exports = __webpack_public_path__ + \"static/media/S7.3d234977.png\";","module.exports = __webpack_public_path__ + \"static/media/S8.85ee65bb.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.e386adfe.png\";","import React from 'react';\nimport Loader from 'react-loader-spinner'\nimport {Container, Row, Col} from 'react-bootstrap';\n\nexport default class OurLoader extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row style={{textAlign: \"center\"}}>\n                    <Col>\n                        <Loader\n                            type=\"Puff\"\n                            color=\"#0a5767\"\n                            height={200}\n                            width={200}\n                            // timeout={3000} //3 secs\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport './Cards.css'\nimport { Card, CardDeck } from 'react-bootstrap';\nimport CountUp from 'react-countup';\nimport OurLoader from '../Loader/Loader';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, active } }) => {\n  if (!confirmed) {\n    return <OurLoader />\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>\n        COVID-19 stats for Andhra Pradesh\n          </h1>\n      <CardDeck>\n        <Card\n          style={{ width: '18rem' }}\n          text=\"D13C2B\"\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n\n          <Card.Body className=\"confirmed\">\n            <Card.Title> Confirmed </Card.Title>\n            <Card.Text><CountUp start={0} end={confirmed} duration={1.75} separator=\",\" /> </Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n\n          <Card.Body className=\"active\">\n            <Card.Title> Active </Card.Title>\n            <Card.Text> <CountUp start={0} end={active} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n\n          <Card.Body className=\"recovered\">\n            <Card.Title> Recovered </Card.Title>\n            <Card.Text> <CountUp start={0} end={recovered} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n\n          <Card.Body className=\"deaths\">\n            <Card.Title> Deaths </Card.Title>\n            <Card.Text> <CountUp start={0} end={deaths} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n\n\n      </CardDeck>\n\n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = \"https://api.covidindiatracker.com/state_data.json\"\n\nexport const fetchData = async() =>{\n    try{\n        const {data} = await axios.get(url);\n        const modifiedData = {\n        confirmed:data[2].confirmed,\n        recovered:data[2].recovered,\n        deaths:data[2].deaths,\n        active:data[2].active,\n      }\n\n      return modifiedData\n    }\n    catch(error){\n\n    }\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row } from 'react-bootstrap';\nimport './Home.css';\nimport Cards from '../Cards/Cards';\nimport { fetchData } from '../../CovidApi';\n\nexport default class Home extends Component {\n  state = {\n    data: {},\n  }\n//Comment\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <Container>\n        <Jumbotron>\n          <h2>Welcome to TracerIND</h2>\n        </Jumbotron>\n        <Row className=\"show-grid text-center\">\n          <Cards data={data} />\n        </Row>\n      </Container>\n    )\n  }\n}\n","\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nimport imgCard1 from \"./img/S1.png\";\nimport imgCard2 from \"./img/S2.png\";\nimport imgCard3 from \"./img/S3.png\";\nimport imgCard4 from \"./img/S4.png\";\nimport imgCard5 from \"./img/S5.png\";\nimport imgCard6 from \"./img/S6.png\";\nimport imgCard7 from \"./img/S7.png\";\nimport imgCard8 from \"./img/S8.jpeg\";\nimport './About.css';\n\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Container>\n        <h1 style={{marginTop: \"1rem\"}} className=\"heading\"><span>meet </span>Our Team</h1>\n        <div className=\"profiles\">\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard3} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shlok Parida</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard1} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Prakruti Chandak</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard2} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Abhishek Prasad </h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard4} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Hrituja Khatavkar</h3>\n                <h5>Frontend developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard5} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Akshat </h3>\n                <h5>Android Developer</h5>\n              </div></Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard6} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">  Gaurav Roy </h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard7} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shubhankar</h3>\n                <h5>Android Developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard8} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Palak Rai</h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { push as Menu } from \"react-burger-menu\";\nimport './Sidebar.css'\n\n\nexport default function SideBar(props) {\n\n  const views = ['PatientStatus', 'HealthStats', 'PVTGTracker', 'PedalEdemaTracker'];\n\n  React.useEffect(() => {\n    for(let i = 0; i < views.length; i++){\n      let element = document.getElementById(views[i]);\n      if(views[i] !== props.currentView){\n        if (element.classList.contains('sidebar-active')){\n          element.classList.remove('sidebar-active');\n        }\n      }\n      else{\n        element.classList.add('sidebar-active');\n      }\n    }\n  })\n\n  return (\n    // Pass on our props\n    <Menu {...props}>\n      <button className=\"menu-item\" id=\"PatientStatus\" onClick={() => props.changeView('PatientStatus')}>\n        Patient Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"HealthStats\" onClick={() => props.changeView('HealthStats')}>\n        Health Stats\n      </button>\n\n      <button className=\"menu-item\" id=\"PVTGTracker\" onClick={() => props.changeView('PVTGTracker')}>\n        PVTG Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"PedalEdemaTracker\" onClick={() => props.changeView('PedalEdemaTracker')}>\n        Pedal Edema Tracker\n      </button>\n    </Menu>\n  );\n};\n","import React from 'react';\n\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\n\nclass ModalBody extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let patientDetails = this.props\n        let patient = patientDetails.patientDetails\n        let firstName = patient.name;\n        let space = \" \";\n        let lastName = patient.surname;\n        let fullName = firstName.concat(space, lastName);\n        let pedalEdema = 'Yes'\n        let isPedalTypeEmpty = true\n        if (patient.pedalEdema === 'N') {\n            pedalEdema = 'No'\n        }\n        if (pedalEdema === 'Yes') {\n            // console.log(\"here\")\n            if (!(patient.pedaltype === '')) {\n                // console.log(\"here\")\n                isPedalTypeEmpty = false\n            }\n        }\n        let adhaar = patient.adhaar.slice(0, 4) + \"-\" + patient.adhaar.slice(4, 8) + \"-\" + patient.adhaar.slice(8)\n        // console.log(adhaar)\n        // console.log(patient)\n        return (\n            <Container>\n                <Form>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Name: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"name\" value={fullName.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Adhaar: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"adhar\" value={adhaar} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Village: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"vilage\" value={patient.village} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Age: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"age\" value={patient.age} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Phone: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"phone\" value={patient.phone} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Blood Group: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"bloodGroup\" value={patient.bloodgroup.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Deceased: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"deceased\" value={patient.deceased.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>PVTG: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pvtg\" value={patient.PVTG.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Pedal Edema: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pedal\" value={pedalEdema.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {(() => {\n                        if (isPedalTypeEmpty) {\n                            return (\n                                <Container></Container>\n                            )\n                        }\n                        else {\n                            return (\n                                <Row>\n                                    <Col >\n                                        <Form.Group as={Row}>\n                                            <Col sm={3}>\n                                                <Form.Label>Pedal Type: </Form.Label>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Form.Control placeholder=\"\" id=\"pedalType\" value={patient.pedaltype.toUpperCase()} disabled\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n\n                    })()}\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default ModalBody;","import React from 'react';\n\nimport { Table, Button, Row, Col, Modal } from 'react-bootstrap';\nimport ModalBody from '../ModalBody/ModalBody';\nimport './GenericTable.css';\n\n//Received props\n//Json data -- data\n//List of headings -- headers\n//List of Json keys to be displayed under each heading -- keys\n//List of data types for each column for making filters -- dataTypes\n//All list should be of equal lengths and in same sequence. Otherwise table will show unpredictable behaviour\n//loading -- loading\n\nclass GenericTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleShowCustom = this.handleShowCustom.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            noOfRows: \"\",\n            currentPageIndex: 0,\n            show: false,\n            patientDetailsModal: {}\n        }\n    }\n\n\n    handleClose = () => {\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        console.log(\"handleShow called\")\n\n    }\n\n    handleShowCustom = (value, indx) => {\n        this.setState({ show: true, patientDetailsModal: value });\n    }\n\n    componentDidMount() {\n        let stateObj = {};\n        let { dataTypes, keys } = this.props;\n        for (let i = 0; i < dataTypes.length; i++) {\n            if (dataTypes[i] === 'Number') {\n                stateObj['KEY_' + keys[i]] = {                  //Appending KEY_ to prevent data overwrite if any props key matches our internal state key\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n            }\n            else if (dataTypes[i] === 'String') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n            else if (dataTypes[i] === 'Boolean') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n        }\n        this.setState(stateObj);\n    }\n\n    handleSearchChange = event => {\n        let idFragments = event.target.id.split('_');\n        let obj = {};\n        let key = idFragments[1];\n        let dataType = this.props.dataTypes[this.props.keys.indexOf(key)];\n\n        if (dataType === 'String') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        else if (dataType === 'Number') {\n            obj['KEY_' + key] = this.state['KEY_' + key];\n            if (event.target.value === \"\") {\n                obj['KEY_' + key][idFragments[2]] = idFragments[2] === 'min' ? Number.MIN_VALUE : Number.MAX_VALUE;\n            }\n            else {\n                obj['KEY_' + key][idFragments[2]] = Number(event.target.value);\n            }\n        }\n        else if (dataType === 'Boolean') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        this.setState(obj);\n    }\n\n    isNotNullOrUndefinedOrBlank = (value) => {\n        return (value !== null && value !== undefined && value !== \"\");\n    }\n\n    clearFilters = () => {\n        let { dataTypes, keys } = this.props;\n        let obj = {};\n        for (let i = 0; i < keys.length; i++) {\n            if (dataTypes[i] === \"String\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n            else if (dataTypes[i] === \"Number\") {\n                obj['KEY_' + keys[i]] = {\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n                document.getElementById('KEY_' + keys[i] + '_min').value = \"\";\n                document.getElementById('KEY_' + keys[i] + '_max').value = \"\";\n            }\n            else if (dataTypes[i] === \"Boolean\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n        }\n        obj.noOfRows = \"\";\n        this.setState(obj);\n    }\n\n    changeNoOfRows = event => {\n        if (event.target.value !== \"\") {\n            event.target.value = Math.abs(event.target.value);\n        }\n        this.setState({ noOfRows: event.target.value });\n    }\n\n    nextPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex + 1 });\n    }\n\n    previousPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex - 1 });\n    }\n\n    render() {\n        let { headers, data, loading, keys, dataTypes } = this.props;\n        let pageData = [];\n        let { noOfRows, currentPageIndex, patientDetailsModal } = this.state;\n        let dataLength = 0;\n        let lastPageIndex = 0;\n\n        if (!loading) {\n\n            dataLength = data.length;\n            if (noOfRows !== \"\") {\n                if (dataLength % noOfRows === 0) {\n                    lastPageIndex = Math.floor(dataLength / noOfRows) - 1;\n                }\n                else {\n                    lastPageIndex = Math.floor(dataLength / noOfRows);\n                }\n            }\n\n            if (noOfRows === \"\") {\n                pageData = data;\n            }\n            else if (dataLength >= (currentPageIndex + 1) * noOfRows) {\n                pageData = data.slice(currentPageIndex * noOfRows, (currentPageIndex + 1) * noOfRows);\n            }\n            else {\n                pageData = data.slice(currentPageIndex * noOfRows, dataLength);\n            }\n\n            pageData = pageData.filter(rowData => {\n                for (let i = 0; i < keys.length; i++) {\n                    if (dataTypes[i] === \"String\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && !rowData[keys[i]].toLowerCase().includes(this.state['KEY_' + keys[i]].toLowerCase())) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Number\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && (rowData[keys[i]] < this.state['KEY_' + keys[i]].min || rowData[keys[i]] > this.state['KEY_' + keys[i]].max)) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Boolean\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]].toString()) && this.isNotNullOrUndefinedOrBlank(this.state['KEY_' + keys[i]]) && (rowData[keys[i]].toString() !== this.state['KEY_' + keys[i]].toString())) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n        }\n        //  console.log(pageData)\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm={3} xs={4} >\n                        <Button variant=\"danger\" onClick={this.clearFilters} className=\"filter-button\">\n                            Clear filters\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"previousButton\" onClick={this.previousPage} disabled={currentPageIndex === 0} >\n                            Previous Page\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"nextButton\" onClick={this.nextPage} disabled={currentPageIndex >= lastPageIndex}>\n                            Next Page\n                        </Button>\n                    </Col>\n\n                    <Col sm={3}>\n                        <input type=\"number\" min=\"1\" value={this.state.noOfRows} placeholder=\"No. of Rows\" onChange={this.changeNoOfRows} className=\"row-input-field\" />\n                    </Col>\n                </Row>\n                <Table style={{ textAlign: \"center\" }} striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            {\n                                headers.map((header, index) => {\n                                    return (\n                                        <td key={index}>{header}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (() => {\n                                if (loading) {\n                                    return (\n                                        <tr>\n                                            <td colSpan={headers.length}>\n                                                Loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <React.Fragment>\n                                            <tr key=\"searchFields\">\n                                                {\n                                                    keys.map((key, i) => {\n                                                        let inputType = \"text\";\n                                                        if (dataTypes[i] === 'Number') {\n                                                            inputType = \"number\";\n                                                        }\n                                                        if (dataTypes[i] === 'Boolean') {\n                                                            inputType = \"booleanSelect\";\n                                                        }\n                                                        if (inputType === \"text\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key}\n                                                                        placeholder=\"Filter\"\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"number\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_min'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Min\"\n                                                                        className=\"form-control input-min\"\n                                                                    />\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_max'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Max\"\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"booleanSelect\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <select\n                                                                        value={this.state['KEY_' + key]}\n                                                                        id={'KEY_' + key}\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"Yes\">Yes</option>\n                                                                        <option value=\"No\">No</option>\n                                                                    </select>\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else {\n                                                            return (\n                                                                <td></td>\n                                                            )\n                                                        }\n                                                    })\n                                                }\n                                            </tr>\n                                            {\n                                                (() => {\n                                                    if (pageData.length === 0) {\n                                                        return (\n                                                            <tr>\n                                                                <td colSpan={headers.length}>\n                                                                    Nothing found to display.\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    else {\n                                                        return (\n                                                            pageData.map((row, indexRow) => {\n                                                                return (\n                                                                    <tr onClick={() => this.handleShowCustom(row, indexRow)} key={indexRow}>\n                                                                        {\n                                                                            keys.map((key, indexCol) => {\n                                                                                return (\n                                                                                    <td key={indexCol}>\n                                                                                        {row[key] ? row[key].toString() : \"\"}\n                                                                                    </td>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                        )\n                                                    }\n                                                })()\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n                            })()\n                        }\n                    </tbody>\n                </Table>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Patient Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ModalBody patientDetails={patientDetailsModal} />\n                    </Modal.Body>\n                    <Modal.Footer style={{justifyContent: \"center\"}}>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        {/* <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                            </Button> */}\n                    </Modal.Footer>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GenericTable;\n","import { BehaviorSubject } from 'rxjs';\n\nimport { handleResponse } from '../helpers';\n\nimport axios from 'axios';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nconst URI = process.env.REACT_APP_SERVER_URI;\n\nexport const authenticationService = {\n    login,\n    logout,\n    refresh,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n\n    return axios.post(URI + 'token_jwt_get/', { username, password })\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            if(user){\n                let userData = {\n                    username,\n                    token: user.token,\n                    timestamp: new Date()\n                }\n                localStorage.setItem('currentUser', JSON.stringify(userData));\n                currentUserSubject.next(userData);\n\n                return user;\n            }\n        });\n}\n\nfunction refresh() {\n    if(currentUserSubject.value){\n        axios.post(URI + 'token_jwt_refresh/', { token: currentUserSubject.value.token })\n            .then(handleResponse)\n            .then(data => {\n                if(data) {\n                    let newData = { ...currentUserSubject.value };\n                    newData.token = data.token;\n                    newData.timestamp = new Date();\n\n                    localStorage.setItem('currentUser', JSON.stringify(newData));\n                    currentUserSubject.next(newData);\n                }\n            });\n    }\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `JWT ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","import { authenticationService } from '../services';\n\nexport function handleResponse(response) {\n    // return response.text().then(text => {\n    //     const data = text && JSON.parse(text);\n    //     if (!response.ok) {\n    //         if ([400, 401, 403].indexOf(response.status) !== -1) {\n    //             // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n    //             authenticationService.logout();\n    //             window.location.reload();\n    //         }\n\n    //         const error = (data && data.message) || response.statusText;\n    //         return Promise.reject(error);\n    //     }\n\n    //     return data;\n    // });\n    // console.log(response);\n    if(response.status === 200){\n        return response.data;\n    }\n    else {\n        authenticationService.logout();\n        return false;\n    }\n    // if([400, 401, 403].indexOf(response.status) !== -1){\n    //     authenticationService.logout();\n    //     window.location.reload();\n    //     return false;\n    // }\n    // return response.data;\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from 'react';\n\nimport { Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport './Directory.css';\nimport GenericTable from '../GenericTable/GenericTable';\n\nimport { authHeader } from '../../helpers';\n\nclass Directory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchField: \"\",\n            patientList: [],\n            villageList: [],\n            loading: true\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetAllPatient/',\n            {\n                headers: authHeader()\n        }).then(response => {\n                    // console.log(response);\n                    axios.get(this.uri + 'GetAllVillage/', \n                    {\n                        headers: authHeader()\n                    }).then(responseVillage => {\n                        // this.setState({ villageList: responseVillage.data });\n                        // this.setState({ loading: false });\n                        this.setState(\n                            {\n                                patientList: response.data,\n                                villageList: responseVillage.data,\n                                loading: false\n                            }\n                        )\n                    })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                    // this.setState({ patientList: response.data });\n                })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getVillageNameFromId = (id) => {\n        // console.log(\"Id received \" + id);\n        let { villageList } = this.state;\n        if (villageList.length > 0) {\n            for (let i = 0; i < villageList.length; i++) {\n                if (villageList[i].village_id === id) {\n                    return villageList[i].name;\n                }\n            }\n        }\n    }\n\n    render() {\n        const headers = ['Name', 'Village', 'Kidney Status', 'Deceased'];\n        const keys = ['fullName', 'village', 'kidneystatus', 'deceased'];\n        const dataTypes = ['String', 'String', 'String', 'Boolean'];\n        let structuredData = this.state.patientList.map(patient => {\n            let newPatient = { ...patient };\n            newPatient.village = this.getVillageNameFromId(patient.village);\n            newPatient[\"fullName\"] = newPatient.name + ' ' + newPatient.surname;\n            newPatient.deceased = newPatient.deceased ? \"Yes\" : \"No\";\n            return newPatient;\n        });\n\n        return (\n            <Container style={{ marginTop: \"2rem\" }}>\n                <GenericTable data={structuredData} loading={this.state.loading} headers={headers} keys={keys} dataTypes={dataTypes} />\n            </Container>\n        )\n    }\n}\n\nexport default Directory;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport OurLoader from '../Loader/Loader';\nimport { Pie } from 'react-chartjs-2';\n\nimport { authHeader } from '../../helpers';\n\nimport './HealthStats.css';\n\nclass HealthStats extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {},\n            patientCount: null\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetStats/',\n            {\n                headers: authHeader()\n            }\n        ).then(responseStats => {\n            // console.log(responseStats);\n            axios.get(this.uri + 'GetAllPatient',\n                {\n                    headers: authHeader()\n                }).then(responseAll => {\n                    this.setState({ data: responseStats.data, patientCount: responseAll.data.length }, () => this.setState({ loading: false }));\n                })\n                .catch(err => {\n                    throw err;\n                })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { BloodUrea, Electrolytes_Potassium, Electrolytes_Sodium, SerumCreatinine, UricAcid } = this.state.data;\n            // console.log(this.state);\n            const bloodUreaData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Blood Urea',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - BloodUrea.Severe, BloodUrea.Severe]\n                    }\n                ]\n            }\n            const potassiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Potassium(K)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Potassium.Severe, Electrolytes_Potassium.Severe]\n                    }\n                ]\n            }\n            const sodiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Sodium(Na)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Sodium.Severe, Electrolytes_Sodium.Severe]\n                    }\n                ]\n            }\n            const uricAcidData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - UricAcid.Severe, UricAcid.Severe]\n                    }\n                ]\n            }\n            const serumCreatinineData = {\n                labels: ['Normal', 'Critical', 'Mild'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00',\n                            '#00A6B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800',\n                            '#003350'\n                        ],\n                        data: [this.state.patientCount - (SerumCreatinine.Severe + SerumCreatinine.MI), SerumCreatinine.Severe, SerumCreatinine.MI]\n                    }\n                ]\n            }\n            return (\n                <Container style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Blood Urea</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={bloodUreaData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Blood Urea',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Potassium(K)</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={potassiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Potassium(K)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Sodium(Na)  </h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={sodiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Sodium(Na)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Uric Acid</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={uricAcidData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Uric Acid',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\" }} className=\"metric singleMetricInOneRow\">\n                        <Col>\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Serum Creatinine</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={serumCreatinineData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Serum Creatinine',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default HealthStats;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { authHeader } from '../../helpers';\nimport OurLoader from '../Loader/Loader';\n\nclass PVTGTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPVTG/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({ loading: false }))\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { PVTG, ST, NST } = this.state.data;\n            // console.log(PVTG, ST, NST);\n            const pvtgData = {\n                labels: ['PVTG', 'ST', 'Non ST'],\n                datasets: [\n                    {\n                        label: 'Caste distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#6800B4',\n                            '#2FDE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#35014F',\n                            '#175000'\n                        ],\n                        data: [PVTG, ST, NST]\n                    }\n                ]\n            }\n            return (\n                <Container className=\"metric\" style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col style={{right: \"3rem\"}}>\n                            <h3>PVTG Distribution</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={pvtgData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Caste Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PVTGTracker;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport OurLoader from '../Loader/Loader';\n\nimport { authHeader } from '../../helpers';\n\nclass PETracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: {}\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPE/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({loading: false}));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            const peData = {\n                labels: ['Yes', 'No'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema Distribution',\n                        backgroundColor: [\n                            '#B21F00',\n                            '#6800B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#501800',\n                            '#35014F'\n                        ],\n                        data: [this.state.data.PE, this.state.data.total - this.state.data.PE]\n                    }\n                ]\n            }\n            const peTypeData = {\n                labels: ['Single Leg', 'Bilateral'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema type distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#C9DE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#4B5000'\n                        ],\n                        data: [this.state.data.Single, this.state.data.Bilateral]\n                    }\n                ]\n            }\n            return (\n                <Container style={{textAlign: \"center\"}}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"2rem\" }}>\n                                    <h3>Pedal Edema Cases</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Cases',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{right: \"3rem\"}}>\n                                    <h3>Pedal Edema Type Distribution</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peTypeData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Type Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PETracker;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './Dashboard.css';\n\nimport SideBar from '../Sidebar/Sidebar';\nimport Directory from '../Directory/Directory';\nimport HealthStats from '../HealthStats/HealthStats';\nimport PVTGTracker from '../PVTGTracker/PVTGTracker';\nimport PETracker from '../PETracker/PETracker';\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dashView: \"PatientStatus\"\n        }\n    }\n\n    changeView = (nextView) => {\n        this.setState({dashView: nextView});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"SideBarContainer\">\n                    <SideBar currentView={this.state.dashView} changeView={this.changeView} pageWrapId={\"page-wrap\"} outerContainerId={\"SideBarContainer\"} />\n                    <div id=\"page-wrap\">\n                        {\n                            (() => {\n                                switch (this.state.dashView) {\n                                    case \"PatientStatus\":\n                                        return <Directory />\n                                    case \"HealthStats\":\n                                        return <HealthStats />\n                                    case \"PVTGTracker\":\n                                        return <PVTGTracker />\n                                    case \"PedalEdemaTracker\":\n                                        return <PETracker />\n                                    default:\n                                        return (\n                                            <Container>\n                                                <Row style={{ marginTop: \"40vh\" }}>\n                                                    <Col>\n                                                        <h1>\n                                                            Coming Soon..\n                                                        </h1>\n                                                    </Col>\n                                                </Row>\n                                            </Container>\n                                        )\n                                }\n                            })()\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\n\nexport default function PHC(props) {\n    let {loading, phcList} = props;\n\n    React.useEffect(() => {\n        if (props.phcValue) {\n            document.getElementById(props.id).value = props.phcValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillageSec(event.target.value);\n    }\n\n    if (!phcList) {\n        phcList = [];\n    }\n\n    if(!loading) {\n        if (phcList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC</option>\n                    {\n                        phcList.map((phc, i) => {\n                            return (\n                                <option value={phc.PHC_id} key={i}>{phc.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Mandal First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}\n","import React  from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function VillageSec(props) {\n    let { loading, villageSecList } = props;\n    \n    React.useEffect(() => {\n        if (props.villageSecValue) {\n            document.getElementById(props.id).value = props.villageSecValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillages(event.target.value);\n    }\n\n    if (!villageSecList) {\n        villageSecList = [];\n    }\n\n    if(!loading) {\n        if (villageSecList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageSecList.map((villageSec, i) => {\n                            return (\n                                <option value={villageSec.villagesec_id} key={i}>{villageSec.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC first</option>\n                </Form.Control>\n            )\n        }\n    }\n    else{\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function Village(props) {\n    let { loading, villageList } = props;\n    React.useEffect(() => {\n        if (props.villageValue) {\n            document.getElementById(props.id).value = props.villageValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.updateValue({ village: event.target.value });\n    }\n\n    if (!villageList) {\n        villageList = [];\n    }\n\n    if (!loading) {\n        if (villageList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageList.map((village, i) => {\n                            return (\n                                <option value={village.village_id} key={i}>{village.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village Sec. First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PHC from '../PHC/PHC';\nimport VillageSec from '../VillageSecretariat/VillageSec';\nimport Village from '../Village/Village';\nimport axios from 'axios';\n\nimport { authHeader } from '../../helpers';\n\nimport './BasicDetailsForm.css';\nclass BasicDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaarFirst: \"\",\n            adhaarSecond: \"\",\n            adhaarThird: \"\",\n            mandal: props.getValue('mandal'),\n            phc: props.getValue('phc'),\n            village_sec: props.getValue('village_sec'),\n            village: props.getValue('village'),\n            name: props.getValue('name'),\n            surname: props.getValue('surname'),\n            relation: props.getValue('relation'),\n            gaurdian_name: props.getValue('gaurdian_name'),\n            age: props.getValue('age'),\n            gender: props.getValue('gender'),\n            maritalstatus: props.getValue('maritalstatus'),\n            phone: props.getValue('phone'),\n            bloodgroup: props.getValue('bloodgroup'),\n            PVTG: props.getValue('PVTG'),\n            address: props.getValue('address'),\n            deworming: props.getValue('deworming'),\n            phcList: props.getValue('phcList'),\n            villageList: props.getValue('villageList'),\n            villageSecList: props.getValue('villageSecList'),\n            phcLoading: false,\n            villageSecLoading: false,\n            villageLoading: false,\n            smoking: props.getValue('smoking'),\n            drinking: props.getValue('drinking')\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount = () => {\n        let adhaarNumber = this.props.getValue('adhaar');\n        if (adhaarNumber) {\n            this.setState({ adhaarFirst: adhaarNumber.substring(0, 4) });\n            this.setState({ adhaarSecond: adhaarNumber.substring(4, 8) });\n            this.setState({ adhaarThird: adhaarNumber.substring(8, 12) });\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    fetchOrUpdatePHCList = event => {\n        this.setState(\n            {\n                mandal: event.target.value,\n                phcList: [],\n                phc: \"\",\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                phcLoading: event.target.value ? true : false,\n            }\n        );\n        if (event.target.value) {\n            console.log(\"Getting phcs\");\n            axios.post(this.uri + 'GetPHCData/'\n                , {\n                    mandal_id: event.target.value\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ phcList: response.data, phcLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageSecList = (phc) => {\n        this.setState(\n            {\n                phc: phc,\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                villageSecLoading: phc ? true : false\n            }\n        );\n        if (phc) {\n            console.log(\"Getting village secs\");\n            axios.post(this.uri + 'GetVillageSecData/',\n                {\n                    PHC_id: phc\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageSecList: response.data, villageSecLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageList = (villageSec) => {\n        this.setState({ \n            villageList: [], \n            village: \"\", \n            village_sec: villageSec, \n            villageLoading: villageSec ? true : false \n        });\n        if (villageSec) {\n            console.log(\"Getting villages\");\n            axios.post(this.uri + 'GetVillageData/',\n                {\n                    villagesec_id: villageSec\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageList: response.data, villageLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    validate = () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        let validIds = [];\n        let invalidIds = [];\n        try {\n            //Adhaar fields validation\n            let adhaarIds = [\"adhaarFirst\", \"adhaarSecond\", \"adhaarThird\"];\n            let filled = false;\n            for (let i = 0; i < adhaarIds.length; i++) {\n                if (this.state[adhaarIds[i]] !== \"\") {\n                    filled = true;\n                    break;\n                }\n            }\n            if (filled) {\n                for (let i = 0; i < adhaarIds.length; i++) {\n                    if (this.state[adhaarIds[i]].length < 4) {\n                        invalidIds.push(adhaarIds[i]);\n                    }\n                    else {\n                        validIds.push(adhaarIds[i]);\n                    }\n                }\n            }\n            //Other field validations\n            Boolean(this.state.mandal) ? validIds.push('mandal') : invalidIds.push('mandal');\n            Boolean(this.state.phc) ? validIds.push('phc') : invalidIds.push('phc');\n            Boolean(this.state.village_sec) ? validIds.push('village_sec') : invalidIds.push('village_sec');\n            Boolean(this.state.village) ? validIds.push('village') : invalidIds.push('village');\n            Boolean(this.state.name) ? validIds.push('name') : invalidIds.push('name');\n            Boolean(this.state.surname) ? validIds.push('surname') : invalidIds.push('surname');\n            Boolean(this.state.relation) ? validIds.push('relation') : invalidIds.push('relation');\n            Boolean(this.state.gaurdian_name) ? validIds.push('gaurdian_name') : invalidIds.push('gaurdian_name');\n            Boolean(this.state.age) ? validIds.push('age') : invalidIds.push('age');\n            Boolean(this.state.gender) ? validIds.push('gender') : invalidIds.push('gender');\n            Boolean(this.state.maritalstatus) ? validIds.push('maritalstatus') : invalidIds.push('maritalstatus');\n            Boolean(this.state.bloodgroup) ? validIds.push('bloodgroup') : invalidIds.push('bloodgroup');\n            Boolean(this.state.PVTG) ? validIds.push('PVTG') : invalidIds.push('PVTG');\n            if (this.state.phone === \"\" || this.state.phone.length !== 10) {\n                invalidIds.push('phone');\n            }\n            else {\n                validIds.push('phone');\n            }\n            for (let i = 0; i < validIds.length; i++) {\n                document.getElementById(validIds[i]).style.border = \"\";\n            }\n            if (invalidIds.length > 0) {\n                window.location.href = \"#\" + invalidIds[0];\n                for (let i = 0; i < invalidIds.length; i++) {\n                    document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                }\n                document.getElementById(invalidIds[0]).focus();\n                throw new Error();\n            }\n            else {\n                window.location.href = \"#\";\n            }\n            //Still in try block? Means all fields valid. Now saving the data to parent component.\n            this.saveData();\n            this.props.changeData({ formName: \"Observations\" });\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({ [input]: document.getElementById(input).checked });\n    }\n\n    saveData = async () => {\n        let dataToSave = {\n            adhaar: this.state.adhaarFirst + this.state.adhaarSecond + this.state.adhaarThird,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            village_sec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            address: this.state.address,\n            children: this.state.children,\n            deworming: this.state.deworming,\n            phcList: this.state.phcList,\n            villageList: this.state.villageList,\n            villageSecList: this.state.villageSecList,\n            smoking: this.state.smoking,\n            drinking: this.state.drinking\n        }\n        await new Promise(resolve => this.props.changeData(dataToSave, () => resolve()));\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    restrictDigits = length => event => {\n        let strValue = event.target.value.toString();\n        if (strValue.length > length) {\n            event.target.value = Number(strValue.substring(0, length));\n        }\n        this.setState({ [event.target.id]: event.target.value.toString() });\n        if (event.target.id.includes('adhaar')) {\n            this.changeAdhaarFocus(event.target.id, event.target.value);\n        }\n    }\n\n    updateState = (valueObj) => {\n        this.setState(valueObj);\n    }\n\n    changeAdhaarFocus = (id, value) => {\n        if (id === 'adhaarFirst' && value.length === 4) {\n            document.getElementById('adhaarSecond').focus();\n        }\n        else if (id === 'adhaarSecond' && value.length === 4) {\n            document.getElementById('adhaarThird').focus();\n        }\n    }\n\n    render() {\n\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Basic Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3} xs={12}>\n                                        <Form.Label>Aadhar Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarFirst\"\n                                            value={this.state.adhaarFirst}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarSecond\"\n                                            value={this.state.adhaarSecond}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarThird\"\n                                            value={this.state.adhaarThird}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Mandal :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.fetchOrUpdatePHCList}\n                                            id=\"mandal\"\n                                            value={this.state.mandal}\n                                        >\n                                            <option value=\"\">Select Mandal</option>\n                                            <option value=\"01\">Chintoor</option>\n                                            <option value=\"02\">Yetapaka</option>\n                                            <option value=\"03\">Kunnavaram</option>\n                                            <option value=\"04\">V.R Puram</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>PHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <PHC phcList={this.state.phcList}\n                                            phcValue={this.state.phc}\n                                            fetchVillageSec={this.fetchOrUpdateVillageSecList}\n                                            loading={this.state.phcLoading}\n                                            id=\"phc\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Village Secretariat :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <VillageSec\n                                            id=\"village_sec\"\n                                            villageSecValue={this.state.village_sec}\n                                            villageSecList={this.state.villageSecList}\n                                            loading={this.state.villageSecLoading}\n                                            fetchVillages={this.fetchOrUpdateVillageList}\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Village :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Village\n                                            updateValue={this.updateState}\n                                            id=\"village\"\n                                            villageList={this.state.villageList}\n                                            loading={this.state.villageLoading}\n                                            villageValue={this.state.village}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>First Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"First Name\"\n                                            id=\"name\"\n                                            onChange={this.handleChange('name')}\n                                            value={this.state.name} />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Surname :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Surname\"\n                                            onChange={this.handleChange('surname')}\n                                            id=\"surname\"\n                                            value={this.state.surname} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>S/o, D/o, W/o:</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"relation\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"son\"\n                                                    id=\"sonOf\"\n                                                    label=\"Son of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"son\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"daughter\"\n                                                    id=\"daughterOf\"\n                                                    label=\"Daughter of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"daughter\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"wife\"\n                                                    id=\"wifeOf\"\n                                                    label=\"Wife of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"wife\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Label>Guardian Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter Name\"\n                                            onChange={this.handleChange('gaurdian_name')}\n                                            id=\"gaurdian_name\"\n                                            value={this.state.gaurdian_name}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"age\">\n                                    <Col sm={3}>\n                                        <Form.Label>Age : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"99\"\n                                            type=\"number\"\n                                            placeholder=\"Enter age\"\n                                            onChange={this.restrictDigits(2)}\n                                            value={this.state.age} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Sex :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"gender\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"M\"\n                                                    id=\"male\"\n                                                    label=\"Male\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"M\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"F\"\n                                                    id=\"female\"\n                                                    label=\"Female\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"F\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NB\"\n                                                    id=\"transgender\"\n                                                    label=\"Transgender\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"MB\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Marital Status :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('maritalstatus')}\n                                            id=\"maritalstatus\"\n                                            value={this.state.maritalstatus}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"single\">Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"separated\">Separated</option>\n                                            <option value=\"divorced\">Divorced</option>\n                                            <option value=\"widowed\">Widowed</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Phone Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999999999\"\n                                            type=\"number\"\n                                            placeholder=\"Enter Contact number\"\n                                            id=\"phone\"\n                                            onChange={this.restrictDigits(10)}\n                                            value={this.state.phone} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"address\">\n                                    <Col sm={3}>\n                                        <Form.Label>Address : </Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <textarea\n                                            placeholder=\"Enter address\"\n                                            value={this.state.address}\n                                            onChange={this.handleChange('address')}\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"bloodgroup\">\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Group :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('bloodgroup')}\n                                            value={this.state.bloodgroup}\n                                        >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"o-\">O-</option>\n                                            <option value=\"o+\">O+</option>\n                                            <option value=\"a-\">A-</option>\n                                            <option value=\"a+\">A+</option>\n                                            <option value=\"b-\">B-</option>\n                                            <option value=\"b+\">B+</option>\n                                            <option value=\"ab-\">AB-</option>\n                                            <option value=\"ab+\">AB+</option>\n                                            <option value=\"N.A.\">Not yet known</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Deworming :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"deworming\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"deworming_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"deworming_no\"\n                                                    label=\"No\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Caste :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"PVTG\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"ST\"\n                                                    id=\"PVTG_st\"\n                                                    label=\"ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"ST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NST\"\n                                                    id=\"PVTG_nst\"\n                                                    label=\"Non ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"NST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"PVTG\"\n                                                    id=\"PVTG_pvt\"\n                                                    label=\"PVTG\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"PVTG\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Label>\n                                                    Habits :\n                                                </Form.Label>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <Row>\n                                            <Col sm={3}>\n                                               <Form.Label>\n                                                    Smoking\n                                               </Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"smoking\"\n                                                    name=\"smoking\"\n                                                    onClick={this.handleCheckboxChange('smoking')}\n                                                    checked={this.state.smoking}\n                                                />\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Label>Drinking</Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"drinking\"\n                                                    name=\"drinking\"\n                                                    onClick={this.handleCheckboxChange('drinking')}\n                                                    checked={this.state.drinking}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={styles.center}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validate}>Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BasicDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './TestDetailsForm.css';\n\nclass TestDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateoftesting: props.getValue('dateoftesting'),\n            serumCreatinine: props.getValue('serumCreatinine'),\n            bloodUrea: props.getValue('bloodUrea'),\n            uricAcid: props.getValue('uricAcid'),\n            electrolytes_sodium: props.getValue('electrolytes_sodium'),\n            electrolytes_potassium: props.getValue('electrolytes_potassium'),\n            bun: props.getValue('bun'),\n            pedalEdema: props.getValue('pedalEdema'),\n            pedaltype: props.getValue('pedaltype'),\n            kidneystatus: props.getValue('kidneystatus'),\n            ailments: props.getValue('ailments'),\n            dialysis: props.getValue('dialysis'),\n            doctorreq: props.getValue('doctorreq'),\n            opd: props.getValue('opd'),\n            btn: \"Submit\",\n            loading: false,\n        }\n    }\n\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    previous = () => {\n        console.log(this.state)\n        this.saveData().then(() => {\n            this.props.changeData({ formName: \"Observations\" });\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateOneDigitAfterDecimalSerumCreatine = event => {\n        if (event.target.value > 2 && event.target.value < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBloodUrea = event => {\n        if (event.target.value > 15 && event.target.value < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalUricAcid = event => {\n        if (event.target.value > 2.6 && event.target.value < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesSodium = event => {\n        if (event.target.value > 135 && event.target.value < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesPotassium = event => {\n        if (event.target.value > 3.5 && event.target.value < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBun = event => {\n        if (event.target.value > 8 && event.target.value < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"HospitalDetails\");\n    }\n\n    // mandatoryFieldCheck = () => {\n    //     let invalidIds = [];\n    //     try {\n    //         if (this.state.kidneystatus === 'abnormal') {\n    //             if (this.state.doctorreq === \"\") {\n    //                 invalidIds.push('doctorreq')\n    //             }\n    //             if (this.state.dialysis === \"\") {\n    //                 invalidIds.push('dialysis')\n    //             }\n    //             if (invalidIds.length > 0) {\n    //                 window.location.href = \"#\" + invalidIds[0];\n    //                 for (let i = 0; i < invalidIds.length; i++) {\n    //                     document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n    //                 }\n    //                 document.getElementById(invalidIds[0]).focus();\n    //                 throw new Error();\n    //             }\n    //             else {\n    //                 window.location.href = \"#\";\n    //             }\n    //         }\n    //     }\n    //     catch (err) {\n    //         // console.log(false);\n    //     }\n    // }\n\n    validateAndSubmit = () => {\n            console.log(this.state)\n            this.setState({ btn: \"Submitting\" });\n            this.setState({ loading: true })\n            this.saveData()\n                .then(() => {\n                    console.log(this.state)\n                    this.props.submit();\n                })\n\n    }\n\n    serumCreatinineAfterReRendering = () => {\n        if (this.state.serumCreatinine > 2 && this.state.serumCreatinine < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (this.state.serumCreatinine > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bloodUreaAfterReRendering = () => {\n        if (this.state.bloodUrea > 15 && this.state.bloodUrea < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bloodUrea > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    uricAcidfterReRendering = () => {\n        if (this.state.uricAcid > 2.6 && this.state.uricAcid < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (this.state.uricAcid > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesSodiumReRendering = () => {\n        if (this.state.electrolytes_sodium > 135 && this.state.electrolytes_sodium < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_sodium > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesPotassiumReRendering = () => {\n        if (this.state.electrolytes_potassium > 3.5 && this.state.electrolytes_potassium < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_potassium > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bunReRendering = () => {\n        if (this.state.bun > 8 && this.state.bun < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bun > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.state)\n        this.serumCreatinineAfterReRendering();\n        this.bloodUreaAfterReRendering();\n        this.uricAcidfterReRendering();\n        this.electrolytesPotassiumReRendering();\n        this.electrolytesSodiumReRendering();\n        this.bunReRendering();\n\n    }\n\n    render() {\n        const { loading, btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Testing Details</legend>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date of Testing : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"date\" placeholder=\"\" id=\"dateoftesting\" onChange={this.handleChange('dateoftesting')}\n                                            value={this.state.dateoftesting} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Serum Creatinine : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control min=\"0\" type=\"number\" placeholder=\"mg/dl\" id=\"serumCreatinine\" onChange={this.validateOneDigitAfterDecimalSerumCreatine}\n                                            value={this.state.serumCreatinine} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Urea : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bloodUrea\" onChange={this.validateOneDigitAfterDecimalBloodUrea}\n                                            value={this.state.bloodUrea}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Uric Acid : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"uricAcid\" onChange={this.validateOneDigitAfterDecimalUricAcid}\n                                            value={this.state.uricAcid} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Electrolytes </h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sodium(Na) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_sodium\" onChange={this.validateOneDigitAfterDecimalElectrolytesSodium}\n                                            value={this.state.electrolytes_sodium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Potassium(K) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_potassium\" onChange={this.validateOneDigitAfterDecimalElectrolytesPotassium}\n                                            value={this.state.electrolytes_potassium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>BUN (Blood Urea Nitrogen) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bun\" onChange={this.validateOneDigitAfterDecimalBun}\n                                            value={this.state.bun} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={6} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row} >\n                                    <Col sm={6}>\n                                        <Form.Label>Pedal Edema :</Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"Y\"\n                                                    id=\"yes\"\n                                                    label=\"Yes\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"Y\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"N\"\n                                                    id=\"no\"\n                                                    label=\"No\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"N\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6} >\n                                {(() => {\n                                    if (this.state.pedalEdema === 'Y') {\n                                        return (\n                                            <Form.Group as={Row} controlId=\"pedaltype\">\n                                                <Col sm={6}>\n                                                    <Form.Label>Pedal Type :</Form.Label>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <Form.Control as=\"select\" onChange={this.handleChange('pedaltype')} value={this.state.pedaltype}>\n                                                        <option value=\"\">Choose...</option>\n                                                        <option value=\"single leg\">Single Leg</option>\n                                                        <option value=\"bilateral\">Bilateral</option>\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <p></p>\n                                        )\n                                    }\n                                })()}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={3}>\n                                <Form.Label>Kidney Functioning Status :</Form.Label>\n                            </Col>\n                            <Col sm={3}>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"good\"\n                                            id=\"good\"\n                                            label=\"Good\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"good\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"abnormal\"\n                                            id=\"abnormal\"\n                                            label=\"Abnormal\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"abnormal\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {(() => {\n                            if (this.state.kidneystatus === 'good') {\n                                return (\n                                    <Container></Container>\n                                )\n                            }\n                            else if (this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Specify the ailments : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.ailments} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={3}>\n                                                <Form.Label>Need for Dialysis :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"dialysis\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"yes\"\n                                                            label=\"Yes\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"no\"\n                                                            label=\"No\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={4}>\n                                                <Form.Label>Need for immediate Doctor Supervision :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"doctorreq\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"true\"\n                                                            label=\"Yes\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"false\"\n                                                            label=\"No\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    </React.Fragment>\n                                )\n                            }\n                        })()}\n                        <br />\n                        {(() => {\n                            if (this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={4}>\n                                            <Form.Label>Patient Type :</Form.Label>\n                                        </Col>\n                                        <Col sm={3} id=\"opd \">\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"true\"\n                                                        id=\"opd\"\n                                                        label=\"IP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"true\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"false\"\n                                                        id=\"opd\"\n                                                        label=\"OP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"false\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n\n                        {(() => {\n                            if (this.state.opd === 'true' && this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndNext}\n                                                className=\"cool-button\"\n                                            >Next</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous.bind(this)}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndSubmit}\n                                                className=\"cool-button\"\n                                            >{loading && <i className=\"spinner-border spinner-border-sm\" role=\"status\"></i>} {btn}</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n                    </fieldset>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default TestDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n// import { DateTime } from 'react-datetime-bootstrap';\n\nclass HospitalDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hospitalAdmit: props.getValue('hospitalAdmit'),\n            dateOfAdmit: props.getValue('dateOfAdmit'),\n            refered: props.getValue('refered'),\n            referredto: props.getValue('referredto'),\n            status: props.getValue('status'),\n            treatmentDone: props.getValue('treatmentDone'),\n            dialysis: props.getValue('dialysis'),\n            discharge: props.getValue('discharge'),\n            dischargeStatus: props.getValue('dischargeStatus'),\n            deceased: props.getValue('deceased'),\n            deathDate: props.getValue('deathDate'),\n            placeOfDeath: props.getValue('placeOfDeath'),\n            causeOfDeath: props.getValue('causeOfDeath'),\n            recovery: props.getValue('recovery'),\n            otherReferedHospitalName: \"\",\n            referredToSelected: props.getValue('referredToSelected') ? props.getValue('referredToSelected') : 'NO',\n            btn: \"Submit\",\n            loading:false,\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n\n    validateAndSubmit = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        // this.props.changeData(this.state);\n        this.setState({btn:\"Submitting\"});\n        this.setState({loading:true})\n       await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        // this.loadNextForm(\"HospitalDetails\");\n       this.props.submit();\n\n\n\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"TestDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    handleReferredTo = event => {\n        let value = event.target.value;\n        if(value === \"\"){\n            this.setState({ referredToSelected: 'NO', referredto: \"\" })\n        }\n        else if(value === 'other'){\n            this.setState({referredToSelected: 'OTHER', referredto: \"\"});\n        }\n        else {\n            this.setState(\n                { referredto: value, referredToSelected: 'YES' }\n            );\n        }\n    }\n\n    render() {\n      const {loading} = this.state;\n      const {btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Hospital Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"phc\">\n                                    <Col sm={3}>\n                                        <Form.Label>Hospital admitted in :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hospitalAdmit')}\n                                            value={this.state.hospitalAdmit} >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"PHC/Tulasipaka\">PHC/Tulasipaka</option>\n                                            <option value=\"PHC/E.D Pally\">PHC/E.D Pally</option>\n                                            <option value=\"PHC/Laxmipuram\">PHC/Laxmipuram</option>\n                                            <option value=\"PHC/Nellipaka\">PHC/Nellipaka</option>\n                                            <option value=\"PHC/Gowridevipeta\">PHC/Gowridevipeta</option>\n                                            <option value=\"PHC/Kuturu\">PHC/Kuturu</option>\n                                            <option value=\"PHC/Rekhapally\">PHC/Rekhapally</option>\n                                            <option value=\"PHC/Jeediguppa\">PHC/Jeediguppa</option>\n                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                            <option value=\"other\">other</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date Of Admit :</Form.Label>\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <input type=\"date\" value={this.state.dateOfAdmit} className=\"form-control\" id=\"dateOfAdmit\" onChange={this.handleChange('dateOfAdmit')} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>  Refered To any Hospitals :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"refered_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"refered_no\"\n                                                    label=\"No\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        {(() => {\n                            if (this.state.refered === \"true\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"referredto\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Hospital Refered to :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control\n                                                            as=\"select\"\n\n                                                            onChange={this.handleReferredTo}\n                                                            value={this.state.referredToSelected === 'OTHER' ? 'other' : this.state.referredto} >\n                                                            <option value=\"\">Choose...</option>\n                                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                                            <option value=\"other\">other</option>\n                                                        </Form.Control>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {(() => {\n                                                            if (this.state.referredToSelected === 'OTHER') {\n                                                                return (\n                                                                    <Form.Control as=\"textarea\"\n                                                                        type=\"text\"\n                                                                        placeholder=\"Enter Hospital Name\"\n                                                                        onChange={this.handleChange('referredto')}\n                                                                        value={this.state.referredto} />\n                                                                )\n                                                            }\n                                                            else {\n                                                                return;\n                                                            }\n                                                        })()}\n                                                    </Col>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"status\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Health Status at the time of referring :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Health Status at the time of referring\"\n                                                            onChange={this.handleChange('status')}\n                                                            value={this.state.status} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Need for dialysis :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"true\"\n                                                                    id=\"dialysis_yes\"\n                                                                    label=\"Yes\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"true\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"false\"\n                                                                    id=\"dialysis_no\"\n                                                                    label=\"No\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"false\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Treatment Provided\"\n                                                            onChange={this.handleChange('treatmentDone')}\n                                                            value={this.state.treatmentDone}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"discharge\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {/* <DateTime pickerOptions={{ format: \"LL\" }} /> */}\n                                                        <input type=\"date\" value={this.state.discharge} id=\"discharge\" className=\"form-control\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"recovery\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Recovery Status :</Form.Label>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Control as=\"textarea\" rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the recovery Status at the time of discharge\"\n                                                            onChange={this.handleChange('recovery')}\n                                                            value={this.state.recovery} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            }\n                            else if (this.state.refered === \"false\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control placeholder=\"Enter details\" as=\"textarea\" rows=\"3\" />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <input type=\"date\" className=\"form-control\" id=\"discharge2\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                )\n                            }\n                        })()}\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.previous.bind(this)} >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validateAndSubmit}>{loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default HospitalDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './ObservationsForm.css';\n\nclass ObservationsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: props.getValue('weight'),\n            height: props.getValue('height'),\n            temperature: props.getValue('temperature'),\n            bloodpressure: props.getValue('bloodpressure'),\n            heartrate: props.getValue('heartrate'),\n            pulserate: props.getValue('pulserate'),\n            respiratoryrate: props.getValue('respiratoryrate'),\n            bpm: props.getValue('bpm'),\n            fever: props.getValue('fever'),\n            aches: props.getValue('aches'),\n            cold: props.getValue('cold'),\n            cough: props.getValue('cough'),\n            fatigue: props.getValue('fatigue'),\n            diarrohea: props.getValue('diarrohea'),\n            bleeding: props.getValue('bleeding'),\n            infection: props.getValue('infection'),\n\n        }\n    }\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({[input]: document.getElementById(input).checked});\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"TestDetails\");\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"UserDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Observations By Doctor</legend>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Vitals</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Weight :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Weight in kgs\"\n                                            onChange={this.handleChange('weight')}\n                                            value={this.state.weight}\n                                            id=\"weight\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Height :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Height in cms\"\n                                            onChange={this.handleChange('height')}\n                                            value={this.state.height}\n                                            id=\"height\"\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Temperature :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"° Farhenheit\"\n                                            onChange={this.handleChange('temperature')}\n                                            value={this.state.temperature}\n                                            id=\"temperature\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Pressure :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"XX/XX (mm of Hg)\"\n                                            onChange={this.handleChange('bloodpressure')}\n                                            value={this.state.bloodpressure}\n                                            id=\"bloodpressure\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Heart Rate</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('heartrate')}\n                                            value={this.state.heartrate}\n                                            id=\"heartrate\"\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Pulse Rate:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('pulserate')}\n                                            value={this.state.pulserate}\n                                            id=\"pulserate\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Respiratory Rate :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('respiratoryrate')}\n                                            value={this.state.respiratoryrate}\n                                            id=\"respiratoryrate\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Sypmtoms</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Fever :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fever\"\n                                            name=\"fever\"\n                                            onClick={this.handleCheckboxChange('fever')}\n                                            checked={this.state.fever}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cold :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cold\"\n                                            name=\"cold\"\n                                            onClick={this.handleCheckboxChange('cold')}\n                                            checked={this.state.cold}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cough :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cough\"\n                                            name=\"cough\"\n                                            onClick={this.handleCheckboxChange('cough')}\n                                            checked={this.state.cough}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Fatigue : </Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fatigue\"\n                                            name=\"fatigue\"\n                                            onClick={this.handleCheckboxChange('fatigue')}\n                                            checked={this.state.fatigue}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Aches & Pains :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"aches\"\n                                            name=\"aches\"\n                                            onClick={this.handleCheckboxChange('aches')}\n                                            checked={this.state.aches}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Diarrohea :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"diarrohea\"\n                                            name=\"diarrohea\"\n                                            onClick={this.handleCheckboxChange('diarrohea')}\n                                            checked={this.state.diarrohea}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Bleeding :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            id=\"bleeding\"\n                                            name=\"bleeding\"\n                                            type=\"checkbox\"\n                                            onClick={this.handleCheckboxChange('bleeding')}\n                                            checked={this.state.bleeding}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Infection :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"infection\"\n                                            name=\"bleeding\"\n                                            onClick={this.handleCheckboxChange('infection')}\n                                            checked={this.state.infection}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\"\n                                    onClick={this.previous}\n                                    className=\"cool-button\"\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\"\n                                    onClick={this.validateAndNext}\n                                    className=\"cool-button\"\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default ObservationsForm;\n","import React from 'react';\n\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FormSuccess.css';\n\nexport default function FormSuccess() {\n\n    const redirect = () => {\n        window.location.href = \"/add\";\n    }\n\n    return (\n        <Container>\n            <fieldset style={{textAlign: \"center\"}}>\n                <legend className=\"success-legend\">Success</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Data Saved Sucessfully</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        <Button variant=\"primary\"\n                        onClick={redirect}\n                        className=\"cool-button\"\n                        >\n                            Add another patient\n                        </Button>\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container>\n    )\n}","import React from 'react';\n\nimport BasicDetailsForm from '../BasicDetailsForm/BasicDetailsForm';\nimport TestDetailsForm from '../TestDetailsForm/TestDetailsForm';\nimport HospitalDetailsForm from '../HospitalDetailsForm/HospitalDetailsForm';\nimport ObservationsForm from '../ObservationsForm/ObservationsForm';\n\nimport axios from 'axios';\nimport { uri } from '../../index';\nimport FormSuccess from '../FormSuccess/FormSuccess';\n\nimport { authenticationService } from '../../services';\nimport { authHeader } from '../../helpers';\n\nclass MainForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            formName: \"UserDetails\",\n            pkid: this.generatePkid(32)\n        }\n    }\n\n    generatePkid = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    appendState = (childState, callback) => {\n        if (callback) {\n            this.setState(childState, callback());\n        }\n        else {\n            this.setState(childState);\n        }\n    }\n\n    getValue = (key) => {\n        return this.state[key] === undefined ? \"\" : this.state[key];\n    }\n\n    submitForm = () => {\n        let opdCheck = false\n        let dialysisCheck = false\n        let doctorreqCheck =  false\n        if (this.state.kidneystatus === \"abnormal\") {\n            if (this.state.dialysis === 'true') {\n                dialysisCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n                dialysisCheck = false\n        }\n\n        if (this.state.kidneystatus === \"abnormal\") {\n           \n            if (this.state.doctorreq === 'true') {\n                doctorreqCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n            doctorreqCheck = false\n        }\n\n        if (this.state.kidneystatus === 'good' || this.state.doctorreq === 'false') {\n            opdCheck = false\n        }\n        else if (this.state.kidneystatus === 'abnormal' && this.state.doctorreq === 'true') {\n            opdCheck = true\n        }\n        let dataToSend = {\n            pkid: this.state.pkid,\n            adhaar: this.state.adhaar,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            villagesec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            dateoftesting: this.state.dateoftesting ? this.state.dateoftesting : \"\",\n            serumCreatinine: this.state.serumCreatinine ? this.state.serumCreatinine : 0,\n            bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n            uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n            electrolytes_sodium: this.state.electrolytes_sodium ? this.state.electrolytes_sodium : 0,\n            electrolytes_potassium: this.state.electrolytes_potassium ? this.state.electrolytes_potassium : 0,\n            bun: this.state.bun ? this.state.bun : 0,\n            pedalEdema: this.state.pedalEdema ? this.state.pedalEdema : \"\",\n            pedaltype: this.state.pedalEdema === 'N' ? \"\" : this.state.pedaltype,\n            kidneystatus: this.state.kidneystatus !== undefined ? this.state.kidneystatus : \"\",\n            ailments: this.state.kidneystatus === \"good\" ? \"\" : this.state.ailments,\n            dialysis: dialysisCheck,\n            doctorreq: doctorreqCheck,\n            hospitalAdmit: this.state.hospitalAdmit !== undefined ? this.state.hospitalAdmit : \"\",\n            dateOfAdmit: this.state.dateOfAdmit !== undefined ? this.state.dateOfAdmit : \"\",\n            refered: this.state.refered ? this.state.refered : false,\n            referredto: this.state.referred === \"yes\" ? this.state.referredto : \"\",\n            ref_status: this.state.referred === \"yes\" ? this.state.status : \"\",\n            treatmentDone: this.state.referred === \"yes\" ? this.state.treatmentDone : \"\",\n            discharge: this.state.referred === \"no\" ? this.state.discharge : \"\",\n            dischargeStatus: this.state.referred === \"no\" ? this.state.dischargeStatus : \"\",\n            deceased: this.state.referred === \"no\" ? this.state.deceased : false,\n            deathDate: this.state.deceased === \"yes\" ? this.state.deathDate : \"\",\n            placeOfDeath: this.state.deceased === \"yes\" ? this.state.placeOfDeath : \"\",\n            causeOfDeath: this.state.deceased === \"yes\" ? this.state.causeOfDeath : \"\",\n            deworming: this.state.deworming ? this.state.deworming : false,\n            type_data: ['dev', 'dev2'].indexOf(authenticationService.currentUserValue.username) !== -1 ? \"Development\" : \"Production\",\n            opd: opdCheck,\n            weight: this.state.weight ? this.state.weight : 0.0,\n            height: this.state.height ? this.state.height : 0.0,\n            BasicVitals: {\n                Temperature: this.state.temperature,\n                BP: this.state.bloodpressure,\n                HR: this.state.heartrate,\n                Pulse: this.state.pulserate,\n                RespRate: this.state.respiratoryrate\n            },\n            BasicSymptoms: {\n                Fever: this.state.fever,\n                Cold: this.state.cold,\n                Cough: this.state.cough,\n                Fatigue: this.state.fatigue,\n                Aches: this.state.aches,\n                Diarrohea: this.state.diarrohea,\n                Bleeding: this.state.bleeding,\n                Infection: this.state.infection,\n                others: \"\"\n            },\n            report: {},\n            patient_status: \"Closed\",\n            hb: 0.0,\n            wbc_count: 0.0,\n            diffrential_count: {},\n            plat_count: 0.0,\n            habits: {\n                smoking: this.state.smoking,\n                drinking: this.state.drinking\n            }\n        }\n        axios.post(uri + 'AddPatient/',\n            dataToSend,\n            {\n                headers: authHeader()\n            }).then(response => {\n                console.log(dataToSend);\n                // console.log(\"Sending data\");\n                // console.log(response);\n                if (response.data.pkid === this.state.pkid) {\n                    this.setState({}, this.setState({ formName: \"Success\" }));\n                }\n                else {\n                    alert(\"Failed to save.. Please Try again\");\n                    // this.setState({ formName: \"Success\" });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        switch (this.state.formName) {\n            case \"UserDetails\":\n                return <BasicDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"TestDetails\":\n                return <TestDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"HospitalDetails\":\n                return <HospitalDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Observations\": \n                return <ObservationsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Success\":\n                return <FormSuccess />\n            default:\n                return \"\";\n        }\n    }\n}\n\nexport default MainForm;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Error404() {\n\n    var seconds = 3;\n\n    setInterval(() => {\n        seconds--;\n        document.getElementById('seconds').innerHTML = seconds;\n        if(seconds === 0){\n            clearInterval();\n            window.location.href = \"/\";\n        }\n    }, 1000);\n\n    return (\n        <Container>\n            <fieldset style={{ textAlign: \"center\" }}>\n                <legend className=\"success-legend\">Error 404</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faTimesCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Page Not Found</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        Redirecting to homepage in <span id=\"seconds\">{seconds}</span> seconds...\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container >\n    )\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport './Header.css'\n\nimport { faHome, faChartLine, faUserPlus, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { authenticationService } from '../../services';\n\nimport logo from '../../assets/logo_transparent.png';\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<img alt=\"TracerIND\" src={logo} />\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} color=\"white\" /> &nbsp;Home\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/dashboard\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartLine} color=\"white\" /> &nbsp;Dashboard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/add\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus} color=\"white\" /> &nbsp;New Patient\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/about\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} color=\"white\" /> &nbsp;About\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Button variant=\"transparent\" style={{border: \"none\", color: \"white\"}} onClick={authenticationService.logout}>Logout</Button>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport Header from '../Header/Header';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <React.Fragment>\n            <Header />\n            <Component {...props} />\n        </React.Fragment>\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './Login.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { authenticationService } from '../../services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            btn:\"Login\",\n            username: \"\",\n            password: \"\",\n            loading:false,\n            text:false\n        }\n        if (authenticationService.currentUserValue) {\n            this.props.history.push('/');\n        }\n    }\n\n    login = () => {\n        let { username, password } = this.state;\n        if(!username || !password)\n        {\n          alert(\"Both fields are mandatory\");\n        }\n        else{\n        this.setState({ btn: \"Logging in\", loading: true });\n        authenticationService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => {\n                    console.log(error);\n                    this.setState({ btn: \"Login\", loading: false });\n                }\n            );\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        const {loading}=this.state;\n        const { btn } = this.state ;\n        return (\n            <Container style={{ marginTop: \"10vh\", textAlign: \"center\" }}>\n                <Row className=\"heading\">\n                    <Col>\n                        <h2>Welcome to TracerIND</h2>\n                    </Col>\n                </Row>\n                <fieldset style={{ marginTop: \"10vh\"}}>\n                    <legend>Enter your Login Details</legend>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"username\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Username :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter username\" onChange={this.handleChange('username')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"password\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Password :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter password\" type=\"password\" onChange={this.handleChange('password')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                        <Col>\n                        <Button className=\"cool-button\" size=\"lg\" onClick={this.login} >\n                          {loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MainForm from './components/MainForm/MainForm';\n// import Directory from './components/Directory/Directory';\nimport Error404 from './components/Error404/Error404';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Login from './components/Login/Login';\nimport { history } from './helpers';\nimport { authenticationService } from './services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    authenticationService.currentUser.subscribe(x => this.setState({ currentUser: x }, this.refreshAuth));\n  }\n\n  refreshAuth = () => {\n    let { currentUser } = this.state;\n    if (currentUser) {\n      let msecDifference = new Date().getTime() - new Date(this.state.currentUser.timestamp).getTime();\n      if(msecDifference / (1000 * 60 * 60) >= 4){\n        authenticationService.logout();\n      }\n      else if(msecDifference / (1000 * 60 * 60) > 3) {\n        authenticationService.refresh();\n      }\n    }\n  }\n\n  logout() {\n    authenticationService.logout();\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/about\" component={About} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/add\" component={MainForm} />\n            {/* <PrivateRoute exact path=\"/directory\" component={Directory} /> */}\n            <Route component={Error404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'test', lastName: 'test' },\n        { id: 2, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureFakeBackend } from './helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport const uri = process.env.REACT_APP_SERVER_URI;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}