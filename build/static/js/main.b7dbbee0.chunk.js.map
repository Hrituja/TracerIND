{"version":3,"sources":["components/About/img/S1.png","components/About/img/S2.png","components/About/img/S3.png","components/About/img/S4.png","components/About/img/S5.png","components/About/img/S6.png","components/About/img/S7.png","assets/logo_transparent.png","components/Cards/Cards.js","CovidApi/index.js","components/Home/Home.js","components/About/About.js","components/Sidebar/Sidebar.js","components/ModalBody/ModalBody.js","components/GenericTable/GenericTable.js","services/authentication.service.js","helpers/auth-header.js","helpers/handle-response.js","helpers/history.js","components/Directory/Directory.js","components/HealthStats/HealthStats.js","components/PVTGTracker/PVTGTracker.js","components/PETracker/PETracker.js","components/Dashboard/Dashboard.js","components/PHC/PHC.js","components/VillageSecretariat/VillageSec.js","components/Village/Village.js","components/BasicDetailsForm/BasicDetailsForm.js","components/TestDetailsForm/TestDetailsForm.js","components/HospitalDetailsForm/HospitalDetailsForm.js","components/ObservationsForm/ObservationsForm.js","components/FormSuccess/FormSuccess.js","components/MainForm/MainForm.js","components/Error404/Error404.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","components/Login/Login.js","App.js","serviceWorker.js","helpers/fake-backend.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","active","className","CardDeck","Card","style","width","text","bg","xs","s","md","Body","Title","Text","start","end","duration","separator","fetchData","a","axios","get","modifiedData","Home","state","fetchedData","this","setState","Container","Jumbotron","Row","Component","About","marginTop","Col","sm","alt","src","imgCard3","imgCard1","imgCard2","imgCard4","imgCard5","imgCard6","imgCard7","SideBar","props","views","React","useEffect","i","length","element","document","getElementById","currentView","classList","contains","remove","add","id","onClick","changeView","ModalBody","patient","patientDetails","firstName","name","lastName","surname","fullName","concat","pedalEdema","isPedalTypeEmpty","pedaltype","adhaar","slice","Form","Group","as","Label","Control","placeholder","value","toUpperCase","disabled","village","age","phone","bloodgroup","deceased","PVTG","GenericTable","handleClose","show","handleShowCustom","indx","patientDetailsModal","handleSearchChange","event","idFragments","target","split","obj","key","dataType","dataTypes","keys","indexOf","Number","MIN_VALUE","MAX_VALUE","isNotNullOrUndefinedOrBlank","undefined","clearFilters","min","max","noOfRows","changeNoOfRows","Math","abs","nextPage","currentPageIndex","previousPage","handleShow","bind","console","log","stateObj","headers","loading","pageData","dataLength","lastPageIndex","floor","filter","rowData","toLowerCase","includes","toString","Fragment","Button","variant","type","onChange","Table","textAlign","striped","bordered","hover","map","header","index","colSpan","inputType","display","row","indexRow","indexCol","Modal","onHide","Header","closeButton","Footer","justifyContent","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","URI","process","authenticationService","login","username","password","post","then","handleResponse","user","userData","token","timestamp","Date","setItem","stringify","next","logout","removeItem","refresh","newData","currentUser","asObservable","authHeader","currentUserValue","Authorization","response","status","history","createBrowserHistory","Directory","uri","getVillageNameFromId","villageList","village_id","searchField","patientList","responseVillage","catch","err","structuredData","newPatient","HealthStats","useState","setLoading","PVTGTracker","PETracker","peData","labels","datasets","label","backgroundColor","hoverBackgroundColor","PE","total","peTypeData","Single","Bilateral","right","options","title","fontSize","legend","position","Dashboard","nextView","dashView","pageWrapId","outerContainerId","PHC","phcList","phcValue","handleChange","fetchVillageSec","phc","PHC_id","VillageSec","villageSecList","villageSecValue","fetchVillages","villageSec","villagesec_id","Village","villageValue","updateValue","BasicDetailsForm","componentDidMount","adhaarNumber","getValue","adhaarFirst","substring","adhaarSecond","adhaarThird","input","fetchOrUpdatePHCList","mandal","village_sec","phcLoading","mandal_id","fetchOrUpdateVillageSecList","villageSecLoading","fetchOrUpdateVillageList","villageLoading","validate","validIds","invalidIds","adhaarIds","filled","push","Boolean","relation","gaurdian_name","gender","maritalstatus","border","window","location","href","focus","Error","saveData","changeData","formName","handleCheckboxChange","checked","dataToSave","address","children","deworming","Promise","resolve","loadNextForm","restrictDigits","strValue","changeAdhaarFocus","updateState","valueObj","smoking","drinking","styles","center","paddingLeft","left","Check","controlId","TestDetailsForm","previous","validateOneDigitAfterDecimalSerumCreatine","validateOneDigitAfterDecimalBloodUrea","validateOneDigitAfterDecimalUricAcid","validateOneDigitAfterDecimalElectrolytesSodium","validateOneDigitAfterDecimalElectrolytesPotassium","validateOneDigitAfterDecimalBun","validateAndNext","validateAndSubmit","btn","submit","serumCreatinineAfterReRendering","serumCreatinine","bloodUreaAfterReRendering","bloodUrea","uricAcidfterReRendering","uricAcid","electrolytesSodiumReRendering","electrolytes_sodium","electrolytesPotassiumReRendering","electrolytes_potassium","bunReRendering","bun","dateoftesting","kidneystatus","ailments","dialysis","doctorreq","opd","paddingRight","role","HospitalDetailsForm","handleReferredTo","referredToSelected","referredto","hospitalAdmit","dateOfAdmit","refered","treatmentDone","discharge","dischargeStatus","deathDate","placeOfDeath","causeOfDeath","recovery","otherReferedHospitalName","rows","class","ObservationsForm","weight","height","temperature","bloodpressure","heartrate","pulserate","respiratoryrate","bpm","fever","aches","cold","cough","fatigue","diarrohea","bleeding","infection","FormSuccess","icon","faCheckCircle","size","color","marginBottom","MainForm","generatePkid","result","characters","charactersLength","charAt","random","appendState","childState","callback","submitForm","opdCheck","dialysisCheck","doctorreqCheck","dataToSend","pkid","villagesec","referred","ref_status","type_data","BasicVitals","Temperature","BP","HR","Pulse","RespRate","BasicSymptoms","Fever","Cold","Cough","Fatigue","Aches","Diarrohea","Bleeding","Infection","others","report","patient_status","hb","wbc_count","diffrential_count","plat_count","alert","Error404","seconds","setInterval","innerHTML","clearInterval","faTimesCircle","Navbar","collapseOnSelect","expand","Brand","logo","Toggle","aria-controls","Collapse","Nav","Link","faHome","faChartLine","faUserPlus","faInfoCircle","PrivateRoute","component","rest","render","to","pathname","from","Login","error","margin","App","refreshAuth","msecDifference","getTime","subscribe","x","exact","path","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","users","realFetch","fetch","url","opts","isLoggedIn","reject","setTimeout","endsWith","method","params","body","find","ok","message","configureFakeBackend","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b7dbbee0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/S1.fa95cb07.png\";","module.exports = __webpack_public_path__ + \"static/media/S2.36374932.png\";","module.exports = __webpack_public_path__ + \"static/media/S3.52172d80.png\";","module.exports = __webpack_public_path__ + \"static/media/S4.534dbb4b.png\";","module.exports = __webpack_public_path__ + \"static/media/S5.50e3b725.png\";","module.exports = __webpack_public_path__ + \"static/media/S6.0b25fff5.png\";","module.exports = __webpack_public_path__ + \"static/media/S7.3d234977.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent.e386adfe.png\";","import React from 'react';\nimport './Cards.css'\nimport { Card, CardDeck } from 'react-bootstrap';\nimport CountUp from 'react-countup';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, active } }) => {\n  if (!confirmed) {\n    return <h1>Loading...</h1>\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>\n        COVID-19 stats for Andhra Pradesh\n          </h1>\n      <CardDeck>\n        <Card\n          style={{ width: '18rem' }}\n          text=\"D13C2B\"\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n\n          <Card.Body className=\"confirmed\">\n            <Card.Title> Confirmed </Card.Title>\n            <Card.Text><CountUp start={0} end={confirmed} duration={1.75} separator=\",\" /> </Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n\n          <Card.Body className=\"active\">\n            <Card.Title> Active </Card.Title>\n            <Card.Text> <CountUp start={0} end={active} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n\n          <Card.Body className=\"recovered\">\n            <Card.Title> Recovered </Card.Title>\n            <Card.Text> <CountUp start={0} end={recovered} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          style={{ width: '18rem' }}\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n\n          <Card.Body className=\"deaths\">\n            <Card.Title> Deaths </Card.Title>\n            <Card.Text> <CountUp start={0} end={deaths} duration={1.75} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n\n\n      </CardDeck>\n\n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\nconst url = \"https://api.covidindiatracker.com/state_data.json\"\n\nexport const fetchData = async() =>{\n    try{\n        const {data} = await axios.get(url);\n        const modifiedData = {\n        confirmed:data[2].confirmed,\n        recovered:data[2].recovered,\n        deaths:data[2].deaths,\n        active:data[2].active,\n      }\n\n      return modifiedData\n    }\n    catch(error){\n\n    }\n}\n","import React, { Component } from 'react'\nimport { Jumbotron, Container, Row } from 'react-bootstrap';\nimport './Home.css';\nimport Cards from '../Cards/Cards';\nimport { fetchData } from '../../CovidApi';\n\nexport default class Home extends Component {\n  state = {\n    data: {},\n  }\n//Comment\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <Container>\n        <Jumbotron>\n          <h2>Welcome to TracerIND</h2>\n        </Jumbotron>\n        <Row className=\"show-grid text-center\">\n          <Cards data={data} />\n        </Row>\n      </Container>\n    )\n  }\n}\n","\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nimport imgCard1 from \"./img/S1.png\";\nimport imgCard2 from \"./img/S2.png\";\nimport imgCard3 from \"./img/S3.png\";\nimport imgCard4 from \"./img/S4.png\";\nimport imgCard5 from \"./img/S5.png\";\nimport imgCard6 from \"./img/S6.png\";\nimport imgCard7 from \"./img/S7.png\";\nimport './About.css';\n\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Container>\n        <h1 style={{marginTop: \"1rem\"}} className=\"heading\"><span>meet </span>Our Team</h1>\n        <div className=\"profiles\">\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard3} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shlok Parida</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard1} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Prakruti Chandak</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard2} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Abhishek Prasad </h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard4} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Hrituja Khatavkar</h3>\n                <h5>Front-end developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard5} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Akshat </h3>\n                <h5>Android Developer</h5>\n              </div></Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard6} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">  Gaurav Roy </h3>\n                <h5>Front-end Developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard7} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shubhankar</h3>\n                <h5>Android Developer</h5>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { push as Menu } from \"react-burger-menu\";\nimport './Sidebar.css'\n\n\nexport default function SideBar(props) {\n\n  const views = ['PatientStatus', 'HealthStats', 'PVTGTracker', 'PedalEdemaTracker'];\n\n  React.useEffect(() => {\n    for(let i = 0; i < views.length; i++){\n      let element = document.getElementById(views[i]);\n      if(views[i] !== props.currentView){\n        if (element.classList.contains('sidebar-active')){\n          element.classList.remove('sidebar-active');\n        }\n      }\n      else{\n        element.classList.add('sidebar-active');\n      }\n    }\n  })\n\n  return (\n    // Pass on our props\n    <Menu {...props}>\n      <button className=\"menu-item\" id=\"PatientStatus\" onClick={() => props.changeView('PatientStatus')}>\n        Patient Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"HealthStats\" onClick={() => props.changeView('HealthStats')}>\n        Health Stats\n      </button>\n\n      <button className=\"menu-item\" id=\"PVTGTracker\" onClick={() => props.changeView('PVTGTracker')}>\n        PVTG Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"PedalEdemaTracker\" onClick={() => props.changeView('PedalEdemaTracker')}>\n        Pedal Edema Tracker\n      </button>\n    </Menu>\n  );\n};\n","import React from 'react';\n\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\n\nclass ModalBody extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let patientDetails = this.props\n        let patient = patientDetails.patientDetails\n        let firstName = patient.name;\n        let space = \" \";\n        let lastName = patient.surname;\n        let fullName = firstName.concat(space, lastName);\n        let pedalEdema = 'Yes'\n        let isPedalTypeEmpty = true\n        if (patient.pedalEdema === 'N') {\n            pedalEdema = 'No'\n        }\n        if (pedalEdema === 'Yes') {\n            // console.log(\"here\")\n            if (!(patient.pedaltype === '')) {\n                // console.log(\"here\")\n                isPedalTypeEmpty = false\n            }\n        }\n        let adhaar = patient.adhaar.slice(0, 4) + \"-\" + patient.adhaar.slice(4, 8) + \"-\" + patient.adhaar.slice(8)\n        // console.log(adhaar)\n        // console.log(patient)\n        return (\n            <Container>\n                <Form>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Name: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"name\" value={fullName.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Adhaar: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"adhar\" value={adhaar} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Village: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"vilage\" value={patient.village} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Age: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"age\" value={patient.age} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Phone: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"phone\" value={patient.phone} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Blood Group: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"bloodGroup\" value={patient.bloodgroup.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Deceased: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"deceased\" value={patient.deceased.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>PVTG: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pvtg\" value={patient.PVTG.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Pedal Edema: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pedal\" value={pedalEdema.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {(() => {\n                        if (isPedalTypeEmpty) {\n                            return (\n                                <Container></Container>\n                            )\n                        }\n                        else {\n                            return (\n                                <Row>\n                                    <Col >\n                                        <Form.Group as={Row}>\n                                            <Col sm={3}>\n                                                <Form.Label>Pedal Type: </Form.Label>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Form.Control placeholder=\"\" id=\"pedalType\" value={patient.pedaltype.toUpperCase()} disabled\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n\n                    })()}\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default ModalBody;","import React from 'react';\n\nimport { Table, Button, Row, Col, Modal } from 'react-bootstrap';\nimport ModalBody from '../ModalBody/ModalBody';\nimport './GenericTable.css';\n\n//Received props\n//Json data -- data\n//List of headings -- headers\n//List of Json keys to be displayed under each heading -- keys\n//List of data types for each column for making filters -- dataTypes\n//All list should be of equal lengths and in same sequence. Otherwise table will show unpredictable behaviour\n//loading -- loading\n\nclass GenericTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleShowCustom = this.handleShowCustom.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            noOfRows: \"\",\n            currentPageIndex: 0,\n            show: false,\n            patientDetailsModal: {}\n        }\n    }\n\n\n    handleClose = () => {\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        console.log(\"handleShow called\")\n\n    }\n\n    handleShowCustom = (value, indx) => {\n        this.setState({ show: true, patientDetailsModal: value });\n    }\n\n    componentDidMount() {\n        let stateObj = {};\n        let { dataTypes, keys } = this.props;\n        for (let i = 0; i < dataTypes.length; i++) {\n            if (dataTypes[i] === 'Number') {\n                stateObj['KEY_' + keys[i]] = {                  //Appending KEY_ to prevent data overwrite if any props key matches our internal state key\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n            }\n            else if (dataTypes[i] === 'String') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n            else if (dataTypes[i] === 'Boolean') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n        }\n        this.setState(stateObj);\n    }\n\n    handleSearchChange = event => {\n        let idFragments = event.target.id.split('_');\n        let obj = {};\n        let key = idFragments[1];\n        let dataType = this.props.dataTypes[this.props.keys.indexOf(key)];\n\n        if (dataType === 'String') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        else if (dataType === 'Number') {\n            obj['KEY_' + key] = this.state['KEY_' + key];\n            if (event.target.value === \"\") {\n                obj['KEY_' + key][idFragments[2]] = idFragments[2] === 'min' ? Number.MIN_VALUE : Number.MAX_VALUE;\n            }\n            else {\n                obj['KEY_' + key][idFragments[2]] = Number(event.target.value);\n            }\n        }\n        else if (dataType === 'Boolean') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        this.setState(obj);\n    }\n\n    isNotNullOrUndefinedOrBlank = (value) => {\n        return (value !== null && value !== undefined && value !== \"\");\n    }\n\n    clearFilters = () => {\n        let { dataTypes, keys } = this.props;\n        let obj = {};\n        for (let i = 0; i < keys.length; i++) {\n            if (dataTypes[i] === \"String\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n            else if (dataTypes[i] === \"Number\") {\n                obj['KEY_' + keys[i]] = {\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n                document.getElementById('KEY_' + keys[i] + '_min').value = \"\";\n                document.getElementById('KEY_' + keys[i] + '_max').value = \"\";\n            }\n            else if (dataTypes[i] === \"Boolean\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n        }\n        obj.noOfRows = \"\";\n        this.setState(obj);\n    }\n\n    changeNoOfRows = event => {\n        if (event.target.value !== \"\") {\n            event.target.value = Math.abs(event.target.value);\n        }\n        this.setState({ noOfRows: event.target.value });\n    }\n\n    nextPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex + 1 });\n    }\n\n    previousPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex - 1 });\n    }\n\n    render() {\n        let { headers, data, loading, keys, dataTypes } = this.props;\n        let pageData = [];\n        let { noOfRows, currentPageIndex, patientDetailsModal } = this.state;\n        let dataLength = 0;\n        let lastPageIndex = 0;\n\n        if (!loading) {\n\n            dataLength = data.length;\n            if (noOfRows !== \"\") {\n                if (dataLength % noOfRows === 0) {\n                    lastPageIndex = Math.floor(dataLength / noOfRows) - 1;\n                }\n                else {\n                    lastPageIndex = Math.floor(dataLength / noOfRows);\n                }\n            }\n\n            if (noOfRows === \"\") {\n                pageData = data;\n            }\n            else if (dataLength >= (currentPageIndex + 1) * noOfRows) {\n                pageData = data.slice(currentPageIndex * noOfRows, (currentPageIndex + 1) * noOfRows);\n            }\n            else {\n                pageData = data.slice(currentPageIndex * noOfRows, dataLength);\n            }\n\n            pageData = pageData.filter(rowData => {\n                for (let i = 0; i < keys.length; i++) {\n                    if (dataTypes[i] === \"String\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && !rowData[keys[i]].toLowerCase().includes(this.state['KEY_' + keys[i]].toLowerCase())) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Number\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && (rowData[keys[i]] < this.state['KEY_' + keys[i]].min || rowData[keys[i]] > this.state['KEY_' + keys[i]].max)) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Boolean\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]].toString()) && this.isNotNullOrUndefinedOrBlank(this.state['KEY_' + keys[i]]) && (rowData[keys[i]].toString() !== this.state['KEY_' + keys[i]].toString())) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n        }\n        //  console.log(pageData)\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm={3} xs={4} >\n                        <Button variant=\"danger\" onClick={this.clearFilters} className=\"filter-button\">\n                            Clear filters\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"previousButton\" onClick={this.previousPage} disabled={currentPageIndex === 0} >\n                            Previous Page\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"nextButton\" onClick={this.nextPage} disabled={currentPageIndex >= lastPageIndex}>\n                            Next Page\n                        </Button>\n                    </Col>\n\n                    <Col sm={3}>\n                        <input type=\"number\" min=\"1\" value={this.state.noOfRows} placeholder=\"No. of Rows\" onChange={this.changeNoOfRows} className=\"row-input-field\" />\n                    </Col>\n                </Row>\n                <Table style={{ textAlign: \"center\" }} striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            {\n                                headers.map((header, index) => {\n                                    return (\n                                        <td key={index}>{header}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (() => {\n                                if (loading) {\n                                    return (\n                                        <tr>\n                                            <td colSpan={headers.length}>\n                                                Loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <React.Fragment>\n                                            <tr key=\"searchFields\">\n                                                {\n                                                    keys.map((key, i) => {\n                                                        let inputType = \"text\";\n                                                        if (dataTypes[i] === 'Number') {\n                                                            inputType = \"number\";\n                                                        }\n                                                        if (dataTypes[i] === 'Boolean') {\n                                                            inputType = \"booleanSelect\";\n                                                        }\n                                                        if (inputType === \"text\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key}\n                                                                        placeholder=\"Filter\"\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"number\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_min'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Min\"\n                                                                        className=\"form-control input-min\"\n                                                                    />\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_max'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Max\"\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"booleanSelect\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <select\n                                                                        value={this.state['KEY_' + key]}\n                                                                        id={'KEY_' + key}\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"Yes\">Yes</option>\n                                                                        <option value=\"No\">No</option>\n                                                                    </select>\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else {\n                                                            return (\n                                                                <td></td>\n                                                            )\n                                                        }\n                                                    })\n                                                }\n                                            </tr>\n                                            {\n                                                (() => {\n                                                    if (pageData.length === 0) {\n                                                        return (\n                                                            <tr>\n                                                                <td colSpan={headers.length}>\n                                                                    Nothing found to display.\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    else {\n                                                        return (\n                                                            pageData.map((row, indexRow) => {\n                                                                return (\n                                                                    <tr onClick={() => this.handleShowCustom(row, indexRow)} key={indexRow}>\n                                                                        {\n                                                                            keys.map((key, indexCol) => {\n                                                                                return (\n                                                                                    <td key={indexCol}>\n                                                                                        {row[key] ? row[key].toString() : \"\"}\n                                                                                    </td>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                        )\n                                                    }\n                                                })()\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n                            })()\n                        }\n                    </tbody>\n                </Table>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Patient Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ModalBody patientDetails={patientDetailsModal} />\n                    </Modal.Body>\n                    <Modal.Footer style={{justifyContent: \"center\"}}>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        {/* <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                            </Button> */}\n                    </Modal.Footer>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GenericTable;\n","import { BehaviorSubject } from 'rxjs';\n\nimport { handleResponse } from '../helpers';\n\nimport axios from 'axios';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nconst URI = process.env.REACT_APP_SERVER_URI;\n\nexport const authenticationService = {\n    login,\n    logout,\n    refresh,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\nfunction login(username, password) {\n\n    return axios.post(URI + 'token_jwt_get/', { username, password })\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            if(user){\n                let userData = {\n                    username,\n                    token: user.token,\n                    timestamp: new Date()\n                }\n                localStorage.setItem('currentUser', JSON.stringify(userData));\n                currentUserSubject.next(userData);\n\n                return user;\n            }\n        });\n}\n\nfunction refresh() {\n    if(currentUserSubject.value){\n        axios.post(URI + 'token_jwt_refresh/', { token: currentUserSubject.value.token })\n            .then(handleResponse)\n            .then(data => {\n                if(data) {\n                    let newData = { ...currentUserSubject.value };\n                    newData.token = data.token;\n                    newData.timestamp = new Date();\n\n                    localStorage.setItem('currentUser', JSON.stringify(newData));\n                    currentUserSubject.next(newData);\n                }\n            });\n    }\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `JWT ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","import { authenticationService } from '../services';\n\nexport function handleResponse(response) {\n    // return response.text().then(text => {\n    //     const data = text && JSON.parse(text);\n    //     if (!response.ok) {\n    //         if ([400, 401, 403].indexOf(response.status) !== -1) {\n    //             // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n    //             authenticationService.logout();\n    //             window.location.reload();\n    //         }\n\n    //         const error = (data && data.message) || response.statusText;\n    //         return Promise.reject(error);\n    //     }\n\n    //     return data;\n    // });\n    // console.log(response);\n    if(response.status === 200){\n        return response.data;\n    }\n    else {\n        authenticationService.logout();\n        return false;\n    }\n    // if([400, 401, 403].indexOf(response.status) !== -1){\n    //     authenticationService.logout();\n    //     window.location.reload();\n    //     return false;\n    // }\n    // return response.data;\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from 'react';\n\nimport { Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport './Directory.css';\nimport GenericTable from '../GenericTable/GenericTable';\n\nimport { authHeader } from '../../helpers';\n\nclass Directory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchField: \"\",\n            patientList: [],\n            villageList: [],\n            loading: true\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetAllPatient/',\n            {\n                headers: authHeader()\n        }).then(response => {\n                    // console.log(response);\n                    axios.get(this.uri + 'GetAllVillage/', \n                    {\n                        headers: authHeader()\n                    }).then(responseVillage => {\n                        // this.setState({ villageList: responseVillage.data });\n                        // this.setState({ loading: false });\n                        this.setState(\n                            {\n                                patientList: response.data,\n                                villageList: responseVillage.data,\n                                loading: false\n                            }\n                        )\n                    })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                    // this.setState({ patientList: response.data });\n                })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getVillageNameFromId = (id) => {\n        // console.log(\"Id received \" + id);\n        let { villageList } = this.state;\n        if (villageList.length > 0) {\n            for (let i = 0; i < villageList.length; i++) {\n                if (villageList[i].village_id === id) {\n                    return villageList[i].name;\n                }\n            }\n        }\n    }\n\n    render() {\n        const headers = ['Name', 'Village', 'Kidney Status', 'Deceased'];\n        const keys = ['fullName', 'village', 'kidneystatus', 'deceased'];\n        const dataTypes = ['String', 'String', 'String', 'Boolean'];\n        let structuredData = this.state.patientList.map(patient => {\n            let newPatient = { ...patient };\n            newPatient.village = this.getVillageNameFromId(patient.village);\n            newPatient[\"fullName\"] = newPatient.name + ' ' + newPatient.surname;\n            newPatient.deceased = newPatient.deceased ? \"Yes\" : \"No\";\n            return newPatient;\n        });\n\n        return (\n            <Container style={{ marginTop: \"2rem\" }}>\n                <GenericTable data={structuredData} loading={this.state.loading} headers={headers} keys={keys} dataTypes={dataTypes} />\n            </Container>\n        )\n    }\n}\n\nexport default Directory;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container } from 'react-bootstrap';\n\nimport { uri } from '../../index';\nimport { authHeader } from '../../helpers';\n\nexport default function HealthStats(props) {\n    let [loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        axios.get(uri + 'GetStats/', \n        {\n            headers: authHeader()\n        }\n        ).then(response => {\n            console.log(response);\n            setLoading(false);\n        })\n    })\n\n    return (\n        <Container>\n            {\n                (() => {\n                    if (loading) {\n                        return <React.Fragment>\n                            Loading...\n                        </React.Fragment>\n                    }\n                    else {\n                        return <React.Fragment>\n                            Loading done...\n                        </React.Fragment>\n                    }\n                })()\n            }\n        </Container>\n    )\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { Container } from 'react-bootstrap';\n\nimport { uri } from '../../index';\nimport { authHeader } from '../../helpers';\n\nexport default function PVTGTracker(props) {\n    let [loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        axios.get(uri + 'GetPVTG/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            console.log(response);\n            setLoading(false);\n        })\n    })\n\n    return (\n        <Container>\n            {\n                (() => {\n                    if (loading) {\n                        return <React.Fragment>\n                            Loading...\n                        </React.Fragment>\n                    }\n                    else {\n                        return <React.Fragment>\n                            Loading done...\n                        </React.Fragment>\n                    }\n                })()\n            }\n        </Container>\n    )\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\n\n// import { uri } from '../../index';\nimport { authHeader } from '../../helpers';\n\nclass PETracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: {}\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPE/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            console.log(response);\n            this.setState({ data: response.data }, this.setState({loading: false}));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <React.Fragment>\n                    Loading...\n                </React.Fragment>\n            )\n        }\n        else {\n            const peData = {\n                labels: ['Yes', 'No'],\n                datasets: [\n                    {\n                        label: 'Rainfall',\n                        backgroundColor: [\n                            '#B21F00',\n                            '#6800B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#501800',\n                            '#35014F'\n                        ],\n                        data: [this.state.data.PE, this.state.data.total - this.state.data.PE]\n                    }\n                ]\n            }\n            const peTypeData = {\n                labels: ['Single Leg', 'Bilateral'],\n                datasets: [\n                    {\n                        label: 'Rainfall',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#C9DE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#4B5000'\n                        ],\n                        data: [this.state.data.Single, this.state.data.Bilateral]\n                    }\n                ]\n            }\n            return (\n                <Container style={{marginTop: \"10vh\"}}>\n                    <Row>\n                        <Col sm={6}>\n                            <Row>\n                                <Col style={{ right: \"2rem\" }}>\n                                    <h3>Pedal Edema Cases</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Cases',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6}>\n                            <Row>\n                                <Col style={{right: \"3rem\"}}>\n                                    <h3>Pedal Edema Type Distribution</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peTypeData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Type Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PETracker;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './Dashboard.css';\n\nimport SideBar from '../Sidebar/Sidebar';\nimport Directory from '../Directory/Directory';\nimport HealthStats from '../HealthStats/HealthStats';\nimport PVTGTracker from '../PVTGTracker/PVTGTracker';\nimport PETracker from '../PETracker/PETracker';\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dashView: \"PedalEdemaTracker\"\n        }\n    }\n\n    changeView = (nextView) => {\n        this.setState({dashView: nextView});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"SideBarContainer\">\n                    <SideBar currentView={this.state.dashView} changeView={this.changeView} pageWrapId={\"page-wrap\"} outerContainerId={\"SideBarContainer\"} />\n                    <div id=\"page-wrap\">\n                        {\n                            (() => {\n                                switch (this.state.dashView) {\n                                    case \"PatientStatus\":\n                                        return <Directory />\n                                    case \"HealthStats\":\n                                        return <HealthStats />\n                                    case \"PVTGTracker\":\n                                        return <PVTGTracker />\n                                    case \"PedalEdemaTracker\":\n                                        return <PETracker />\n                                    default:\n                                        return (\n                                            <Container>\n                                                <Row style={{ marginTop: \"40vh\" }}>\n                                                    <Col>\n                                                        <h1>\n                                                            Coming Soon..\n                                                        </h1>\n                                                    </Col>\n                                                </Row>\n                                            </Container>\n                                        )\n                                }\n                            })()\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\n\nexport default function PHC(props) {\n    let {loading, phcList} = props;\n\n    React.useEffect(() => {\n        if (props.phcValue) {\n            document.getElementById(props.id).value = props.phcValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillageSec(event.target.value);\n    }\n\n    if (!phcList) {\n        phcList = [];\n    }\n\n    if(!loading) {\n        if (phcList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC</option>\n                    {\n                        phcList.map((phc, i) => {\n                            return (\n                                <option value={phc.PHC_id} key={i}>{phc.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Mandal First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}\n","import React  from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function VillageSec(props) {\n    let { loading, villageSecList } = props;\n    \n    React.useEffect(() => {\n        if (props.villageSecValue) {\n            document.getElementById(props.id).value = props.villageSecValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillages(event.target.value);\n    }\n\n    if (!villageSecList) {\n        villageSecList = [];\n    }\n\n    if(!loading) {\n        if (villageSecList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageSecList.map((villageSec, i) => {\n                            return (\n                                <option value={villageSec.villagesec_id} key={i}>{villageSec.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC first</option>\n                </Form.Control>\n            )\n        }\n    }\n    else{\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function Village(props) {\n    let { loading, villageList } = props;\n    React.useEffect(() => {\n        if (props.villageValue) {\n            document.getElementById(props.id).value = props.villageValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.updateValue({ village: event.target.value });\n    }\n\n    if (!villageList) {\n        villageList = [];\n    }\n\n    if (!loading) {\n        if (villageList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageList.map((village, i) => {\n                            return (\n                                <option value={village.village_id} key={i}>{village.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village Sec. First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PHC from '../PHC/PHC';\nimport VillageSec from '../VillageSecretariat/VillageSec';\nimport Village from '../Village/Village';\nimport axios from 'axios';\n\nimport { authHeader } from '../../helpers';\n\nimport './BasicDetailsForm.css';\nclass BasicDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaarFirst: \"\",\n            adhaarSecond: \"\",\n            adhaarThird: \"\",\n            mandal: props.getValue('mandal'),\n            phc: props.getValue('phc'),\n            village_sec: props.getValue('village_sec'),\n            village: props.getValue('village'),\n            name: props.getValue('name'),\n            surname: props.getValue('surname'),\n            relation: props.getValue('relation'),\n            gaurdian_name: props.getValue('gaurdian_name'),\n            age: props.getValue('age'),\n            gender: props.getValue('gender'),\n            maritalstatus: props.getValue('maritalstatus'),\n            phone: props.getValue('phone'),\n            bloodgroup: props.getValue('bloodgroup'),\n            PVTG: props.getValue('PVTG'),\n            address: props.getValue('address'),\n            deworming: props.getValue('deworming'),\n            phcList: props.getValue('phcList'),\n            villageList: props.getValue('villageList'),\n            villageSecList: props.getValue('villageSecList'),\n            phcLoading: false,\n            villageSecLoading: false,\n            villageLoading: false,\n            smoking: props.getValue('smoking'),\n            drinking: props.getValue('drinking')\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount = () => {\n        let adhaarNumber = this.props.getValue('adhaar');\n        if (adhaarNumber) {\n            this.setState({ adhaarFirst: adhaarNumber.substring(0, 4) });\n            this.setState({ adhaarSecond: adhaarNumber.substring(4, 8) });\n            this.setState({ adhaarThird: adhaarNumber.substring(8, 12) });\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    fetchOrUpdatePHCList = event => {\n        this.setState(\n            {\n                mandal: event.target.value,\n                phcList: [],\n                phc: \"\",\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                phcLoading: event.target.value ? true : false,\n            }\n        );\n        if (event.target.value) {\n            console.log(\"Getting phcs\");\n            axios.post(this.uri + 'GetPHCData/'\n                , {\n                    mandal_id: event.target.value\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ phcList: response.data, phcLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageSecList = (phc) => {\n        this.setState(\n            {\n                phc: phc,\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                villageSecLoading: phc ? true : false\n            }\n        );\n        if (phc) {\n            console.log(\"Getting village secs\");\n            axios.post(this.uri + 'GetVillageSecData/',\n                {\n                    PHC_id: phc\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageSecList: response.data, villageSecLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageList = (villageSec) => {\n        this.setState({ \n            villageList: [], \n            village: \"\", \n            village_sec: villageSec, \n            villageLoading: villageSec ? true : false \n        });\n        if (villageSec) {\n            console.log(\"Getting villages\");\n            axios.post(this.uri + 'GetVillageData/',\n                {\n                    villagesec_id: villageSec\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageList: response.data, villageLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    validate = () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        let validIds = [];\n        let invalidIds = [];\n        try {\n            //Adhaar fields validation\n            let adhaarIds = [\"adhaarFirst\", \"adhaarSecond\", \"adhaarThird\"];\n            let filled = false;\n            for (let i = 0; i < adhaarIds.length; i++) {\n                if (this.state[adhaarIds[i]] !== \"\") {\n                    filled = true;\n                    break;\n                }\n            }\n            if (filled) {\n                for (let i = 0; i < adhaarIds.length; i++) {\n                    if (this.state[adhaarIds[i]].length < 4) {\n                        invalidIds.push(adhaarIds[i]);\n                    }\n                    else {\n                        validIds.push(adhaarIds[i]);\n                    }\n                }\n            }\n            //Other field validations\n            Boolean(this.state.mandal) ? validIds.push('mandal') : invalidIds.push('mandal');\n            Boolean(this.state.phc) ? validIds.push('phc') : invalidIds.push('phc');\n            Boolean(this.state.village_sec) ? validIds.push('village_sec') : invalidIds.push('village_sec');\n            Boolean(this.state.village) ? validIds.push('village') : invalidIds.push('village');\n            Boolean(this.state.name) ? validIds.push('name') : invalidIds.push('name');\n            Boolean(this.state.surname) ? validIds.push('surname') : invalidIds.push('surname');\n            Boolean(this.state.relation) ? validIds.push('relation') : invalidIds.push('relation');\n            Boolean(this.state.gaurdian_name) ? validIds.push('gaurdian_name') : invalidIds.push('gaurdian_name');\n            Boolean(this.state.age) ? validIds.push('age') : invalidIds.push('age');\n            Boolean(this.state.gender) ? validIds.push('gender') : invalidIds.push('gender');\n            Boolean(this.state.maritalstatus) ? validIds.push('maritalstatus') : invalidIds.push('maritalstatus');\n            Boolean(this.state.bloodgroup) ? validIds.push('bloodgroup') : invalidIds.push('bloodgroup');\n            Boolean(this.state.PVTG) ? validIds.push('PVTG') : invalidIds.push('PVTG');\n            if (this.state.phone === \"\" || this.state.phone.length !== 10) {\n                invalidIds.push('phone');\n            }\n            else {\n                validIds.push('phone');\n            }\n            for (let i = 0; i < validIds.length; i++) {\n                document.getElementById(validIds[i]).style.border = \"\";\n            }\n            if (invalidIds.length > 0) {\n                window.location.href = \"#\" + invalidIds[0];\n                for (let i = 0; i < invalidIds.length; i++) {\n                    document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                }\n                document.getElementById(invalidIds[0]).focus();\n                throw new Error();\n            }\n            else {\n                window.location.href = \"#\";\n            }\n            //Still in try block? Means all fields valid. Now saving the data to parent component.\n            this.saveData();\n            this.props.changeData({ formName: \"Observations\" });\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({ [input]: document.getElementById(input).checked });\n    }\n\n    saveData = async () => {\n        let dataToSave = {\n            adhaar: this.state.adhaarFirst + this.state.adhaarSecond + this.state.adhaarThird,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            village_sec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            address: this.state.address,\n            children: this.state.children,\n            deworming: this.state.deworming,\n            phcList: this.state.phcList,\n            villageList: this.state.villageList,\n            villageSecList: this.state.villageSecList\n        }\n        await new Promise(resolve => this.props.changeData(dataToSave, () => resolve()));\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    restrictDigits = length => event => {\n        let strValue = event.target.value.toString();\n        if (strValue.length > length) {\n            event.target.value = Number(strValue.substring(0, length));\n        }\n        this.setState({ [event.target.id]: event.target.value.toString() });\n        if (event.target.id.includes('adhaar')) {\n            this.changeAdhaarFocus(event.target.id, event.target.value);\n        }\n    }\n\n    updateState = (valueObj) => {\n        this.setState(valueObj);\n    }\n\n    changeAdhaarFocus = (id, value) => {\n        if (id === 'adhaarFirst' && value.length === 4) {\n            document.getElementById('adhaarSecond').focus();\n        }\n        else if (id === 'adhaarSecond' && value.length === 4) {\n            document.getElementById('adhaarThird').focus();\n        }\n    }\n\n    render() {\n\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Basic Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3} xs={12}>\n                                        <Form.Label>Aadhar Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarFirst\"\n                                            value={this.state.adhaarFirst}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarSecond\"\n                                            value={this.state.adhaarSecond}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarThird\"\n                                            value={this.state.adhaarThird}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Mandal :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.fetchOrUpdatePHCList}\n                                            id=\"mandal\"\n                                            value={this.state.mandal}\n                                        >\n                                            <option value=\"\">Select Mandal</option>\n                                            <option value=\"01\">Chintoor</option>\n                                            <option value=\"02\">Yetapaka</option>\n                                            <option value=\"03\">Kunnavaram</option>\n                                            <option value=\"04\">V.R Puram</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>PHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <PHC phcList={this.state.phcList}\n                                            phcValue={this.state.phc}\n                                            fetchVillageSec={this.fetchOrUpdateVillageSecList}\n                                            loading={this.state.phcLoading}\n                                            id=\"phc\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Village Secretariat :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <VillageSec\n                                            id=\"village_sec\"\n                                            villageSecValue={this.state.village_sec}\n                                            villageSecList={this.state.villageSecList}\n                                            loading={this.state.villageSecLoading}\n                                            fetchVillages={this.fetchOrUpdateVillageList}\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Village :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Village\n                                            updateValue={this.updateState}\n                                            id=\"village\"\n                                            villageList={this.state.villageList}\n                                            loading={this.state.villageLoading}\n                                            villageValue={this.state.village}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>First Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"First Name\"\n                                            id=\"name\"\n                                            onChange={this.handleChange('name')}\n                                            value={this.state.name} />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Surname :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Surname\"\n                                            onChange={this.handleChange('surname')}\n                                            id=\"surname\"\n                                            value={this.state.surname} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>S/o, D/o, W/o:</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"relation\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"son\"\n                                                    id=\"sonOf\"\n                                                    label=\"Son of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"son\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"daughter\"\n                                                    id=\"daughterOf\"\n                                                    label=\"Daughter of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"daughter\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"wife\"\n                                                    id=\"wifeOf\"\n                                                    label=\"Wife of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"wife\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Label>Guardian Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter Name\"\n                                            onChange={this.handleChange('gaurdian_name')}\n                                            id=\"gaurdian_name\"\n                                            value={this.state.gaurdian_name}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"age\">\n                                    <Col sm={3}>\n                                        <Form.Label>Age : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"99\"\n                                            type=\"number\"\n                                            placeholder=\"Enter age\"\n                                            onChange={this.restrictDigits(2)}\n                                            value={this.state.age} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Sex :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"gender\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"M\"\n                                                    id=\"male\"\n                                                    label=\"Male\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"M\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"F\"\n                                                    id=\"female\"\n                                                    label=\"Female\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"F\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NB\"\n                                                    id=\"transgender\"\n                                                    label=\"Transgender\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"MB\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Marital Status :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('maritalstatus')}\n                                            id=\"maritalstatus\"\n                                            value={this.state.maritalstatus}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"single\">Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"separated\">Separated</option>\n                                            <option value=\"divorced\">Divorced</option>\n                                            <option value=\"widowed\">Widowed</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Phone Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999999999\"\n                                            type=\"number\"\n                                            placeholder=\"Enter Contact number\"\n                                            id=\"phone\"\n                                            onChange={this.restrictDigits(10)}\n                                            value={this.state.phone} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"address\">\n                                    <Col sm={3}>\n                                        <Form.Label>Address : </Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <textarea\n                                            placeholder=\"Enter address\"\n                                            value={this.state.address}\n                                            onChange={this.handleChange('address')}\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"bloodgroup\">\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Group :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('bloodgroup')}\n                                            value={this.state.bloodgroup}\n                                        >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"o-\">O-</option>\n                                            <option value=\"o+\">O+</option>\n                                            <option value=\"a-\">A-</option>\n                                            <option value=\"a+\">A+</option>\n                                            <option value=\"b-\">B-</option>\n                                            <option value=\"b+\">B+</option>\n                                            <option value=\"ab-\">AB-</option>\n                                            <option value=\"ab+\">AB+</option>\n                                            <option value=\"N.A.\">Not yet known</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Deworming :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"deworming\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"deworming_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"deworming_no\"\n                                                    label=\"No\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>PVTG :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"PVTG\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"ST\"\n                                                    id=\"PVTG_st\"\n                                                    label=\"ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"ST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NST\"\n                                                    id=\"PVTG_nst\"\n                                                    label=\"Non ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"NST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"PVTG\"\n                                                    id=\"PVTG_pvt\"\n                                                    label=\"PVTG\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"PVTG\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Label>\n                                                    Habits :\n                                                </Form.Label>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <Row>\n                                            <Col sm={3}>\n                                               <Form.Label>\n                                                    Smoking\n                                               </Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"smoking\"\n                                                    name=\"smoking\"\n                                                    onClick={this.handleCheckboxChange('smoking')}\n                                                    checked={this.state.smoking}\n                                                />\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Label>Drinking</Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"drinking\"\n                                                    name=\"drinking\"\n                                                    onClick={this.handleCheckboxChange('drinking')}\n                                                    checked={this.state.drinking}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={styles.center}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validate}>Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BasicDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './TestDetailsForm.css';\n\nclass TestDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateoftesting: props.getValue('dateoftesting'),\n            serumCreatinine: props.getValue('serumCreatinine'),\n            bloodUrea: props.getValue('bloodUrea'),\n            uricAcid: props.getValue('uricAcid'),\n            electrolytes_sodium: props.getValue('electrolytes_sodium'),\n            electrolytes_potassium: props.getValue('electrolytes_potassium'),\n            bun: props.getValue('bun'),\n            pedalEdema: props.getValue('pedalEdema'),\n            pedaltype: props.getValue('pedaltype'),\n            kidneystatus: props.getValue('kidneystatus'),\n            ailments: props.getValue('ailments'),\n            dialysis: props.getValue('dialysis'),\n            doctorreq: props.getValue('doctorreq'),\n            opd: props.getValue('opd'),\n            btn: \"Submit\",\n            loading: false,\n        }\n    }\n\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    previous = () => {\n        console.log(this.state)\n        this.saveData().then(() => {\n            this.props.changeData({ formName: \"Observations\" });\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateOneDigitAfterDecimalSerumCreatine = event => {\n        if (event.target.value > 2 && event.target.value < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBloodUrea = event => {\n        if (event.target.value > 15 && event.target.value < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalUricAcid = event => {\n        if (event.target.value > 2.6 && event.target.value < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesSodium = event => {\n        if (event.target.value > 135 && event.target.value < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesPotassium = event => {\n        if (event.target.value > 3.5 && event.target.value < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBun = event => {\n        if (event.target.value > 8 && event.target.value < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"HospitalDetails\");\n    }\n\n    // mandatoryFieldCheck = () => {\n    //     let invalidIds = [];\n    //     try {\n    //         if (this.state.kidneystatus === 'abnormal') {\n    //             if (this.state.doctorreq === \"\") {\n    //                 invalidIds.push('doctorreq')\n    //             }\n    //             if (this.state.dialysis === \"\") {\n    //                 invalidIds.push('dialysis')\n    //             }\n    //             if (invalidIds.length > 0) {\n    //                 window.location.href = \"#\" + invalidIds[0];\n    //                 for (let i = 0; i < invalidIds.length; i++) {\n    //                     document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n    //                 }\n    //                 document.getElementById(invalidIds[0]).focus();\n    //                 throw new Error();\n    //             }\n    //             else {\n    //                 window.location.href = \"#\";\n    //             }\n    //         }\n    //     }\n    //     catch (err) {\n    //         // console.log(false);\n    //     }\n    // }\n\n    validateAndSubmit = () => {\n            console.log(this.state)\n            this.setState({ btn: \"Submitting\" });\n            this.setState({ loading: true })\n            this.saveData()\n                .then(() => {\n                    console.log(this.state)\n                    this.props.submit();\n                })\n\n    }\n\n    serumCreatinineAfterReRendering = () => {\n        if (this.state.serumCreatinine > 2 && this.state.serumCreatinine < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (this.state.serumCreatinine > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bloodUreaAfterReRendering = () => {\n        if (this.state.bloodUrea > 15 && this.state.bloodUrea < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bloodUrea > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    uricAcidfterReRendering = () => {\n        if (this.state.uricAcid > 2.6 && this.state.uricAcid < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (this.state.uricAcid > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesSodiumReRendering = () => {\n        if (this.state.electrolytes_sodium > 135 && this.state.electrolytes_sodium < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_sodium > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesPotassiumReRendering = () => {\n        if (this.state.electrolytes_potassium > 3.5 && this.state.electrolytes_potassium < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_potassium > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bunReRendering = () => {\n        if (this.state.bun > 8 && this.state.bun < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bun > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.state)\n        this.serumCreatinineAfterReRendering();\n        this.bloodUreaAfterReRendering();\n        this.uricAcidfterReRendering();\n        this.electrolytesPotassiumReRendering();\n        this.electrolytesSodiumReRendering();\n        this.bunReRendering();\n\n    }\n\n    render() {\n        const { loading, btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Testing Details</legend>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date of Testing : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"date\" placeholder=\"\" id=\"dateoftesting\" onChange={this.handleChange('dateoftesting')}\n                                            value={this.state.dateoftesting} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Serum Creatinine : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control min=\"0\" type=\"number\" placeholder=\"mg/dl\" id=\"serumCreatinine\" onChange={this.validateOneDigitAfterDecimalSerumCreatine}\n                                            value={this.state.serumCreatinine} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Urea : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bloodUrea\" onChange={this.validateOneDigitAfterDecimalBloodUrea}\n                                            value={this.state.bloodUrea}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Uric Acid : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"uricAcid\" onChange={this.validateOneDigitAfterDecimalUricAcid}\n                                            value={this.state.uricAcid} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Electrolytes </h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sodium(Na) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_sodium\" onChange={this.validateOneDigitAfterDecimalElectrolytesSodium}\n                                            value={this.state.electrolytes_sodium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Potassium(K) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_potassium\" onChange={this.validateOneDigitAfterDecimalElectrolytesPotassium}\n                                            value={this.state.electrolytes_potassium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>BUN (Blood Urea Nitrogen) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bun\" onChange={this.validateOneDigitAfterDecimalBun}\n                                            value={this.state.bun} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={6} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row} >\n                                    <Col sm={6}>\n                                        <Form.Label>Pedal Edema :</Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"Y\"\n                                                    id=\"yes\"\n                                                    label=\"Yes\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"Y\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"N\"\n                                                    id=\"no\"\n                                                    label=\"No\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"N\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6} >\n                                {(() => {\n                                    if (this.state.pedalEdema === 'Y') {\n                                        return (\n                                            <Form.Group as={Row} controlId=\"pedaltype\">\n                                                <Col sm={6}>\n                                                    <Form.Label>Pedal Type :</Form.Label>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <Form.Control as=\"select\" onChange={this.handleChange('pedaltype')} value={this.state.pedaltype}>\n                                                        <option value=\"\">Choose...</option>\n                                                        <option value=\"single leg\">Single Leg</option>\n                                                        <option value=\"bilateral\">Bilateral</option>\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <p></p>\n                                        )\n                                    }\n                                })()}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={3}>\n                                <Form.Label>Kidney Functioning Status :</Form.Label>\n                            </Col>\n                            <Col sm={3}>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"good\"\n                                            id=\"good\"\n                                            label=\"Good\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"good\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"abnormal\"\n                                            id=\"abnormal\"\n                                            label=\"Abnormal\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"abnormal\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {(() => {\n                            if (this.state.kidneystatus === 'good') {\n                                return (\n                                    <Container></Container>\n                                )\n                            }\n                            else if (this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Specify the ailments : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.ailments} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={3}>\n                                                <Form.Label>Need for Dialysis :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"dialysis\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"yes\"\n                                                            label=\"Yes\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"no\"\n                                                            label=\"No\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={4}>\n                                                <Form.Label>Need for immediate Doctor Supervision :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"doctorreq\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"true\"\n                                                            label=\"Yes\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"false\"\n                                                            label=\"No\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    </React.Fragment>\n                                )\n                            }\n                        })()}\n                        <br />\n                        {(() => {\n                            if (this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={4}>\n                                            <Form.Label>Patient Type :</Form.Label>\n                                        </Col>\n                                        <Col sm={3} id=\"opd \">\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"true\"\n                                                        id=\"opd\"\n                                                        label=\"IP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"true\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"false\"\n                                                        id=\"opd\"\n                                                        label=\"OP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"false\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n\n                        {(() => {\n                            if (this.state.opd === 'true' && this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndNext}\n                                                className=\"cool-button\"\n                                            >Next</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n                            else {\n                                return (\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous.bind(this)}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndSubmit}\n                                                className=\"cool-button\"\n                                            >{loading && <i className=\"spinner-border spinner-border-sm\" role=\"status\"></i>} {btn}</Button>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n                    </fieldset>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default TestDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n// import { DateTime } from 'react-datetime-bootstrap';\n\nclass HospitalDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hospitalAdmit: props.getValue('hospitalAdmit'),\n            dateOfAdmit: props.getValue('dateOfAdmit'),\n            refered: props.getValue('refered'),\n            referredto: props.getValue('referredto'),\n            status: props.getValue('status'),\n            treatmentDone: props.getValue('treatmentDone'),\n            dialysis: props.getValue('dialysis'),\n            discharge: props.getValue('discharge'),\n            dischargeStatus: props.getValue('dischargeStatus'),\n            deceased: props.getValue('deceased'),\n            deathDate: props.getValue('deathDate'),\n            placeOfDeath: props.getValue('placeOfDeath'),\n            causeOfDeath: props.getValue('causeOfDeath'),\n            recovery: props.getValue('recovery'),\n            otherReferedHospitalName: \"\",\n            referredToSelected: props.getValue('referredToSelected') ? props.getValue('referredToSelected') : 'NO',\n            btn: \"Submit\",\n            loading:false,\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n\n    validateAndSubmit = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        // this.props.changeData(this.state);\n        this.setState({btn:\"Submitting\"});\n        this.setState({loading:true})\n       await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        // this.loadNextForm(\"HospitalDetails\");\n       this.props.submit();\n\n\n\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"TestDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    handleReferredTo = event => {\n        let value = event.target.value;\n        if(value === \"\"){\n            this.setState({ referredToSelected: 'NO', referredto: \"\" })\n        }\n        else if(value === 'other'){\n            this.setState({referredToSelected: 'OTHER', referredto: \"\"});\n        }\n        else {\n            this.setState(\n                { referredto: value, referredToSelected: 'YES' }\n            );\n        }\n    }\n\n    render() {\n      const {loading} = this.state;\n      const {btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Hospital Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"phc\">\n                                    <Col sm={3}>\n                                        <Form.Label>Hospital admitted in :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hospitalAdmit')}\n                                            value={this.state.hospitalAdmit} >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"PHC/Tulasipaka\">PHC/Tulasipaka</option>\n                                            <option value=\"PHC/E.D Pally\">PHC/E.D Pally</option>\n                                            <option value=\"PHC/Laxmipuram\">PHC/Laxmipuram</option>\n                                            <option value=\"PHC/Nellipaka\">PHC/Nellipaka</option>\n                                            <option value=\"PHC/Gowridevipeta\">PHC/Gowridevipeta</option>\n                                            <option value=\"PHC/Kuturu\">PHC/Kuturu</option>\n                                            <option value=\"PHC/Rekhapally\">PHC/Rekhapally</option>\n                                            <option value=\"PHC/Jeediguppa\">PHC/Jeediguppa</option>\n                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                            <option value=\"other\">other</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date Of Admit :</Form.Label>\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <input type=\"date\" value={this.state.dateOfAdmit} className=\"form-control\" id=\"dateOfAdmit\" onChange={this.handleChange('dateOfAdmit')} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>  Refered To any Hospitals :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"refered_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"refered_no\"\n                                                    label=\"No\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        {(() => {\n                            if (this.state.refered === \"true\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"referredto\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Hospital Refered to :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control\n                                                            as=\"select\"\n\n                                                            onChange={this.handleReferredTo}\n                                                            value={this.state.referredToSelected === 'OTHER' ? 'other' : this.state.referredto} >\n                                                            <option value=\"\">Choose...</option>\n                                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                                            <option value=\"other\">other</option>\n                                                        </Form.Control>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {(() => {\n                                                            if (this.state.referredToSelected === 'OTHER') {\n                                                                return (\n                                                                    <Form.Control as=\"textarea\"\n                                                                        type=\"text\"\n                                                                        placeholder=\"Enter Hospital Name\"\n                                                                        onChange={this.handleChange('referredto')}\n                                                                        value={this.state.referredto} />\n                                                                )\n                                                            }\n                                                            else {\n                                                                return;\n                                                            }\n                                                        })()}\n                                                    </Col>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"status\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Health Status at the time of referring :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Health Status at the time of referring\"\n                                                            onChange={this.handleChange('status')}\n                                                            value={this.state.status} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Need for dialysis :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"true\"\n                                                                    id=\"dialysis_yes\"\n                                                                    label=\"Yes\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"true\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"false\"\n                                                                    id=\"dialysis_no\"\n                                                                    label=\"No\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"false\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Treatment Provided\"\n                                                            onChange={this.handleChange('treatmentDone')}\n                                                            value={this.state.treatmentDone}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"discharge\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {/* <DateTime pickerOptions={{ format: \"LL\" }} /> */}\n                                                        <input type=\"date\" value={this.state.discharge} id=\"discharge\" className=\"form-control\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"recovery\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Recovery Status :</Form.Label>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Control as=\"textarea\" rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the recovery Status at the time of discharge\"\n                                                            onChange={this.handleChange('recovery')}\n                                                            value={this.state.recovery} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                )\n                            }\n                            else if (this.state.refered === \"false\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control placeholder=\"Enter details\" as=\"textarea\" rows=\"3\" />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <input type=\"date\" className=\"form-control\" id=\"discharge2\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                )\n                            }\n                        })()}\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.previous.bind(this)} >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validateAndSubmit}>{loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default HospitalDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './ObservationsForm.css';\n\nclass ObservationsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: props.getValue('weight'),\n            height: props.getValue('height'),\n            temperature: props.getValue('temperature'),\n            bloodpressure: props.getValue('bloodpressure'),\n            heartrate: props.getValue('heartrate'),\n            pulserate: props.getValue('pulserate'),\n            respiratoryrate: props.getValue('respiratoryrate'),\n            bpm: props.getValue('bpm'),\n            fever: props.getValue('fever'),\n            aches: props.getValue('aches'),\n            cold: props.getValue('cold'),\n            cough: props.getValue('cough'),\n            fatigue: props.getValue('fatigue'),\n            diarrohea: props.getValue('diarrohea'),\n            bleeding: props.getValue('bleeding'),\n            infection: props.getValue('infection'),\n\n        }\n    }\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({[input]: document.getElementById(input).checked});\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"TestDetails\");\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"UserDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Observations By Doctor</legend>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Vitals</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Weight :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Weight in kgs\"\n                                            onChange={this.handleChange('weight')}\n                                            value={this.state.weight}\n                                            id=\"weight\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Height :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Height in cms\"\n                                            onChange={this.handleChange('height')}\n                                            value={this.state.height}\n                                            id=\"height\"\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Temperature :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"° Farhenheit\"\n                                            onChange={this.handleChange('temperature')}\n                                            value={this.state.temperature}\n                                            id=\"temperature\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Pressure :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"XX/XX (mm of Hg)\"\n                                            onChange={this.handleChange('bloodpressure')}\n                                            value={this.state.bloodpressure}\n                                            id=\"bloodpressure\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Heart Rate</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('heartrate')}\n                                            value={this.state.heartrate}\n                                            id=\"heartrate\"\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Pulse Rate:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('pulserate')}\n                                            value={this.state.pulserate}\n                                            id=\"pulserate\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Respiratory Rate :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('respiratoryrate')}\n                                            value={this.state.respiratoryrate}\n                                            id=\"respiratoryrate\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Sypmtoms</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Fever :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fever\"\n                                            name=\"fever\"\n                                            onClick={this.handleCheckboxChange('fever')}\n                                            checked={this.state.fever}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cold :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cold\"\n                                            name=\"cold\"\n                                            onClick={this.handleCheckboxChange('cold')}\n                                            checked={this.state.cold}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cough :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cough\"\n                                            name=\"cough\"\n                                            onClick={this.handleCheckboxChange('cough')}\n                                            checked={this.state.cough}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Fatigue : </Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fatigue\"\n                                            name=\"fatigue\"\n                                            onClick={this.handleCheckboxChange('fatigue')}\n                                            checked={this.state.fatigue}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Aches & Pains :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"aches\"\n                                            name=\"aches\"\n                                            onClick={this.handleCheckboxChange('aches')}\n                                            checked={this.state.aches}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Diarrohea :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"diarrohea\"\n                                            name=\"diarrohea\"\n                                            onClick={this.handleCheckboxChange('diarrohea')}\n                                            checked={this.state.diarrohea}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Bleeding :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            id=\"bleeding\"\n                                            name=\"bleeding\"\n                                            type=\"checkbox\"\n                                            onClick={this.handleCheckboxChange('bleeding')}\n                                            checked={this.state.bleeding}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Infection :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"infection\"\n                                            name=\"bleeding\"\n                                            onClick={this.handleCheckboxChange('infection')}\n                                            checked={this.state.infection}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\"\n                                    onClick={this.previous}\n                                    className=\"cool-button\"\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\"\n                                    onClick={this.validateAndNext}\n                                    className=\"cool-button\"\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default ObservationsForm;\n","import React from 'react';\n\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FormSuccess.css';\n\nexport default function FormSuccess() {\n\n    const redirect = () => {\n        window.location.href = \"/add\";\n    }\n\n    return (\n        <Container>\n            <fieldset style={{textAlign: \"center\"}}>\n                <legend className=\"success-legend\">Success</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Data Saved Sucessfully</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        <Button variant=\"primary\"\n                        onClick={redirect}\n                        className=\"cool-button\"\n                        >\n                            Add another patient\n                        </Button>\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container>\n    )\n}","import React from 'react';\n\nimport BasicDetailsForm from '../BasicDetailsForm/BasicDetailsForm';\nimport TestDetailsForm from '../TestDetailsForm/TestDetailsForm';\nimport HospitalDetailsForm from '../HospitalDetailsForm/HospitalDetailsForm';\nimport ObservationsForm from '../ObservationsForm/ObservationsForm';\n\nimport axios from 'axios';\nimport { uri } from '../../index';\nimport FormSuccess from '../FormSuccess/FormSuccess';\n\nimport { authenticationService } from '../../services';\nimport { authHeader } from '../../helpers';\n\nclass MainForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            formName: \"UserDetails\",\n            pkid: this.generatePkid(32)\n        }\n    }\n\n    generatePkid = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    appendState = (childState, callback) => {\n        if (callback) {\n            this.setState(childState, callback());\n        }\n        else {\n            this.setState(childState);\n        }\n    }\n\n    getValue = (key) => {\n        return this.state[key] === undefined ? \"\" : this.state[key];\n    }\n\n    submitForm = () => {\n        let opdCheck = false\n        let dialysisCheck = false\n        let doctorreqCheck =  false\n        if (this.state.kidneystatus === \"abnormal\") {\n            if (this.state.dialysis === 'true') {\n                dialysisCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n                dialysisCheck = false\n        }\n\n        if (this.state.kidneystatus === \"abnormal\") {\n           \n            if (this.state.doctorreq === 'true') {\n                doctorreqCheck = true\n            }\n        }\n        else if(this.state.kidneystatus === \"good\") {\n            doctorreqCheck = false\n        }\n\n        if (this.state.kidneystatus === 'good' || this.state.doctorreq === 'false') {\n            opdCheck = false\n        }\n        else if (this.state.kidneystatus === 'abnormal' && this.state.doctorreq === 'true') {\n            opdCheck = true\n        }\n        let dataToSend = {\n            pkid: this.state.pkid,\n            adhaar: this.state.adhaar,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            villagesec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            dateoftesting: this.state.dateoftesting ? this.state.dateoftesting : \"\",\n            serumCreatinine: this.state.serumCreatinine ? this.state.serumCreatinine : 0,\n            bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n            uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n            electrolytes_sodium: this.state.electrolytes_sodium ? this.state.electrolytes_sodium : 0,\n            electrolytes_potassium: this.state.electrolytes_potassium ? this.state.electrolytes_potassium : 0,\n            bun: this.state.bun ? this.state.bun : 0,\n            pedalEdema: this.state.pedalEdema ? this.state.pedalEdema : \"\",\n            pedaltype: this.state.pedalEdema === 'N' ? \"\" : this.state.pedaltype,\n            kidneystatus: this.state.kidneystatus !== undefined ? this.state.kidneystatus : \"\",\n            ailments: this.state.kidneystatus === \"good\" ? \"\" : this.state.ailments,\n            dialysis: dialysisCheck,\n            doctorreq: doctorreqCheck,\n            hospitalAdmit: this.state.hospitalAdmit !== undefined ? this.state.hospitalAdmit : \"\",\n            dateOfAdmit: this.state.dateOfAdmit !== undefined ? this.state.dateOfAdmit : \"\",\n            refered: this.state.refered ? this.state.refered : false,\n            referredto: this.state.referred === \"yes\" ? this.state.referredto : \"\",\n            ref_status: this.state.referred === \"yes\" ? this.state.status : \"\",\n            treatmentDone: this.state.referred === \"yes\" ? this.state.treatmentDone : \"\",\n            discharge: this.state.referred === \"no\" ? this.state.discharge : \"\",\n            dischargeStatus: this.state.referred === \"no\" ? this.state.dischargeStatus : \"\",\n            deceased: this.state.referred === \"no\" ? this.state.deceased : false,\n            deathDate: this.state.deceased === \"yes\" ? this.state.deathDate : \"\",\n            placeOfDeath: this.state.deceased === \"yes\" ? this.state.placeOfDeath : \"\",\n            causeOfDeath: this.state.deceased === \"yes\" ? this.state.causeOfDeath : \"\",\n            deworming: this.state.deworming ? this.state.deworming : false,\n            type_data: ['dev', 'dev2'].indexOf(authenticationService.currentUserValue.username) !== -1 ? \"Development\" : \"Production\",\n            opd: opdCheck,\n            weight: this.state.weight ? this.state.weight : 0.0,\n            height: this.state.height ? this.state.height : 0.0,\n            BasicVitals: {\n                Temperature: this.state.temperature,\n                BP: this.state.bloodpressure,\n                HR: this.state.heartrate,\n                Pulse: this.state.pulserate,\n                RespRate: this.state.respiratoryrate\n            },\n            BasicSymptoms: {\n                Fever: this.state.fever,\n                Cold: this.state.cold,\n                Cough: this.state.cough,\n                Fatigue: this.state.fatigue,\n                Aches: this.state.aches,\n                Diarrohea: this.state.diarrohea,\n                Bleeding: this.state.bleeding,\n                Infection: this.state.infection,\n                others: \"\"\n            },\n            report: {},\n            patient_status: \"Closed\",\n            hb: 0.0,\n            wbc_count: 0.0,\n            diffrential_count: {},\n            plat_count: 0.0\n        }\n        axios.post(uri + 'AddPatient/',\n            dataToSend,\n            {\n                headers: authHeader()\n            }).then(response => {\n                console.log(dataToSend);\n                // console.log(\"Sending data\");\n                // console.log(response);\n                if (response.data.pkid === this.state.pkid) {\n                    this.setState({}, this.setState({ formName: \"Success\" }));\n                }\n                else {\n                    alert(\"Failed to save.. Please Try again\");\n                    // this.setState({ formName: \"Success\" });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        switch (this.state.formName) {\n            case \"UserDetails\":\n                return <BasicDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"TestDetails\":\n                return <TestDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"HospitalDetails\":\n                return <HospitalDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Observations\": \n                return <ObservationsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Success\":\n                return <FormSuccess />\n            default:\n                return \"\";\n        }\n    }\n}\n\nexport default MainForm;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Error404() {\n\n    var seconds = 3;\n\n    setInterval(() => {\n        seconds--;\n        document.getElementById('seconds').innerHTML = seconds;\n        if(seconds === 0){\n            clearInterval();\n            window.location.href = \"/\";\n        }\n    }, 1000);\n\n    return (\n        <Container>\n            <fieldset style={{ textAlign: \"center\" }}>\n                <legend className=\"success-legend\">Error 404</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faTimesCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Page Not Found</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        Redirecting to homepage in <span id=\"seconds\">{seconds}</span> seconds...\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container >\n    )\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport './Header.css'\n\nimport { faHome, faChartLine, faUserPlus, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { authenticationService } from '../../services';\n\nimport logo from '../../assets/logo_transparent.png';\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<img alt=\"TracerIND\" src={logo} />\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} color=\"white\" /> &nbsp;Home\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/dashboard\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartLine} color=\"white\" /> &nbsp;Dashboard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/add\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus} color=\"white\" /> &nbsp;New Patient\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/about\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} color=\"white\" /> &nbsp;About\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Button variant=\"transparent\" style={{border: \"none\", color: \"white\"}} onClick={authenticationService.logout}>Logout</Button>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport Header from '../Header/Header';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <React.Fragment>\n            <Header />\n            <Component {...props} />\n        </React.Fragment>\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './Login.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { authenticationService } from '../../services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            btn:\"Login\",\n            username: \"\",\n            password: \"\",\n            loading:false,\n            text:false\n        }\n        if (authenticationService.currentUserValue) {\n            this.props.history.push('/');\n        }\n    }\n\n    login = () => {\n        let { username, password } = this.state;\n        if(!username || !password)\n        {\n          alert(\"Both fields are mandatory\");\n        }\n        else{\n        this.setState({ btn: \"Logging in\", loading: true });\n        authenticationService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => {\n                    console.log(error);\n                    this.setState({ btn: \"Login\", loading: false });\n                }\n            );\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        const {loading}=this.state;\n        const { btn } = this.state ;\n        return (\n            <Container style={{ marginTop: \"10vh\", textAlign: \"center\" }}>\n                <Row className=\"heading\">\n                    <Col>\n                        <h2>Welcome to TracerIND</h2>\n                    </Col>\n                </Row>\n                <fieldset style={{ marginTop: \"10vh\"}}>\n                    <legend>Enter your Login Details</legend>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"username\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Username :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter username\" onChange={this.handleChange('username')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"password\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Password :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter password\" type=\"password\" onChange={this.handleChange('password')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                        <Col>\n                        <Button className=\"cool-button\" size=\"lg\" onClick={this.login} >\n                          {loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MainForm from './components/MainForm/MainForm';\n// import Directory from './components/Directory/Directory';\nimport Error404 from './components/Error404/Error404';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Login from './components/Login/Login';\nimport { history } from './helpers';\nimport { authenticationService } from './services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    authenticationService.currentUser.subscribe(x => this.setState({ currentUser: x }, this.refreshAuth));\n  }\n\n  refreshAuth = () => {\n    let { currentUser } = this.state;\n    if (currentUser) {\n      let msecDifference = new Date().getTime() - new Date(this.state.currentUser.timestamp).getTime();\n      if(msecDifference / (1000 * 60 * 60) >= 4){\n        authenticationService.logout();\n      }\n      else if(msecDifference / (1000 * 60 * 60) > 3) {\n        authenticationService.refresh();\n      }\n    }\n  }\n\n  logout() {\n    authenticationService.logout();\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute exact path=\"/about\" component={About} />\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/add\" component={MainForm} />\n            {/* <PrivateRoute exact path=\"/directory\" component={Directory} /> */}\n            <Route component={Error404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'test', lastName: 'test' },\n        { id: 2, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureFakeBackend } from './helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport const uri = process.env.REACT_APP_SERVER_URI;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}