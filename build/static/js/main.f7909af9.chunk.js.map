{"version":3,"sources":["assets/logo_transparent.png","components/Carousel/CarouselImg/1/1.jpg","components/Carousel/CarouselImg/2/2.jpg","components/Carousel/CarouselImg/3/3.jpg","components/Carousel/CarouselImg/4/4.jpg","components/Carousel/CarouselImg/5/5.jpg","components/About/img/S1.png","components/About/img/S2.png","components/About/img/S3.png","components/About/img/S4.png","components/About/img/S6.png","helpers/auth-header.js","helpers/handle-response.js","helpers/history.js","services/authentication.service.js","components/Header/Header.js","components/Loader/Loader.js","components/Cards/Cards.js","CovidApi/index.js","components/Carousel/Carousel.js","components/Home/Home.js","components/About/About.js","components/Sidebar/Sidebar.js","components/ModalBody/ModalBody.js","components/GenericTable/GenericTable.js","components/Directory/Directory.js","components/HealthStats/HealthStats.js","components/PVTGTracker/PVTGTracker.js","components/PETracker/PETracker.js","components/Dashboard/Dashboard.js","components/PHC/PHC.js","components/VillageSecretariat/VillageSec.js","components/Village/Village.js","components/BasicDetailsForm/BasicDetailsForm.js","components/TestDetailsForm/TestDetailsForm.js","components/HospitalDetailsForm/HospitalDetailsForm.js","components/ObservationsForm/ObservationsForm.js","components/BloodProfile/BloodProfile.js","components/FormSuccess/FormSuccess.js","components/MainForm/MainForm.js","components/Error404/Error404.js","components/PrivateRoute/PrivateRoute.js","components/Login/Login.js","App.js","serviceWorker.js","helpers/fake-backend.js","index.js"],"names":["module","exports","authHeader","currentUser","authenticationService","currentUserValue","token","Authorization","handleResponse","response","status","data","logout","history","createBrowserHistory","currentUserSubject","require","BehaviorSubject","JSON","parse","localStorage","getItem","URI","process","login","username","password","axios","post","then","user","userData","timestamp","Date","setItem","stringify","next","removeItem","refresh","value","newData","asObservable","Header","Navbar","collapseOnSelect","expand","variant","Brand","href","alt","src","logo","Toggle","aria-controls","Collapse","id","Nav","className","Link","icon","faHome","color","faChartLine","faUserPlus","faInfoCircle","Button","onClick","faSignOutAlt","faSignInAlt","Component","OurLoader","Container","Row","style","textAlign","Col","type","height","width","React","Cards","props","useState","barData","setBarData","confirmed","recovered","deaths","active","useEffect","get","dataLabels","dataValues","rows","split","i","length","values","toLowerCase","push","labels","datasets","label","backgroundColor","borderColor","borderWidth","catch","err","console","error","fontSize","target","rel","CardDeck","Card","text","bg","xs","s","md","Body","Title","Text","start","end","duration","separator","options","title","display","legend","position","fetchData","a","Error","TT","total","deceased","Slider","state","Carousel","Item","S1","S2","S3","S4","S5","Home","fetchedData","this","setState","Fragment","sm","About","marginTop","imgCard2","imgCard3","imgCard1","imgCard4","imgCard6","SideBar","views","element","document","getElementById","currentView","classList","contains","remove","add","changeView","ModalBody","patient","patientDetails","firstName","name","lastName","surname","fullName","concat","pedalEdema","isPedalTypeEmpty","pedal_profile","pedaltype","Form","Group","as","Label","Control","placeholder","toUpperCase","disabled","village","age","phone","bloodgroup","GenericTable","handleClose","show","handleShowCustom","indx","patientDetailsModal","handleSearchChange","event","idFragments","obj","key","dataType","dataTypes","keys","indexOf","Number","MIN_VALUE","MAX_VALUE","isNotNullOrUndefinedOrBlank","undefined","clearFilters","min","max","noOfRows","changeNoOfRows","Math","abs","nextPage","currentPageIndex","previousPage","handleShow","bind","log","stateObj","headers","loading","pageData","dataLength","lastPageIndex","floor","slice","filter","rowData","includes","toString","onChange","Table","striped","bordered","hover","map","header","index","colSpan","inputType","row","indexRow","indexCol","Modal","onHide","closeButton","Footer","justifyContent","Directory","uri","getVillageNameFromId","villageList","village_id","searchField","patientList","responseVillage","filteredData","type_data","structuredData","newPatient","HealthStats","patientCount","responseStats","responseAll","BloodUrea","Electrolytes_Potassium","Electrolytes_Sodium","SerumCreatinine","UricAcid","bloodUreaData","hoverBackgroundColor","Severe","potassiumData","sodiumData","uricAcidData","serumCreatinineData","MI","right","PVTGTracker","pvtgData","PVTG","ST","NST","PETracker","peData","PE","peTypeData","Single","Bilateral","Dashboard","nextView","dashView","pageWrapId","outerContainerId","PHC","phcList","phcValue","handleChange","fetchVillageSec","phc","PHC_id","VillageSec","villageSecList","villageSecValue","fetchVillages","villageSec","villagesec_id","Village","villageValue","updateValue","BasicDetailsForm","componentDidMount","adhaarNumber","getValue","adhaarFirst","substring","adhaarSecond","adhaarThird","input","fetchOrUpdatePHCList","mandal","village_sec","phcLoading","mandal_id","fetchOrUpdateVillageSecList","villageSecLoading","fetchOrUpdateVillageList","villageLoading","validate","validIds","invalidIds","adhaarIds","filled","Boolean","relation","gaurdian_name","gender","maritalstatus","border","window","location","focus","saveData","changeData","formName","handleCheckboxChange","checked","dataToSave","adhaar","address","children","deworming","smoking","drinking","Promise","resolve","loadNextForm","restrictDigits","strValue","changeAdhaarFocus","updateState","valueObj","styles","center","paddingLeft","left","Check","controlId","TestDetailsForm","previous","validateOneDigitAfterDecimalSerumCreatine","validateOneDigitAfterDecimalBloodUrea","validateOneDigitAfterDecimalUricAcid","validateOneDigitAfterDecimalElectrolytesSodium","validateOneDigitAfterDecimalElectrolytesPotassium","validateOneDigitAfterDecimalBun","validateAndNext","validateAndSubmit","btn","submit","serumCreatinineAfterReRendering","serumCreatinine","bloodUreaAfterReRendering","bloodUrea","uricAcidfterReRendering","uricAcid","electrolytesSodiumReRendering","electrolytes_sodium","electrolytesPotassiumReRendering","electrolytes_potassium","bunReRendering","bun","dateoftesting","kidneystatus","ailments","dialysis","doctorreq","opd","treatmentDone","paddingRight","role","HospitalDetailsForm","handleReferredTo","referredToSelected","referredto","hospitalAdmit","dateOfAdmit","refered","discharge","discharged","dischargeStatus","deathDate","placeOfDeath","causeOfDeath","recovery","otherReferedHospitalName","class","ObservationsForm","weight","temperature","bloodpressure","heartrate","pulserate","respiratoryrate","bpm","fever","aches","cold","cough","fatigue","diarrohea","bleeding","infection","otherSymptoms","defaultChecked","BloodProfile","dateOfBloodTest","wbc","pcv","rbc","mcv","mchc","rdw","monocytes","lymphocytes","eosinophils","neutrophils","hbClassification","haemoglobin","platelet","mch","Eosinophils","FormSuccess","faCheckCircle","size","marginBottom","CryptoJS","MainForm","generatePkid","result","characters","charactersLength","charAt","random","appendState","childState","callback","getEncryptedAdhaar","decrypted","AES","encrypt","submitForm","opdCheck","dialysisCheck","doctorreqCheck","dataToSend","pkid","villagesec","KidneyProfile","referred","ref_status","DetailsDeath","BasicVitals","Temperature","BP","HR","Pulse","RespRate","BasicSymptoms","Fever","Cold","Cough","Fatigue","Aches","Diarrohea","Bleeding","Infection","others","report","patient_status","habits","AnemiaProfile","wbc_count","hb","diffrential_count","plat_count","alert","Error404","seconds","setInterval","innerHTML","clearInterval","faTimesCircle","PrivateRoute","component","rest","render","to","pathname","from","Login","margin","App","refreshAuth","msecDifference","getTime","subscribe","x","exact","path","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","users","realFetch","fetch","url","opts","isLoggedIn","reject","setTimeout","endsWith","method","params","body","find","ok","message","configureFakeBackend","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f7909af9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_transparent.e386adfe.png\";","module.exports = __webpack_public_path__ + \"static/media/1.0e8e7eee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.cd72baca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.92c3f481.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.a3659dab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.5adf671c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/S1.fa95cb07.png\";","module.exports = __webpack_public_path__ + \"static/media/S2.36374932.png\";","module.exports = __webpack_public_path__ + \"static/media/S3.52172d80.png\";","module.exports = __webpack_public_path__ + \"static/media/S4.534dbb4b.png\";","module.exports = __webpack_public_path__ + \"static/media/S6.0b25fff5.png\";","import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `JWT ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","import { authenticationService } from '../services';\n\nexport function handleResponse(response) {\n    // return response.text().then(text => {\n    //     const data = text && JSON.parse(text);\n    //     if (!response.ok) {\n    //         if ([400, 401, 403].indexOf(response.status) !== -1) {\n    //             // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n    //             authenticationService.logout();\n    //             window.location.reload();\n    //         }\n\n    //         const error = (data && data.message) || response.statusText;\n    //         return Promise.reject(error);\n    //     }\n\n    //     return data;\n    // });\n    // console.log(response);\n    if(response.status === 200){\n        return response.data;\n    }\n    else {\n        authenticationService.logout();\n        return false;\n    }\n    // if([400, 401, 403].indexOf(response.status) !== -1){\n    //     authenticationService.logout();\n    //     window.location.reload();\n    //     return false;\n    // }\n    // return response.data;\n}","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { BehaviorSubject } from 'rxjs';\n\nimport { handleResponse } from '../helpers';\n\nimport axios from 'axios';\n\nconst CryptoJS = require('crypto-js');\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nconst URI = process.env.REACT_APP_SERVER_URI;\n\nexport const authenticationService = {\n    login,\n    logout,\n    refresh,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue () { return currentUserSubject.value }\n};\n\n// function getEncryptedPassword (decrypted) {\n//     let encryptedText = CryptoJS.AES.encrypt(\n//         decrypted,\n//         process.env.REACT_APP_PASSWORD_CIPHER_KEY,\n//     ).toString();\n//     // console.log(decrypted);\n//     // console.log(encryptedText);\n//     return encryptedText;\n// };\n\nfunction login(username, password) {\n\n    return axios.post(URI + 'token_jwt_get/', { username, password })\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            if(user){\n                let userData = {\n                    username,\n                    token: user.token,\n                    timestamp: new Date()\n                }\n                localStorage.setItem('currentUser', JSON.stringify(userData));\n                currentUserSubject.next(userData);\n\n                return user;\n            }\n        });\n}\n\nfunction refresh() {\n    if(currentUserSubject.value){\n        axios.post(URI + 'token_jwt_refresh/', { token: currentUserSubject.value.token })\n            .then(handleResponse)\n            .then(data => {\n                if(data) {\n                    let newData = { ...currentUserSubject.value };\n                    newData.token = data.token;\n                    newData.timestamp = new Date();\n\n                    localStorage.setItem('currentUser', JSON.stringify(newData));\n                    currentUserSubject.next(newData);\n                }\n            });\n    }\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import React, { Component } from 'react'\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport './Header.css'\n\nimport { faHome, faChartLine, faUserPlus, faInfoCircle, faSignOutAlt, faSignInAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { authenticationService } from '../../services';\n\nimport logo from '../../assets/logo_transparent.png';\nexport default class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"/\">\n\t\t\t\t\t<img alt=\"TracerIND\" src={logo} />\n\t\t\t\t</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"/\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHome} color=\"white\" /> &nbsp;Home\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/dashboard\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faChartLine} color=\"white\" /> &nbsp;Dashboard\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/add\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUserPlus} color=\"white\" /> &nbsp;New Patient\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"/about\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faInfoCircle} color=\"white\" /> &nbsp;About\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\t\tif (authenticationService.currentUserValue) {\n\t\t\t\t\t\t\t\t\treturn <Button className=\"nav-button\" variant=\"transparent\" onClick={authenticationService.logout}>\n\t\t\t\t\t\t\t\t\t\tLogout &nbsp;\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSignOutAlt} color=\"white\" />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn <Nav.Link href=\"/login\">\n\t\t\t\t\t\t\t\t\t\tLogin &nbsp; <FontAwesomeIcon icon={faSignInAlt} color=\"white\" />\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t}\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t)\n\t}\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner'\nimport {Container, Row, Col} from 'react-bootstrap';\n\nexport default class OurLoader extends React.Component {\n    render() {\n        return (\n            <Container>\n                <Row style={{textAlign: \"center\"}}>\n                    <Col>\n                        <Loader\n                            type=\"Puff\"\n                            color=\"#0a5767\"\n                            height={200}\n                            width={200}\n                            // timeout={3000} //3 secs\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport './Cards.css'\nimport { Card, CardDeck, Container, Row, Col } from 'react-bootstrap';\nimport {Bar} from 'react-chartjs-2';\nimport CountUp from 'react-countup';\nimport OurLoader from '../Loader/Loader';\nimport axios from 'axios';\n\nconst Cards = (props) => {\n  let [barData, setBarData] = React.useState(null);\n  let { confirmed, recovered, deaths, active } = props.data; \n\n  React.useEffect(() => {\n    if(!barData){\n      axios.get(\"https://api.covid19india.org/csv/latest/state_wise.csv\")\n        .then(response => {\n          let dataLabels = [], dataValues = [];\n          let rows = response.data.split('\\n');\n          // console.log(rows);\n          //First row is headers i.e. index 0\n          for (let i = 1; i < rows.length; i++) {\n            let values = rows[i].split(',');\n            if (values[0].toLowerCase() !== 'total' && values[0].toLowerCase() !== 'state unassigned' && values.length >= 11) {\n              dataLabels.push(values[0]);\n              dataValues.push(values[1]);\n            }\n          }\n          // console.log(dataLabels);\n          // console.log(dataValues);\n          setBarData({\n            labels: dataLabels,\n            datasets: [\n              {\n                label: 'Confirmed cases',\n                backgroundColor: '#0a5767',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: dataValues\n              }\n            ]\n          })\n        }).catch(err => {\n          console.error(`Error while getting state data csv : ${err}`);\n        });\n    }\n  });\n\n  if (!confirmed) {\n    return <OurLoader />\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>\n        Coronavirus stats of India\n        <h6 style={{fontSize: 15}}>\n          (<a href=\"https://devcula.github.io/corona-monitor/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            See Global Stats\n          </a>)\n        </h6>\n      </h2>\n      <CardDeck>\n        <Card\n          text=\"D13C2B\"\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n          <Card.Body className=\"confirmed\">\n            <Card.Title> Confirmed </Card.Title>\n            <Card.Text><CountUp start={0} end={confirmed} duration={1} separator=\",\" /> </Card.Text>\n          </Card.Body>\n        </Card>\n        <Card\n          bg='light'\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n          <Card.Body className=\"active\">\n            <Card.Title> Active </Card.Title>\n            <Card.Text> <CountUp start={0} end={active} duration={1} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          bg='light'\n          xs={12}\n          s={6}\n          md={3}\n          className=\"mb-2\"\n        >\n          <Card.Body className=\"recovered\">\n            <Card.Title> Recovered </Card.Title>\n            <Card.Text> <CountUp start={0} end={recovered} duration={1} separator=\",\" /></Card.Text>\n\n          </Card.Body>\n        </Card>\n        <Card\n          className=\"mb-2\"\n          xs={12}\n          s={6}\n          md={3}\n        >\n          <Card.Body className=\"deaths\">\n            <Card.Title> Deaths </Card.Title>\n            <Card.Text> <CountUp start={0} end={deaths} duration={1} separator=\",\" /></Card.Text>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n      <br/>\n      {\n        !barData && <OurLoader />\n      }\n      {\n        barData && <Container id=\"stateWiseData\">\n          <Row>\n            <Col>\n              <Bar\n                data={barData}\n                options={{\n                  title: {\n                    display: true,\n                    text: 'State wise distribution',\n                    fontSize: 20\n                  },\n                  legend: {\n                    display: true,\n                    position: 'right'\n                  }\n                }}\n              />\n            </Col>\n          </Row>\n        </Container>\n      }\n    </div>\n  )\n}\n\nexport default Cards;\n","import axios from 'axios';\n\n// const url = \"https://api.covidindiatracker.com/state_data.json\"\nconst url = \"https://api.covid19india.org/v4/min/data.min.json\";\n\nexport const fetchData = async() =>{\n    try{\n        const response = await axios.get(url);\n        // console.log(data);\n        if(!response || response.status !== 200){\n          throw new Error(`Covid api failed with status code ${response.status}`);\n        }\n        const {data} = response;\n        let confirmed = 0, deaths = 0, recovered = 0, active = 0;\n        if(data) {\n          // let stateKeys = Object.keys(data);\n          // for(let key of stateKeys){\n          //   confirmed += data[key].total && data[key].total.confirmed;\n          //   deaths += data[key].total && data[key].total.deceased;\n          //   recovered += data[key].total && data[key].total.recovered;\n          // }\n          //TT object in response contains overall stats. Above code can be used as fallback if needed\n          confirmed = data.TT.total.confirmed;\n          deaths = data.TT.total.deceased;\n          recovered = data.TT.total.recovered;\n          active = confirmed - (deaths + recovered);\n        }\n        // console.log(confirmed);\n        // console.log(deaths);\n        // console.log(recovered);\n        // console.log(active);\n        return {\n          confirmed,\n          deaths,\n          recovered,\n          active\n        };\n    }\n    catch(error){\n      console.error(`Error occured in CovidApi ${error}`);\n      return {};\n    }\n}\n","import React, { Component } from 'react';\nimport { Carousel } from 'react-bootstrap';\n\n// import S from './CarouselImg/event.jpg';\nimport S1 from './CarouselImg/1/1.jpg';\nimport S2 from './CarouselImg/2/2.jpg';\nimport S3 from './CarouselImg/3/3.jpg';\nimport S4 from './CarouselImg/4/4.jpg';\nimport S5 from './CarouselImg/5/5.jpg';\n\n\nimport './Carousel.css';\n\nexport default class Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundColor: \"#0a5767\"}}>\n        <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"cImage d-block w-100 h-50\"\n            src={S1}\n            alt=\"First slide\"\n          />\n        </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              src={S2}\n              alt=\"Second slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S3}\n              alt=\"Third slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S4}\n              alt=\"Fourth slide\"\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <img\n              className=\"cImage d-block w-100 h-50\"\n              width={200}\n              src={S5}\n              alt=\"Fifth slide\"\n            />\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './Home.css';\nimport Cards from '../Cards/Cards';\nimport { fetchData } from '../../CovidApi';\n// import Infotrack from '../Infotrack/Infotrack';\n// import Bucket from '../Bucket/Bucket';\nimport Slider from '../Carousel/Carousel';\n// import Header from '../Header/Header';\n// import Sidenav from '../Sidenav/Sidenav';\nexport default class Home extends Component {\n  state = {\n    data: {},\n  }\n  //Comment\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData })\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      <React.Fragment>\n        {/* <Header /> */}\n        <Container >\n          {/* <Infotrack /> */}\n          <br />\n          <Slider />\n          <Row className=\"show-grid text-center new4\">\n            <Col sm={12}>\n              <Cards data={data} />\n            </Col>\n          </Row>\n          {/* <Sidenav /> */}\n          {/* <Row>\n          <Col>\n            <Bucket />\n          </Col>\n          <Col>\n          </Col>\n        </Row> */}\n        </Container>\n      </React.Fragment>\n    )\n  }\n}\n","\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'react-bootstrap';\n\nimport imgCard1 from \"./img/S1.png\";\nimport imgCard2 from \"./img/S2.png\";\nimport imgCard3 from \"./img/S3.png\";\nimport imgCard4 from \"./img/S4.png\";\n// import imgCard5 from \"./img/S5.png\";\nimport imgCard6 from \"./img/S6.png\";\n// import imgCard7 from \"./img/S7.png\";\n// import imgCard8 from \"./img/S8.jpeg\";\nimport './About.css';\n\n\n\nexport default class About extends Component {\n  render() {\n    return (\n      <Container>\n        <h1 style={{ marginTop: \"1rem\" }} className=\"heading\"><span>meet </span>Our Team</h1>\n        <div className=\"profiles\">\n          <Row>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard2} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Abhishek Prasad </h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard3} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shlok Parida</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard1} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Prakruti Chandak</h3>\n                <h5>Team lead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            {/* <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard7} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Shubhankar</h3>\n                <h5>Android Developer</h5>\n              </div>\n            </Col> */}\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard4} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Hrituja Khatavkar</h3>\n                <h5>Frontend developer</h5>\n              </div>\n            </Col>\n            <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard6} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">  Gaurav Roy </h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col>\n            {/* <Col sm={6} md={4}>\n              <div className=\"profile\">\n                <img alt=\"User\" src={imgCard8} className=\"profile-img\"></img>\n                <h3 className=\"user-name\">Palak Rai</h3>\n                <h5>Frontend Developer</h5>\n              </div>\n            </Col> */}\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n","import React from \"react\";\nimport { push as Menu } from \"react-burger-menu\";\nimport './Sidebar.css'\n\n\nexport default function SideBar(props) {\n\n  const views = ['PatientStatus', 'HealthStats', 'PVTGTracker', 'PedalEdemaTracker'];\n\n  React.useEffect(() => {\n    for(let i = 0; i < views.length; i++){\n      let element = document.getElementById(views[i]);\n      if(views[i] !== props.currentView){\n        if (element.classList.contains('sidebar-active')){\n          element.classList.remove('sidebar-active');\n        }\n      }\n      else{\n        element.classList.add('sidebar-active');\n      }\n    }\n  })\n\n  return (\n    // Pass on our props\n    <Menu {...props}>\n      <button className=\"menu-item\" id=\"PatientStatus\" onClick={() => props.changeView('PatientStatus')}>\n        Patient Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"HealthStats\" onClick={() => props.changeView('HealthStats')}>\n        Health Stats\n      </button>\n\n      <button className=\"menu-item\" id=\"PVTGTracker\" onClick={() => props.changeView('PVTGTracker')}>\n        PVTG Tracker\n      </button>\n\n      <button className=\"menu-item\" id=\"PedalEdemaTracker\" onClick={() => props.changeView('PedalEdemaTracker')}>\n        Pedal Edema Tracker\n      </button>\n    </Menu>\n  );\n};\n","import React from 'react';\n\nimport { Form, Container, Row, Col } from 'react-bootstrap';\n\n\nclass ModalBody extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let patientDetails = this.props\n        let patient = patientDetails.patientDetails\n        let firstName = patient.name;\n        let space = \" \";\n        let lastName = patient.surname;\n        let fullName = firstName.concat(space, lastName);\n        let pedalEdema = '';\n        let isPedalTypeEmpty = true;\n        if (patient.pedalEdema === 'N') {\n            pedalEdema = 'No'\n        }\n        else if (patient.pedalEdema === 'Y') {\n            pedalEdema = 'Yes'\n        }\n        if (pedalEdema === 'Yes') {\n            // console.log(\"here\")\n            if (!(patient.pedal_profile.pedaltype === '')) {\n                // console.log(\"here\")\n                isPedalTypeEmpty = false\n            }\n        }\n        // let adhaar = patient.adhaar.slice(0, 4) + \"-\" + patient.adhaar.slice(4, 8) + \"-\" + patient.adhaar.slice(8)\n        // console.log(adhaar)\n        // console.log(patient)\n        return (\n            <Container>\n                <Form>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Name: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"name\" value={fullName.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Adhaar: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"adhar\" value={adhaar} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row> */}\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Village: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"vilage\" value={patient.village} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Age: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"age\" value={patient.age} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Phone: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"phone\" value={patient.phone} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Blood Group: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"bloodGroup\" value={patient.bloodgroup.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Deceased: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"deceased\" value={patient.deceased.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>PVTG: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pvtg\" value={patient.PVTG.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row> */}\n                    <Row>\n                        <Col >\n                            <Form.Group as={Row}>\n                                <Col sm={3}>\n                                    <Form.Label>Pedal Edema: </Form.Label>\n                                </Col>\n                                <Col sm={6}>\n                                    <Form.Control placeholder=\"\" id=\"pedal\" value={pedalEdema.toUpperCase()} disabled\n                                    />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    {(() => {\n                        if (isPedalTypeEmpty) {\n                            return (\n                                <React.Fragment></React.Fragment>\n                            )\n                        }\n                        else {\n                            return (\n                                <Row>\n                                    <Col >\n                                        <Form.Group as={Row}>\n                                            <Col sm={3}>\n                                                <Form.Label>Pedal Type: </Form.Label>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Form.Control placeholder=\"\" id=\"pedalType\" value={patient.pedal_profile.pedaltype.toUpperCase()} disabled\n                                                />\n                                            </Col>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                            )\n                        }\n\n                    })()}\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default ModalBody;","import React from 'react';\n\nimport { Table, Button, Row, Col, Modal } from 'react-bootstrap';\nimport ModalBody from '../ModalBody/ModalBody';\nimport './GenericTable.css';\n\n//Received props\n//Json data -- data\n//List of headings -- headers\n//List of Json keys to be displayed under each heading -- keys\n//List of data types for each column for making filters -- dataTypes\n//All list should be of equal lengths and in same sequence. Otherwise table will show unpredictable behaviour\n//loading -- loading\n\nclass GenericTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleShow = this.handleShow.bind(this);\n        this.handleShowCustom = this.handleShowCustom.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.state = {\n            noOfRows: \"\",\n            currentPageIndex: 0,\n            show: false,\n            patientDetailsModal: {}\n        }\n    }\n\n\n    handleClose = () => {\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        console.log(\"handleShow called\")\n\n    }\n\n    handleShowCustom = (value, indx) => {\n        this.setState({ show: true, patientDetailsModal: value });\n    }\n\n    componentDidMount() {\n        let stateObj = {};\n        let { dataTypes, keys } = this.props;\n        for (let i = 0; i < dataTypes.length; i++) {\n            if (dataTypes[i] === 'Number') {\n                stateObj['KEY_' + keys[i]] = {                  //Appending KEY_ to prevent data overwrite if any props key matches our internal state key\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n            }\n            else if (dataTypes[i] === 'String') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n            else if (dataTypes[i] === 'Boolean') {\n                stateObj['KEY_' + keys[i]] = \"\";\n            }\n        }\n        this.setState(stateObj);\n    }\n\n    handleSearchChange = event => {\n        let idFragments = event.target.id.split('_');\n        let obj = {};\n        let key = idFragments[1];\n        let dataType = this.props.dataTypes[this.props.keys.indexOf(key)];\n\n        if (dataType === 'String') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        else if (dataType === 'Number') {\n            obj['KEY_' + key] = this.state['KEY_' + key];\n            if (event.target.value === \"\") {\n                obj['KEY_' + key][idFragments[2]] = idFragments[2] === 'min' ? Number.MIN_VALUE : Number.MAX_VALUE;\n            }\n            else {\n                obj['KEY_' + key][idFragments[2]] = Number(event.target.value);\n            }\n        }\n        else if (dataType === 'Boolean') {\n            obj['KEY_' + key] = event.target.value;\n        }\n        this.setState(obj);\n    }\n\n    isNotNullOrUndefinedOrBlank = (value) => {\n        return (value !== null && value !== undefined && value !== \"\");\n    }\n\n    clearFilters = () => {\n        let { dataTypes, keys } = this.props;\n        let obj = {};\n        for (let i = 0; i < keys.length; i++) {\n            if (dataTypes[i] === \"String\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n            else if (dataTypes[i] === \"Number\") {\n                obj['KEY_' + keys[i]] = {\n                    min: Number.MIN_VALUE,\n                    max: Number.MAX_VALUE\n                }\n                document.getElementById('KEY_' + keys[i] + '_min').value = \"\";\n                document.getElementById('KEY_' + keys[i] + '_max').value = \"\";\n            }\n            else if (dataTypes[i] === \"Boolean\") {\n                obj['KEY_' + keys[i]] = \"\";\n                document.getElementById('KEY_' + keys[i]).value = \"\";\n            }\n        }\n        obj.noOfRows = \"\";\n        this.setState(obj);\n    }\n\n    changeNoOfRows = event => {\n        if (event.target.value !== \"\") {\n            event.target.value = Math.abs(event.target.value);\n        }\n        this.setState({ noOfRows: event.target.value });\n    }\n\n    nextPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex + 1 });\n    }\n\n    previousPage = () => {\n        let { currentPageIndex } = this.state;\n        this.setState({ currentPageIndex: currentPageIndex - 1 });\n    }\n\n    render() {\n        let { headers, data, loading, keys, dataTypes } = this.props;\n        let pageData = [];\n        let { noOfRows, currentPageIndex, patientDetailsModal } = this.state;\n        let dataLength = 0;\n        let lastPageIndex = 0;\n\n        if (!loading) {\n\n            dataLength = data.length;\n            if (noOfRows !== \"\") {\n                if (dataLength % noOfRows === 0) {\n                    lastPageIndex = Math.floor(dataLength / noOfRows) - 1;\n                }\n                else {\n                    lastPageIndex = Math.floor(dataLength / noOfRows);\n                }\n            }\n\n            if (noOfRows === \"\") {\n                pageData = data;\n            }\n            else if (dataLength >= (currentPageIndex + 1) * noOfRows) {\n                pageData = data.slice(currentPageIndex * noOfRows, (currentPageIndex + 1) * noOfRows);\n            }\n            else {\n                pageData = data.slice(currentPageIndex * noOfRows, dataLength);\n            }\n\n            pageData = pageData.filter(rowData => {\n                for (let i = 0; i < keys.length; i++) {\n                    if (dataTypes[i] === \"String\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && !rowData[keys[i]].toLowerCase().includes(this.state['KEY_' + keys[i]].toLowerCase())) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Number\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]]) && (rowData[keys[i]] < this.state['KEY_' + keys[i]].min || rowData[keys[i]] > this.state['KEY_' + keys[i]].max)) {\n                            return false;\n                        }\n                    }\n                    else if (dataTypes[i] === \"Boolean\") {\n                        if (this.isNotNullOrUndefinedOrBlank(rowData[keys[i]].toString()) && this.isNotNullOrUndefinedOrBlank(this.state['KEY_' + keys[i]]) && (rowData[keys[i]].toString() !== this.state['KEY_' + keys[i]].toString())) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n        }\n        //  console.log(pageData)\n\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col sm={3} xs={4} >\n                        <Button variant=\"danger\" onClick={this.clearFilters} className=\"filter-button\">\n                            Clear filters\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"previousButton\" onClick={this.previousPage} disabled={currentPageIndex === 0} >\n                            Previous Page\n                        </Button>\n                    </Col>\n                    <Col sm={3} xs={4}>\n                        <Button id=\"nextButton\" onClick={this.nextPage} disabled={currentPageIndex >= lastPageIndex}>\n                            Next Page\n                        </Button>\n                    </Col>\n\n                    <Col sm={3}>\n                        <input type=\"number\" min=\"1\" value={this.state.noOfRows} placeholder=\"No. of Rows\" onChange={this.changeNoOfRows} className=\"row-input-field\" />\n                    </Col>\n                </Row>\n                <Table style={{ textAlign: \"center\" }} striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            {\n                                headers.map((header, index) => {\n                                    return (\n                                        <td key={index}>{header}</td>\n                                    )\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            (() => {\n                                if (loading) {\n                                    return (\n                                        <tr>\n                                            <td colSpan={headers.length}>\n                                                Loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <React.Fragment>\n                                            <tr key=\"searchFields\">\n                                                {\n                                                    keys.map((key, i) => {\n                                                        let inputType = \"text\";\n                                                        if (dataTypes[i] === 'Number') {\n                                                            inputType = \"number\";\n                                                        }\n                                                        if (dataTypes[i] === 'Boolean') {\n                                                            inputType = \"booleanSelect\";\n                                                        }\n                                                        if (inputType === \"text\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key}\n                                                                        placeholder=\"Filter\"\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"number\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_min'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Min\"\n                                                                        className=\"form-control input-min\"\n                                                                    />\n                                                                    <input\n                                                                        style={{ width: \"5rem\", display: \"inline\" }}\n                                                                        type={inputType}\n                                                                        id={'KEY_' + key + '_max'}\n                                                                        onChange={this.handleSearchChange}\n                                                                        placeholder=\"Max\"\n                                                                        className=\"form-control\"\n                                                                    />\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else if (inputType === \"booleanSelect\") {\n                                                            return (\n                                                                <td key={i}>\n                                                                    <select\n                                                                        value={this.state['KEY_' + key]}\n                                                                        id={'KEY_' + key}\n                                                                        onChange={this.handleSearchChange}\n                                                                        className=\"form-control\"\n                                                                    >\n                                                                        <option value=\"\">Select</option>\n                                                                        <option value=\"Yes\">Yes</option>\n                                                                        <option value=\"No\">No</option>\n                                                                    </select>\n                                                                </td>\n                                                            )\n                                                        }\n                                                        else {\n                                                            return (\n                                                                <td></td>\n                                                            )\n                                                        }\n                                                    })\n                                                }\n                                            </tr>\n                                            {\n                                                (() => {\n                                                    if (pageData.length === 0) {\n                                                        return (\n                                                            <tr>\n                                                                <td colSpan={headers.length}>\n                                                                    Nothing found to display.\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    }\n                                                    else {\n                                                        return (\n                                                            pageData.map((row, indexRow) => {\n                                                                return (\n                                                                    <tr onClick={() => this.handleShowCustom(row, indexRow)} key={indexRow}>\n                                                                        {\n                                                                            keys.map((key, indexCol) => {\n                                                                                return (\n                                                                                    <td key={indexCol}>\n                                                                                        {row[key] ? row[key].toString() : \"\"}\n                                                                                    </td>\n                                                                                )\n                                                                            })\n                                                                        }\n                                                                    </tr>\n                                                                )\n                                                            })\n                                                        )\n                                                    }\n                                                })()\n                                            }\n                                        </React.Fragment>\n                                    )\n                                }\n                            })()\n                        }\n                    </tbody>\n                </Table>\n                <Modal show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Patient Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <ModalBody patientDetails={patientDetailsModal} />\n                    </Modal.Body>\n                    <Modal.Footer style={{justifyContent: \"center\"}}>\n                        <Button variant=\"danger\" onClick={this.handleClose}>\n                            Close\n                        </Button>\n                        {/* <Button variant=\"primary\" onClick={this.handleClose}>\n                            Save Changes\n                            </Button> */}\n                    </Modal.Footer>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default GenericTable;\n","import React from 'react';\n\nimport { Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport './Directory.css';\nimport GenericTable from '../GenericTable/GenericTable';\n\nimport { authHeader } from '../../helpers';\n\nclass Directory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchField: \"\",\n            patientList: [],\n            villageList: [],\n            loading: true\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetAllPatient/',\n            {\n                headers: authHeader()\n        }).then(response => {\n                    // console.log(response);\n                    axios.get(this.uri + 'GetAllVillage/', \n                    {\n                        headers: authHeader()\n                    }).then(responseVillage => {\n                        // this.setState({ villageList: responseVillage.data });\n                        // this.setState({ loading: false });\n                        //Hiding Development data\n                        var filteredData = response.data;\n                        if(process.env.REACT_APP_SHOW_DEV_DATA === 'OFF'){\n                            filteredData = response.data.filter(patient => {\n                                if (patient.type_data && patient.type_data.toLowerCase() === 'production') {\n                                    return true;\n                                }\n                                return false;\n                            })\n                        }                        \n                        this.setState(\n                            {\n                                patientList: filteredData,\n                                villageList: responseVillage.data,\n                                loading: false\n                            }\n                        )\n                    })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                    // this.setState({ patientList: response.data });\n                })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getVillageNameFromId = (id) => {\n        // console.log(\"Id received \" + id);\n        let { villageList } = this.state;\n        if (villageList.length > 0) {\n            for (let i = 0; i < villageList.length; i++) {\n                if (villageList[i].village_id === id) {\n                    return villageList[i].name;\n                }\n            }\n        }\n    }\n\n    render() {\n        const headers = ['Name', 'Village', 'Kidney Status', 'Deceased'];\n        const keys = ['fullName', 'village', 'kidneystatus', 'deceased'];\n        const dataTypes = ['String', 'String', 'String', 'Boolean'];\n        let structuredData = this.state.patientList.map(patient => {\n            let newPatient = { ...patient };\n            newPatient.village = this.getVillageNameFromId(patient.village);\n            newPatient[\"fullName\"] = newPatient.name + ' ' + newPatient.surname;\n            newPatient.deceased = newPatient.deceased ? \"Yes\" : \"No\";\n            return newPatient;\n        });\n\n        return (\n            <Container style={{ marginTop: \"2rem\" }}>\n                <GenericTable data={structuredData} loading={this.state.loading} headers={headers} keys={keys} dataTypes={dataTypes} />\n            </Container>\n        )\n    }\n}\n\nexport default Directory;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport OurLoader from '../Loader/Loader';\nimport { Pie } from 'react-chartjs-2';\n\nimport { authHeader } from '../../helpers';\n\nimport './HealthStats.css';\n\nclass HealthStats extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {},\n            patientCount: null\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetStats/',\n            {\n                headers: authHeader()\n            }\n        ).then(responseStats => {\n            // console.log(responseStats);\n            axios.get(this.uri + 'GetAllPatient/',\n                {\n                    headers: authHeader()\n                }).then(responseAll => {\n                    this.setState({ data: responseStats.data, patientCount: responseAll.data.length }, () => this.setState({ loading: false }));\n                })\n                .catch(err => {\n                    throw err;\n                })\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { BloodUrea, Electrolytes_Potassium, Electrolytes_Sodium, SerumCreatinine, UricAcid } = this.state.data;\n            // console.log(this.state);\n            const bloodUreaData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Blood Urea',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - BloodUrea.Severe, BloodUrea.Severe]\n                    }\n                ]\n            }\n            const potassiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Potassium(K)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Potassium.Severe, Electrolytes_Potassium.Severe]\n                    }\n                ]\n            }\n            const sodiumData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Sodium(Na)',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - Electrolytes_Sodium.Severe, Electrolytes_Sodium.Severe]\n                    }\n                ]\n            }\n            const uricAcidData = {\n                labels: ['Normal', 'Critical'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800'\n                        ],\n                        data: [this.state.patientCount - UricAcid.Severe, UricAcid.Severe]\n                    }\n                ]\n            }\n            const serumCreatinineData = {\n                labels: ['Normal', 'Critical', 'Mild'],\n                datasets: [\n                    {\n                        label: 'Uric Acid',\n                        backgroundColor: [\n                            '#2FDE00',\n                            '#B21F00',\n                            '#00A6B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#175000',\n                            '#501800',\n                            '#003350'\n                        ],\n                        data: [this.state.patientCount - (SerumCreatinine.Severe + SerumCreatinine.MI), SerumCreatinine.Severe, SerumCreatinine.MI]\n                    }\n                ]\n            }\n            return (\n                <Container style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Blood Urea</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={bloodUreaData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Blood Urea',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Potassium(K)</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={potassiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Potassium(K)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Sodium(Na)  </h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={sodiumData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Sodium(Na)',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Uric Acid</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={uricAcidData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Uric Acid',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\" }} className=\"metric singleMetricInOneRow\">\n                        <Col>\n                            <Row>\n                                <Col style={{ right: \"3rem\" }}>\n                                    <h3>Serum Creatinine</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={serumCreatinineData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Serum Creatinine',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default HealthStats;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport { authHeader } from '../../helpers';\nimport OurLoader from '../Loader/Loader';\n\nclass PVTGTracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPVTG/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({ loading: false }))\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            let { PVTG, ST, NST } = this.state.data;\n            // console.log(PVTG, ST, NST);\n            const pvtgData = {\n                labels: ['PVTG', 'ST', 'Non ST'],\n                datasets: [\n                    {\n                        label: 'Caste distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#6800B4',\n                            '#2FDE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#35014F',\n                            '#175000'\n                        ],\n                        data: [PVTG, ST, NST]\n                    }\n                ]\n            }\n            return (\n                <Container className=\"metric\" style={{ textAlign: \"center\" }}>\n                    <Row>\n                        <Col style={{right: \"3rem\"}}>\n                            <h3>PVTG Distribution</h3>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={pvtgData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Caste Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PVTGTracker;","import React from 'react';\nimport axios from 'axios';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Pie } from 'react-chartjs-2';\nimport OurLoader from '../Loader/Loader';\n\nimport { authHeader } from '../../helpers';\n\nclass PETracker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: {}\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount() {\n        axios.get(this.uri + 'GetPE/',\n            {\n                headers: authHeader()\n            }\n        ).then(response => {\n            // console.log(response);\n            this.setState({ data: response.data }, () => this.setState({loading: false}));\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <OurLoader />\n        }\n        else {\n            const peData = {\n                labels: ['Yes', 'No'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema Distribution',\n                        backgroundColor: [\n                            '#B21F00',\n                            '#6800B4'\n                        ],\n                        hoverBackgroundColor: [\n                            '#501800',\n                            '#35014F'\n                        ],\n                        data: [this.state.data.PE, this.state.data.total - this.state.data.PE]\n                    }\n                ]\n            }\n            const peTypeData = {\n                labels: ['Single Leg', 'Bilateral'],\n                datasets: [\n                    {\n                        label: 'Pedal Edema type distribution',\n                        backgroundColor: [\n                            '#00A6B4',\n                            '#C9DE00'\n                        ],\n                        hoverBackgroundColor: [\n                            '#003350',\n                            '#4B5000'\n                        ],\n                        data: [this.state.data.Single, this.state.data.Bilateral]\n                    }\n                ]\n            }\n            return (\n                <Container style={{textAlign: \"center\"}}>\n                    <Row>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{ right: \"2rem\" }}>\n                                    <h3>Pedal Edema Cases</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Cases',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col sm={6} className=\"metric\">\n                            <Row>\n                                <Col style={{right: \"3rem\"}}>\n                                    <h3>Pedal Edema Type Distribution</h3>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Pie\n                                        data={peTypeData}\n                                        options={{\n                                            title: {\n                                                display: false,\n                                                text: 'Pedal Edema Type Distribution',\n                                                fontSize: 20\n                                            },\n                                            legend: {\n                                                display: true,\n                                                position: 'right'\n                                            }\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            )\n        }\n    }\n}\n\nexport default PETracker;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './Dashboard.css';\n\nimport SideBar from '../Sidebar/Sidebar';\nimport Directory from '../Directory/Directory';\nimport HealthStats from '../HealthStats/HealthStats';\nimport PVTGTracker from '../PVTGTracker/PVTGTracker';\nimport PETracker from '../PETracker/PETracker';\n\nexport default class Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dashView: \"PatientStatus\"\n        }\n    }\n\n    changeView = (nextView) => {\n        this.setState({dashView: nextView});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"SideBarContainer\">\n                    <SideBar currentView={this.state.dashView} changeView={this.changeView} pageWrapId={\"page-wrap\"} outerContainerId={\"SideBarContainer\"} />\n                    <div id=\"page-wrap\">\n                        {\n                            (() => {\n                                switch (this.state.dashView) {\n                                    case \"PatientStatus\":\n                                        return <Directory />\n                                    case \"HealthStats\":\n                                        return <HealthStats />\n                                    case \"PVTGTracker\":\n                                        return <PVTGTracker />\n                                    case \"PedalEdemaTracker\":\n                                        return <PETracker />\n                                    default:\n                                        return (\n                                            <Container>\n                                                <Row style={{ marginTop: \"40vh\" }}>\n                                                    <Col>\n                                                        <h1>\n                                                            Coming Soon..\n                                                        </h1>\n                                                    </Col>\n                                                </Row>\n                                            </Container>\n                                        )\n                                }\n                            })()\n                        }\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Form } from 'react-bootstrap';\n\n\nexport default function PHC(props) {\n    let {loading, phcList} = props;\n\n    React.useEffect(() => {\n        if (props.phcValue) {\n            document.getElementById(props.id).value = props.phcValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillageSec(event.target.value);\n    }\n\n    if (!phcList) {\n        phcList = [];\n    }\n\n    if(!loading) {\n        if (phcList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC</option>\n                    {\n                        phcList.map((phc, i) => {\n                            return (\n                                <option value={phc.PHC_id} key={i}>{phc.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Mandal First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}\n","import React  from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function VillageSec(props) {\n    let { loading, villageSecList } = props;\n    \n    React.useEffect(() => {\n        if (props.villageSecValue) {\n            document.getElementById(props.id).value = props.villageSecValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.fetchVillages(event.target.value);\n    }\n\n    if (!villageSecList) {\n        villageSecList = [];\n    }\n\n    if(!loading) {\n        if (villageSecList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageSecList.map((villageSec, i) => {\n                            return (\n                                <option value={villageSec.villagesec_id} key={i}>{villageSec.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select PHC first</option>\n                </Form.Control>\n            )\n        }\n    }\n    else{\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\nexport default function Village(props) {\n    let { loading, villageList } = props;\n    React.useEffect(() => {\n        if (props.villageValue) {\n            document.getElementById(props.id).value = props.villageValue;\n        }\n    })\n\n    const handleChange = event => {\n        props.updateValue({ village: event.target.value });\n    }\n\n    if (!villageList) {\n        villageList = [];\n    }\n\n    if (!loading) {\n        if (villageList.length > 0) {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Village</option>\n                    {\n                        villageList.map((village, i) => {\n                            return (\n                                <option value={village.village_id} key={i}>{village.name}</option>\n                            )\n                        })\n                    }\n                </Form.Control>\n            )\n        }\n        else {\n            return (\n                <Form.Control\n                    as=\"select\"\n                    onChange={handleChange}\n                    id={props.id}\n                >\n                    <option value=\"\">Select Sub center First</option>\n                </Form.Control>\n            )\n        }\n    }\n    else {\n        return (\n            <Form.Control\n                as=\"select\"\n                onChange={handleChange}\n                id={props.id}\n            >\n                <option value=\"\">Loading...</option>\n            </Form.Control>\n        )\n    }\n}","import React from 'react';\n\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport PHC from '../PHC/PHC';\nimport VillageSec from '../VillageSecretariat/VillageSec';\nimport Village from '../Village/Village';\nimport axios from 'axios';\n\nimport { authHeader } from '../../helpers';\n\nimport './BasicDetailsForm.css';\nclass BasicDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaarFirst: \"\",\n            adhaarSecond: \"\",\n            adhaarThird: \"\",\n            mandal: props.getValue('mandal'),\n            phc: props.getValue('phc'),\n            village_sec: props.getValue('village_sec'),\n            village: props.getValue('village'),\n            name: props.getValue('name'),\n            surname: props.getValue('surname'),\n            relation: props.getValue('relation'),\n            gaurdian_name: props.getValue('gaurdian_name'),\n            age: props.getValue('age'),\n            gender: props.getValue('gender'),\n            maritalstatus: props.getValue('maritalstatus'),\n            phone: props.getValue('phone'),\n            bloodgroup: props.getValue('bloodgroup'),\n            PVTG: props.getValue('PVTG'),\n            address: props.getValue('address'),\n            deworming: props.getValue('deworming'),\n            phcList: props.getValue('phcList'),\n            villageList: props.getValue('villageList'),\n            villageSecList: props.getValue('villageSecList'),\n            phcLoading: false,\n            villageSecLoading: false,\n            villageLoading: false,\n            smoking: props.getValue('smoking'),\n            drinking: props.getValue('drinking')\n        }\n    }\n\n    uri = process.env.REACT_APP_SERVER_URI;\n\n    componentDidMount = () => {\n        let adhaarNumber = this.props.getValue('adhaar');\n        if (adhaarNumber) {\n            this.setState({ adhaarFirst: adhaarNumber.substring(0, 4) });\n            this.setState({ adhaarSecond: adhaarNumber.substring(4, 8) });\n            this.setState({ adhaarThird: adhaarNumber.substring(8, 12) });\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    fetchOrUpdatePHCList = event => {\n        this.setState(\n            {\n                mandal: event.target.value,\n                phcList: [],\n                phc: \"\",\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                phcLoading: event.target.value ? true : false,\n            }\n        );\n        if (event.target.value) {\n            console.log(\"Getting phcs\");\n            axios.post(this.uri + 'GetPHCData/'\n                , {\n                    mandal_id: event.target.value\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ phcList: response.data, phcLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageSecList = (phc) => {\n        this.setState(\n            {\n                phc: phc,\n                villageSecList: [],\n                village_sec: \"\",\n                villageList: [],\n                village: \"\",\n                villageSecLoading: phc ? true : false\n            }\n        );\n        if (phc) {\n            console.log(\"Getting village secs\");\n            axios.post(this.uri + 'GetVillageSecData/',\n                {\n                    PHC_id: phc\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageSecList: response.data, villageSecLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    fetchOrUpdateVillageList = (villageSec) => {\n        this.setState({ \n            villageList: [], \n            village: \"\", \n            village_sec: villageSec, \n            villageLoading: villageSec ? true : false \n        });\n        if (villageSec) {\n            console.log(\"Getting villages\");\n            axios.post(this.uri + 'GetVillageData/',\n                {\n                    villagesec_id: villageSec\n                },\n                {\n                    headers: authHeader()\n                })\n                .then(response => {\n                    this.setState({ villageList: response.data, villageLoading: false });\n                })\n                .catch(err => {\n                    throw err;\n                });\n        }\n    }\n\n    validate = () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        let validIds = [];\n        let invalidIds = [];\n        try {\n            //Adhaar fields validation\n            let adhaarIds = [\"adhaarFirst\", \"adhaarSecond\", \"adhaarThird\"];\n            let filled = false;\n            for (let i = 0; i < adhaarIds.length; i++) {\n                if (this.state[adhaarIds[i]] !== \"\") {\n                    filled = true;\n                    break;\n                }\n            }\n            if (filled) {\n                for (let i = 0; i < adhaarIds.length; i++) {\n                    if (this.state[adhaarIds[i]].length < 4) {\n                        invalidIds.push(adhaarIds[i]);\n                    }\n                    else {\n                        validIds.push(adhaarIds[i]);\n                    }\n                }\n            }\n            //Other field validations\n            Boolean(this.state.mandal) ? validIds.push('mandal') : invalidIds.push('mandal');\n            Boolean(this.state.phc) ? validIds.push('phc') : invalidIds.push('phc');\n            Boolean(this.state.village_sec) ? validIds.push('village_sec') : invalidIds.push('village_sec');\n            Boolean(this.state.village) ? validIds.push('village') : invalidIds.push('village');\n            Boolean(this.state.name) ? validIds.push('name') : invalidIds.push('name');\n            Boolean(this.state.surname) ? validIds.push('surname') : invalidIds.push('surname');\n            Boolean(this.state.relation) ? validIds.push('relation') : invalidIds.push('relation');\n            Boolean(this.state.gaurdian_name) ? validIds.push('gaurdian_name') : invalidIds.push('gaurdian_name');\n            Boolean(this.state.age) ? validIds.push('age') : invalidIds.push('age');\n            Boolean(this.state.gender) ? validIds.push('gender') : invalidIds.push('gender');\n            Boolean(this.state.maritalstatus) ? validIds.push('maritalstatus') : invalidIds.push('maritalstatus');\n            Boolean(this.state.bloodgroup) ? validIds.push('bloodgroup') : invalidIds.push('bloodgroup');\n            Boolean(this.state.PVTG) ? validIds.push('PVTG') : invalidIds.push('PVTG');\n            // if (this.state.phone === \"\" || this.state.phone.length !== 10) {\n            //     invalidIds.push('phone');\n            // }\n            // else {\n            //     validIds.push('phone');\n            // }\n            for (let i = 0; i < validIds.length; i++) {\n                document.getElementById(validIds[i]).style.border = \"\";\n            }\n            if (invalidIds.length > 0) {\n                window.location.href = \"#\" + invalidIds[0];\n                for (let i = 0; i < invalidIds.length; i++) {\n                    document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n                }\n                document.getElementById(invalidIds[0]).focus();\n                throw new Error();\n            }\n            else {\n                window.location.href = \"#\";\n            }\n            //Still in try block? Means all fields valid. Now saving the data to parent component.\n            this.saveData();\n            this.props.changeData({ formName: \"Observations\" });\n        }\n        catch (err) {\n            // console.log(false);\n        }\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({ [input]: document.getElementById(input).checked });\n    }\n\n    saveData = async () => {\n        let dataToSave = {\n            adhaar: this.state.adhaarFirst + this.state.adhaarSecond + this.state.adhaarThird,\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            village_sec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            PVTG: this.state.PVTG,\n            address: this.state.address,\n            children: this.state.children,\n            deworming: this.state.deworming,\n            phcList: this.state.phcList,\n            villageList: this.state.villageList,\n            villageSecList: this.state.villageSecList,\n            smoking: this.state.smoking,\n            drinking: this.state.drinking\n        }\n        await new Promise(resolve => this.props.changeData(dataToSave, () => resolve()));\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    restrictDigits = length => event => {\n        let strValue = event.target.value.toString();\n        if (strValue.length > length) {\n            event.target.value = Number(strValue.substring(0, length));\n        }\n        this.setState({ [event.target.id]: event.target.value.toString() });\n        if (event.target.id.includes('adhaar')) {\n            this.changeAdhaarFocus(event.target.id, event.target.value);\n        }\n    }\n\n    updateState = (valueObj) => {\n        this.setState(valueObj);\n    }\n\n    changeAdhaarFocus = (id, value) => {\n        if (id === 'adhaarFirst' && value.length === 4) {\n            document.getElementById('adhaarSecond').focus();\n        }\n        else if (id === 'adhaarSecond' && value.length === 4) {\n            document.getElementById('adhaarThird').focus();\n        }\n    }\n\n    render() {\n\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Basic Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3} xs={12}>\n                                        <Form.Label>Aadhar(Optional) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarFirst\"\n                                            value={this.state.adhaarFirst}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarSecond\"\n                                            value={this.state.adhaarSecond}\n                                            className=\"adhaar-field\"\n                                        />\n                                    </Col>\n                                    <Col sm={3} xs={4}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999\"\n                                            type=\"number\"\n                                            onChange={this.restrictDigits(4)}\n                                            placeholder=\"XXXX\"\n                                            id=\"adhaarThird\"\n                                            value={this.state.adhaarThird}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Mandal :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.fetchOrUpdatePHCList}\n                                            id=\"mandal\"\n                                            value={this.state.mandal}\n                                        >\n                                            <option value=\"\">Select Mandal</option>\n                                            <option value=\"01\">Chintoor</option>\n                                            <option value=\"02\">Yetapaka</option>\n                                            <option value=\"03\">Kunnavaram</option>\n                                            <option value=\"04\">V.R Puram</option>\n                                        </Form.Control>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>PHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <PHC phcList={this.state.phcList}\n                                            phcValue={this.state.phc}\n                                            fetchVillageSec={this.fetchOrUpdateVillageSecList}\n                                            loading={this.state.phcLoading}\n                                            id=\"phc\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sub Center :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <VillageSec\n                                            id=\"village_sec\"\n                                            villageSecValue={this.state.village_sec}\n                                            villageSecList={this.state.villageSecList}\n                                            loading={this.state.villageSecLoading}\n                                            fetchVillages={this.fetchOrUpdateVillageList}\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Village :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Village\n                                            updateValue={this.updateState}\n                                            id=\"village\"\n                                            villageList={this.state.villageList}\n                                            loading={this.state.villageLoading}\n                                            villageValue={this.state.village}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>First Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"First Name\"\n                                            id=\"name\"\n                                            onChange={this.handleChange('name')}\n                                            value={this.state.name} />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Surname :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Surname\"\n                                            onChange={this.handleChange('surname')}\n                                            id=\"surname\"\n                                            value={this.state.surname} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>S/o, D/o, W/o:</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"relation\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"son\"\n                                                    id=\"sonOf\"\n                                                    label=\"Son of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"son\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"daughter\"\n                                                    id=\"daughterOf\"\n                                                    label=\"Daughter of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"daughter\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"wife\"\n                                                    id=\"wifeOf\"\n                                                    label=\"Wife of\"\n                                                    name=\"relation\"\n                                                    onChange={this.handleChange('relation')}\n                                                    checked={this.state.relation === \"wife\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Label>Guardian Name :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} style={{ display: this.state.relation ? 'block' : 'none' }}>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter Name\"\n                                            onChange={this.handleChange('gaurdian_name')}\n                                            id=\"gaurdian_name\"\n                                            value={this.state.gaurdian_name}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"age\">\n                                    <Col sm={3}>\n                                        <Form.Label>Age : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"99\"\n                                            type=\"number\"\n                                            placeholder=\"Enter age\"\n                                            onChange={this.restrictDigits(2)}\n                                            value={this.state.age} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Sex :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"gender\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"M\"\n                                                    id=\"male\"\n                                                    label=\"Male\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"M\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"F\"\n                                                    id=\"female\"\n                                                    label=\"Female\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"F\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NB\"\n                                                    id=\"transgender\"\n                                                    label=\"Transgender\"\n                                                    name=\"gender\"\n                                                    onChange={this.handleChange('gender')}\n                                                    checked={this.state.gender === \"NB\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Marital Status :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('maritalstatus')}\n                                            id=\"maritalstatus\"\n                                            value={this.state.maritalstatus}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            <option value=\"single\">Single</option>\n                                            <option value=\"married\">Married</option>\n                                            <option value=\"separated\">Separated</option>\n                                            <option value=\"divorced\">Divorced</option>\n                                            <option value=\"widowed\">Widowed</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Phone Number : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            min=\"0\"\n                                            max=\"9999999999\"\n                                            type=\"number\"\n                                            placeholder=\"Enter Contact number\"\n                                            id=\"phone\"\n                                            onChange={this.restrictDigits(10)}\n                                            value={this.state.phone} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"address\">\n                                    <Col sm={3}>\n                                        <Form.Label>Address : </Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <textarea\n                                            placeholder=\"Enter address\"\n                                            value={this.state.address}\n                                            onChange={this.handleChange('address')}\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"bloodgroup\">\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Group :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('bloodgroup')}\n                                            value={this.state.bloodgroup}\n                                        >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"o-\">O-</option>\n                                            <option value=\"o+\">O+</option>\n                                            <option value=\"a-\">A-</option>\n                                            <option value=\"a+\">A+</option>\n                                            <option value=\"b-\">B-</option>\n                                            <option value=\"b+\">B+</option>\n                                            <option value=\"ab-\">AB-</option>\n                                            <option value=\"ab+\">AB+</option>\n                                            <option value=\"N.A.\">Not yet known</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Deworming :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"deworming\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"true\"\n                                                    id=\"deworming_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"true\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"false\"\n                                                    id=\"deworming_no\"\n                                                    label=\"No\"\n                                                    name=\"deworming\"\n                                                    onChange={this.handleChange('deworming')}\n                                                    checked={this.state.deworming === \"false\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>Caste :</Form.Label>\n                                    </Col>\n                                    <Col sm={3} id=\"PVTG\" style={styles.left}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"ST\"\n                                                    id=\"PVTG_st\"\n                                                    label=\"ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"ST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"NST\"\n                                                    id=\"PVTG_nst\"\n                                                    label=\"Non ST\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"NST\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"PVTG\"\n                                                    id=\"PVTG_pvt\"\n                                                    label=\"PVTG\"\n                                                    name=\"PVTG\"\n                                                    onChange={this.handleChange('PVTG')}\n                                                    checked={this.state.PVTG === \"PVTG\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Label>\n                                                    Habits :\n                                                </Form.Label>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <Row>\n                                            <Col sm={3}>\n                                               <Form.Label>\n                                                    Smoking\n                                               </Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"smoking\"\n                                                    name=\"smoking\"\n                                                    onClick={this.handleCheckboxChange('smoking')}\n                                                    checked={this.state.smoking}\n                                                />\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Label>Drinking</Form.Label>\n                                            </Col>\n                                            <Col sm={3}>\n                                                <Form.Check\n                                                    type=\"checkbox\"\n                                                    id=\"drinking\"\n                                                    name=\"drinking\"\n                                                    onClick={this.handleCheckboxChange('drinking')}\n                                                    checked={this.state.drinking}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={styles.center}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.validate}>Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BasicDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './TestDetailsForm.css';\n\nclass TestDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateoftesting: props.getValue('dateoftesting'),\n            serumCreatinine: props.getValue('serumCreatinine'),\n            bloodUrea: props.getValue('bloodUrea'),\n            uricAcid: props.getValue('uricAcid'),\n            electrolytes_sodium: props.getValue('electrolytes_sodium'),\n            electrolytes_potassium: props.getValue('electrolytes_potassium'),\n            bun: props.getValue('bun'),\n            pedalEdema: props.getValue('pedalEdema'),\n            pedaltype: props.getValue('pedaltype'),\n            kidneystatus: props.getValue('kidneystatus'),\n            ailments: props.getValue('ailments'),\n            dialysis: props.getValue('dialysis'),\n            doctorreq: props.getValue('doctorreq'),\n            opd: props.getValue('opd'),\n            treatmentDone: props.getValue('treatmentDone'),\n            btn: \"Submit\",\n            loading: false,\n        }\n    }\n\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    previous = () => {\n        console.log(this.state)\n        this.saveData().then(() => {\n            this.props.changeData({ formName: \"BloodProfile\" });\n        })\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    validateOneDigitAfterDecimalSerumCreatine = event => {\n        if (event.target.value > 2 && event.target.value < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBloodUrea = event => {\n        if (event.target.value > 15 && event.target.value < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalUricAcid = event => {\n        if (event.target.value > 2.6 && event.target.value < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesSodium = event => {\n        if (event.target.value > 135 && event.target.value < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalElectrolytesPotassium = event => {\n        if (event.target.value > 3.5 && event.target.value < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateOneDigitAfterDecimalBun = event => {\n        if (event.target.value > 8 && event.target.value < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (event.target.value > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n        let strValue = event.target.value.toString();\n        if (strValue.includes(\".\")) {\n            var index = strValue.indexOf(\".\")\n            event.target.value = Number(strValue.substring(0, index + 2));\n        }\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"HospitalDetails\");\n    }\n\n    // mandatoryFieldCheck = () => {\n    //     let invalidIds = [];\n    //     try {\n    //         if (this.state.kidneystatus === 'abnormal') {\n    //             if (this.state.doctorreq === \"\") {\n    //                 invalidIds.push('doctorreq')\n    //             }\n    //             if (this.state.dialysis === \"\") {\n    //                 invalidIds.push('dialysis')\n    //             }\n    //             if (invalidIds.length > 0) {\n    //                 window.location.href = \"#\" + invalidIds[0];\n    //                 for (let i = 0; i < invalidIds.length; i++) {\n    //                     document.getElementById(invalidIds[i]).style.border = \"2px solid red\";\n    //                 }\n    //                 document.getElementById(invalidIds[0]).focus();\n    //                 throw new Error();\n    //             }\n    //             else {\n    //                 window.location.href = \"#\";\n    //             }\n    //         }\n    //     }\n    //     catch (err) {\n    //         // console.log(false);\n    //     }\n    // }\n\n    validateAndSubmit = () => {\n            console.log(this.state)\n            this.setState({ btn: \"Submitting\" });\n            this.setState({ loading: true })\n            this.saveData()\n                .then(() => {\n                    console.log(this.state)\n                    this.props.submit();\n                })\n\n    }\n\n    serumCreatinineAfterReRendering = () => {\n        if (this.state.serumCreatinine > 2 && this.state.serumCreatinine < 5.9) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid green\"\n        }\n        else if (this.state.serumCreatinine > 6) {\n            document.getElementById(\"serumCreatinine\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"serumCreatinine\")) {\n                document.getElementById(\"serumCreatinine\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bloodUreaAfterReRendering = () => {\n        if (this.state.bloodUrea > 15 && this.state.bloodUrea < 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bloodUrea > 40) {\n            document.getElementById(\"bloodUrea\").style.border = \"2px solid red\"\n\n        }\n        else {\n            if (document.getElementById(\"bloodUrea\")) {\n                document.getElementById(\"bloodUrea\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    uricAcidfterReRendering = () => {\n        if (this.state.uricAcid > 2.6 && this.state.uricAcid < 6.0) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid green\"\n        }\n        else if (this.state.uricAcid > 6) {\n            document.getElementById(\"uricAcid\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"uricAcid\")) {\n                document.getElementById(\"uricAcid\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesSodiumReRendering = () => {\n        if (this.state.electrolytes_sodium > 135 && this.state.electrolytes_sodium < 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_sodium > 155) {\n            document.getElementById(\"electrolytes_sodium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_sodium\")) {\n                document.getElementById(\"electrolytes_sodium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    electrolytesPotassiumReRendering = () => {\n        if (this.state.electrolytes_potassium > 3.5 && this.state.electrolytes_potassium < 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid green\"\n        }\n        else if (this.state.electrolytes_potassium > 5.5) {\n            document.getElementById(\"electrolytes_potassium\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"electrolytes_potassium\")) {\n                document.getElementById(\"electrolytes_potassium\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    bunReRendering = () => {\n        if (this.state.bun > 8 && this.state.bun < 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid green\"\n        }\n        else if (this.state.bun > 23) {\n            document.getElementById(\"bun\").style.border = \"2px solid red\"\n        }\n        else {\n            if (document.getElementById(\"bun\")) {\n                document.getElementById(\"bun\").style.border = \"1px solid blue\"\n            }\n        }\n    }\n\n    componentDidMount = () => {\n        // console.log(this.state)\n        this.serumCreatinineAfterReRendering();\n        this.bloodUreaAfterReRendering();\n        this.uricAcidfterReRendering();\n        this.electrolytesPotassiumReRendering();\n        this.electrolytesSodiumReRendering();\n        this.bunReRendering();\n\n    }\n\n    render() {\n        const { loading, btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Testing Details</legend>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date of Testing : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"date\" placeholder=\"\" id=\"dateoftesting\" onChange={this.handleChange('dateoftesting')}\n                                            value={this.state.dateoftesting} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Serum Creatinine : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control min=\"0\" type=\"number\" placeholder=\"mg/dl\" id=\"serumCreatinine\" onChange={this.validateOneDigitAfterDecimalSerumCreatine}\n                                            value={this.state.serumCreatinine} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Urea : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bloodUrea\" onChange={this.validateOneDigitAfterDecimalBloodUrea}\n                                            value={this.state.bloodUrea}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Uric Acid : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"uricAcid\" onChange={this.validateOneDigitAfterDecimalUricAcid}\n                                            value={this.state.uricAcid} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Electrolytes </h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Sodium(Na) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_sodium\" onChange={this.validateOneDigitAfterDecimalElectrolytesSodium}\n                                            value={this.state.electrolytes_sodium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Potassium(K) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"electrolytes_potassium\" onChange={this.validateOneDigitAfterDecimalElectrolytesPotassium}\n                                            value={this.state.electrolytes_potassium} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>BUN (Blood Urea Nitrogen) : </Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control type=\"number\" min=\"0\" placeholder=\"mg/dl\" id=\"bun\" onChange={this.validateOneDigitAfterDecimalBun}\n                                            value={this.state.bun} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={6} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                <Form.Group as={Row} >\n                                    <Col sm={6}>\n                                        <Form.Label>Pedal Edema :</Form.Label>\n                                    </Col>\n                                    <Col sm={6}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"Y\"\n                                                    id=\"yes\"\n                                                    label=\"Yes\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"Y\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"N\"\n                                                    id=\"no\"\n                                                    label=\"No\"\n                                                    name=\"pedalEdema\"\n                                                    onChange={this.handleChange('pedalEdema')}\n                                                    checked={this.state.pedalEdema === \"N\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                            <Col sm={6} >\n                                {(() => {\n                                    if (this.state.pedalEdema === 'Y') {\n                                        return (\n                                            <Form.Group as={Row} controlId=\"pedaltype\">\n                                                <Col sm={6}>\n                                                    <Form.Label>Pedal Type :</Form.Label>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <Form.Control as=\"select\" onChange={this.handleChange('pedaltype')} value={this.state.pedaltype}>\n                                                        <option value=\"\">Choose...</option>\n                                                        <option value=\"single leg\">Single Leg</option>\n                                                        <option value=\"bilateral\">Bilateral</option>\n                                                    </Form.Control>\n                                                </Col>\n                                            </Form.Group>\n                                        )\n                                    }\n                                    else {\n                                        return (\n                                            <p></p>\n                                        )\n                                    }\n                                })()}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={3}>\n                                <Form.Label>Kidney Functioning Status :</Form.Label>\n                            </Col>\n                            <Col sm={3}>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"good\"\n                                            id=\"good\"\n                                            label=\"Good\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"good\"}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <Form.Check\n                                            type='radio'\n                                            value=\"abnormal\"\n                                            id=\"abnormal\"\n                                            label=\"Abnormal\"\n                                            name=\"kidneystatus\"\n                                            onChange={this.handleChange('kidneystatus')}\n                                            checked={this.state.kidneystatus === \"abnormal\"}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br></br>\n                        {(() => {\n                            if (this.state.kidneystatus === 'good') {\n                                return (\n                                    <Container></Container>\n                                )\n                            }\n                            else if (this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Specify the ailments : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.ailments} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={3}>\n                                                <Form.Label>Need for Dialysis :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"dialysis\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"yes\"\n                                                            label=\"Yes\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"no\"\n                                                            label=\"No\"\n                                                            name=\"dialysis\"\n                                                            onChange={this.handleChange('dialysis')}\n                                                            checked={this.state.dialysis === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={4}>\n                                                <Form.Label>Need for immediate Doctor Supervision :</Form.Label>\n                                            </Col>\n                                            <Col sm={3} id=\"doctorreq\">\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"true\"\n                                                            id=\"true\"\n                                                            label=\"Yes\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"true\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Form.Check\n                                                            type='radio'\n                                                            value=\"false\"\n                                                            id=\"false\"\n                                                            label=\"No\"\n                                                            name=\"doctorreq\"\n                                                            onChange={this.handleChange('doctorreq')}\n                                                            checked={this.state.doctorreq === \"false\"}\n                                                        />\n                                                    </Col>\n                                                </Row>\n                                            </Col>\n                                        </Row>\n                                    </React.Fragment>\n                                )\n                            }\n                        })()}\n                        <br />\n                        {(() => {\n                            if (this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                    <Row>\n                                        <Col sm={4}>\n                                            <Form.Label>Patient Type :</Form.Label>\n                                        </Col>\n                                        <Col sm={3} id=\"opd \">\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"true\"\n                                                        id=\"opd\"\n                                                        label=\"IP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"true\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Check\n                                                        type='radio'\n                                                        value=\"false\"\n                                                        id=\"opd\"\n                                                        label=\"OP\"\n                                                        name=\"opd\"\n                                                        onChange={this.handleChange('opd')}\n                                                        checked={this.state.opd === \"false\"}\n                                                    />\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                    </Row>\n                                )\n                            }\n\n                        })()}\n\n                        {(() => {\n                            if (this.state.opd === 'true' && this.state.doctorreq === 'true' && this.state.kidneystatus === 'abnormal') {\n                                return (\n                                        <React.Fragment>\n\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndNext}\n                                                className=\"cool-button\"\n                                            >Next</Button>\n                                        </Col>\n                                    </Row>\n                                     </React.Fragment>\n                                )\n                            }\n                            else if (this.state.opd === 'false'){\n                                return (\n                                     <React.Fragment>\n                                        <Row>\n                                            <Col sm={12} style={{ paddingLeft: 0, paddingRight: 0 }}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={6}>\n                                                        <Form.Control as=\"textarea\" placeholder=\"Description\" id=\"ailments\" onChange={this.handleChange('ailments')}\n                                                            value={this.state.treatmentDone} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                    <Row>\n                                        <Col sm={6} xs={6} style={styles.right}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.previous.bind(this)}\n                                                className=\"cool-button\"\n                                            >Previous</Button>\n                                        </Col>\n                                        <Col sm={6} xs={6} style={styles.left}>\n                                            <Button variant=\"primary\"\n                                                onClick={this.validateAndSubmit}\n                                                className=\"cool-button\"\n                                            >{loading && <i className=\"spinner-border spinner-border-sm\" role=\"status\"></i>} {btn}</Button>\n                                        </Col>\n                                    </Row>\n                                     </React.Fragment>\n                                )\n                            }\n\n                        })()}\n                    </fieldset>\n                </Row>\n            </Container>\n\n        )\n    }\n}\n\nexport default TestDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\n// import { DateTime } from 'react-datetime-bootstrap';\n\nclass HospitalDetailsForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hospitalAdmit: props.getValue('hospitalAdmit'),\n            dateOfAdmit: props.getValue('dateOfAdmit'),\n            refered: props.getValue('refered'),\n            referredto: props.getValue('referredto'),\n            status: props.getValue('status'),\n            treatmentDone: props.getValue('treatmentDone'),\n            dialysis: props.getValue('dialysis'),\n            discharge: props.getValue('discharge'),\n            discharged: props.getValue('discharged'),\n            dischargeStatus: props.getValue('dischargeStatus'),\n            deceased: props.getValue('deceased'),\n            deathDate: props.getValue('deathDate'),\n            placeOfDeath: props.getValue('placeOfDeath'),\n            causeOfDeath: props.getValue('causeOfDeath'),\n            recovery: props.getValue('recovery'),\n            otherReferedHospitalName: \"\",\n            referredToSelected: props.getValue('referredToSelected') ? props.getValue('referredToSelected') : 'NO',\n            btn: \"Submit\",\n            loading:false,\n\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n\n    }\n\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"PatientHealthStat\");\n    }\n\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"TestDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n\n    handleReferredTo = event => {\n        let value = event.target.value;\n        if(value === \"\"){\n            this.setState({ referredToSelected: 'NO', referredto: \"\" })\n        }\n        else if(value === 'other'){\n            this.setState({referredToSelected: 'OTHER', referredto: \"\"});\n        }\n        else {\n            this.setState(\n                { referredto: value, referredToSelected: 'YES' }\n            );\n        }\n    }\n\n    render() {\n      const {loading} = this.state;\n      const {btn } = this.state;\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            right: {\n                textAlign: \"right\"\n            },\n            left: {\n                textAlign: \"left\"\n            }\n        }\n        return (\n\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%' }}>\n                        <legend>Hospital Details</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} controlId=\"phc\">\n                                    <Col sm={3}>\n                                        <Form.Label>Hospital admitted in :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hospitalAdmit')}\n                                            value={this.state.hospitalAdmit} >\n                                            <option value=\"\">Choose...</option>\n                                            <option value=\"PHC/Tulasipaka\">PHC/Tulasipaka</option>\n                                            <option value=\"PHC/E.D Pally\">PHC/E.D Pally</option>\n                                            <option value=\"PHC/Laxmipuram\">PHC/Laxmipuram</option>\n                                            <option value=\"PHC/Nellipaka\">PHC/Nellipaka</option>\n                                            <option value=\"PHC/Gowridevipeta\">PHC/Gowridevipeta</option>\n                                            <option value=\"PHC/Kuturu\">PHC/Kuturu</option>\n                                            <option value=\"PHC/Rekhapally\">PHC/Rekhapally</option>\n                                            <option value=\"PHC/Jeediguppa\">PHC/Jeediguppa</option>\n                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                            <option value=\"other\">Other</option>\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Date Of Admit :</Form.Label>\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <input type=\"date\" value={this.state.dateOfAdmit} className=\"form-control\" id=\"dateOfAdmit\" onChange={this.handleChange('dateOfAdmit')} />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Row>\n                                    <Col sm={3}>\n                                        <Form.Label>  Refered To any Hospitals :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"yes\"\n                                                    id=\"refered_yes\"\n                                                    label=\"Yes\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"yes\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                <Form.Check\n                                                    type='radio'\n                                                    value=\"no\"\n                                                    id=\"refered_no\"\n                                                    label=\"No\"\n                                                    name=\"refered\"\n                                                    onChange={this.handleChange('refered')}\n                                                    checked={this.state.refered === \"no\"}\n                                                />\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <br />\n                        {(() => {\n                            if (this.state.refered === \"yes\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"referredto\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Hospital Refered to :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control\n                                                            as=\"select\"\n                                                            onChange={this.handleReferredTo}\n                                                            value={this.state.referredToSelected === 'OTHER' ? 'other' : this.state.referredto} >\n                                                            <option value=\"\">Choose...</option>\n                                                            <option value=\"AH/Chintoor\">AH/Chintoor</option>\n                                                            <option value=\"AH/Rampachodavaram\">AH/Rampachodavaram</option>\n                                                            <option value=\"AH/Bhadrachalam\">AH/Bhadrachalam</option>\n                                                            <option value=\"DH/Rajamundry\">DH/Rajamundry</option>\n                                                            <option value=\"GGH/Kakinada\">GGH/Kakinada</option>\n                                                            <option value=\"other\">Other</option>\n                                                        </Form.Control>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        {(() => {\n                                                            if (this.state.referredToSelected === 'OTHER') {\n                                                                return (\n                                                                    <Form.Control as=\"textarea\"\n                                                                        type=\"text\"\n                                                                        placeholder=\"Enter Hospital Name\"\n                                                                        onChange={this.handleChange('referredto')}\n                                                                        value={this.state.referredto} />\n                                                                )\n                                                            }\n                                                            else {\n                                                                return;\n                                                            }\n                                                        })()}\n                                                    </Col>\n\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"status\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Health Status at the time of referring :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Health Status at the time of referring\"\n                                                            onChange={this.handleChange('status')}\n                                                            value={this.state.status} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Need for dialysis :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"yes\"\n                                                                    id=\"dialysis_yes\"\n                                                                    label=\"Yes\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"yes\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Check\n                                                                    type='radio'\n                                                                    value=\"no\"\n                                                                    id=\"dialysis_no\"\n                                                                    label=\"No\"\n                                                                    name=\"dialysis\"\n                                                                    onChange={this.handleChange('dialysis')}\n                                                                    checked={this.state.dialysis === \"yes\"}\n                                                                />\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <br />\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control as=\"textarea\"\n                                                            rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the Treatment Provided\"\n                                                            onChange={this.handleChange('treatmentDone')}\n                                                            value={this.state.treatmentDone}\n                                                        />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                          <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"recovery\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Recovery Status :</Form.Label>\n                                                    </Col>\n                                                    <Col>\n                                                        <Form.Control as=\"textarea\" rows=\"3\"\n                                                            type=\"text\"\n                                                            placeholder=\"Enter the recovery Status at the time of discharge\"\n                                                            onChange={this.handleChange('recovery')}\n                                                            value={this.state.recovery} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                         <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Discharged :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"discharge_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"discharge\"\n                                                                onChange={this.handleChange('discharged')}\n                                                                checked={this.state.discharged === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"discharge_no\"\n                                                                label=\"No\"\n                                                                name=\"discharge\"\n                                                                onChange={this.handleChange('discharged')}\n                                                                checked={this.state.discharged === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.discharged === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of discharge : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.discharge} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('discharge')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                \n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Patient Status :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Patient Status at the time of discharge\"\n                                                                            onChange={this.handleChange('dischargeStatus')}\n                                                                            value={this.state.dischargeStatus} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.discharged === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n\n\n\n                                          <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n\n\n\n                                                  \n                                    </div>\n                                )\n                            }\n                            else if (this.state.refered === \"no\") {\n                                return (\n                                    <div>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row} controlId=\"treatmentDone\">\n                                                    <Col sm={3}>\n                                                        <Form.Label>Treatment Provided : </Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <Form.Control \n                                                        placeholder=\"Enter details\" \n                                                        as=\"textarea\" \n                                                        rows=\"3\" \n                                                        onChange={this.handleChange('treatmentDone')}\n                                                        value={this.state.treatmentDone} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col sm={12}>\n                                                <Form.Group as={Row}>\n                                                    <Col sm={3}>\n                                                        <Form.Label>Date Of discharge :</Form.Label>\n                                                    </Col>\n                                                    <Col sm={3}>\n                                                        <input type=\"date\" className=\"form-control\" id=\"discharge2\" onChange={this.handleChange('discharge')} />\n                                                    </Col>\n                                                </Form.Group>\n                                            </Col>\n                                        </Row>\n                                        <Col sm={12}>\n                                            <Row>\n                                                <Col sm={3}>\n                                                    <Form.Label>Deceased :</Form.Label>\n                                                </Col>\n                                                <Col sm={3}>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"yes\"\n                                                                id=\"deceased_yes\"\n                                                                label=\"Yes\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"yes\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Form.Check\n                                                                type='radio'\n                                                                value=\"no\"\n                                                                id=\"deceased_no\"\n                                                                label=\"No\"\n                                                                name=\"deceased\"\n                                                                onChange={this.handleChange('deceased')}\n                                                                checked={this.state.deceased === \"no\"}\n                                                            />\n                                                        </Col>\n                                                    </Row>\n\n                                                </Col>\n                                            </Row>\n                                        </Col>\n                                        <br />\n                                        {(() => {\n                                            if (this.state.deceased === \"yes\") {\n                                                return (\n                                                    <div>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row}>\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Date of death : </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <input type=\"date\" value={this.state.deathDate} id=\"deathDate\" class=\"form-control\" onChange={this.handleChange('deathDate')} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col sm={12}>\n                                                                <Form.Group as={Row} controlId=\"causeOfDeath\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Cause of Death: </Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control placeholder=\"Enter cause of death\" as=\"textarea\" rows=\"3\" />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                        <Row>\n                                                            <Col>\n                                                                <Form.Group as={Row} controlId=\"name\">\n                                                                    <Col sm={3}>\n                                                                        <Form.Label>Place Of Death :</Form.Label>\n                                                                    </Col>\n                                                                    <Col sm={3}>\n                                                                        <Form.Control\n                                                                            type=\"text\"\n                                                                            placeholder=\"Enter Place of Death\"\n                                                                            onChange={this.handleChange('placeOfDeath')}\n                                                                            value={this.state.placeOfDeath} />\n                                                                    </Col>\n                                                                </Form.Group>\n                                                            </Col>\n                                                        </Row>\n                                                    </div>\n                                                )\n                                            }\n                                            else if (this.state.deceased === \"no\") {\n                                                return (\n                                                    <Container>\n                                                    </Container>\n                                                )\n                                            }\n                                        })()}\n                                    </div>\n                                )\n                            }\n                        })()}\n                        <br />\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\" className=\"cool-button\" onClick={this.previous.bind(this)} >Previous</Button>\n                            </Col>\n                       \n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\"\n                                    onClick={this.validateAndNext}\n                                    className=\"cool-button\"\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default HospitalDetailsForm;\n","import React from 'react';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport './ObservationsForm.css';\n\nclass ObservationsForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weight: props.getValue('weight'),\n            height: props.getValue('height'),\n            temperature: props.getValue('temperature'),\n            bloodpressure: props.getValue('bloodpressure'),\n            heartrate: props.getValue('heartrate'),\n            pulserate: props.getValue('pulserate'),\n            respiratoryrate: props.getValue('respiratoryrate'),\n            bpm: props.getValue('bpm'),\n            fever: props.getValue('fever'),\n            aches: props.getValue('aches'),\n            cold: props.getValue('cold'),\n            cough: props.getValue('cough'),\n            fatigue: props.getValue('fatigue'),\n            diarrohea: props.getValue('diarrohea'),\n            bleeding: props.getValue('bleeding'),\n            infection: props.getValue('infection'),\n            otherSymptoms: props.getValue('otherSymptoms')\n        }\n    }\n    validate = () => {\n        this.props.changeData({ formName: \"HospitalDetails\" });\n    }\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    handleCheckboxChange = input => event => {\n        this.setState({[input]: document.getElementById(input).checked});\n    }\n\n    validateAndNext = async () => {\n        //Conditions to check.. If valid, Send form name to switch to next form\n        // console.log(this.state);\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n        this.loadNextForm(\"BloodProfile\");\n    }\n\n\n    previous = () => {\n        this.saveData();\n        this.props.changeData({ formName: \"BasicDetails\" });\n    }\n\n    loadNextForm = (formName) => {\n        this.props.changeData({ formName: formName });\n    }\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Observations By Doctor</legend>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Vitals</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Weight :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Weight in kgs\"\n                                            onChange={this.handleChange('weight')}\n                                            value={this.state.weight}\n                                            id=\"weight\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Height :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Height in cms\"\n                                            onChange={this.handleChange('height')}\n                                            value={this.state.height}\n                                            id=\"height\"\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Temperature :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"° Farhenheit\"\n                                            onChange={this.handleChange('temperature')}\n                                            value={this.state.temperature}\n                                            id=\"temperature\"\n\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Blood Pressure :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"XX/XX (mm of Hg)\"\n                                            onChange={this.handleChange('bloodpressure')}\n                                            value={this.state.bloodpressure}\n                                            id=\"bloodpressure\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Heart Rate</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('heartrate')}\n                                            value={this.state.heartrate}\n                                            id=\"heartrate\"\n                                        />\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Pulse Rate:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('pulserate')}\n                                            value={this.state.pulserate}\n                                            id=\"pulserate\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Respiratory Rate :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"text\"\n                                            placeholder=\"bpm\"\n                                            onChange={this.handleChange('respiratoryrate')}\n                                            value={this.state.respiratoryrate}\n                                            id=\"respiratoryrate\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Basic Sypmtoms</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Fever :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fever\"\n                                            name=\"fever\"\n                                            onClick={this.handleCheckboxChange('fever')}\n                                            defaultChecked={this.state.fever}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cold :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cold\"\n                                            name=\"cold\"\n                                            onClick={this.handleCheckboxChange('cold')}\n                                            defaultChecked={this.state.cold}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Cough :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"cough\"\n                                            name=\"cough\"\n                                            onClick={this.handleCheckboxChange('cough')}\n                                            defaultChecked={this.state.cough}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Fatigue : </Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"fatigue\"\n                                            name=\"fatigue\"\n                                            onClick={this.handleCheckboxChange('fatigue')}\n                                            defaultChecked={this.state.fatigue}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row} className=\"observations\">\n                                    <Col sm={2}>\n                                        <Form.Label>Aches & Pains :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"aches\"\n                                            name=\"aches\"\n                                            onClick={this.handleCheckboxChange('aches')}\n                                            defaultChecked={this.state.aches}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Diarrohea :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"diarrohea\"\n                                            name=\"diarrohea\"\n                                            onClick={this.handleCheckboxChange('diarrohea')}\n                                            defaultChecked={this.state.diarrohea}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Bleeding :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            id=\"bleeding\"\n                                            name=\"bleeding\"\n                                            type=\"checkbox\"\n                                            onClick={this.handleCheckboxChange('bleeding')}\n                                            defaultChecked={this.state.bleeding}\n                                        />\n                                    </Col>\n                                    <Col sm={2}>\n                                        <Form.Label>Infection :</Form.Label>\n                                    </Col>\n                                    <Col sm={1}>\n                                        <Form.Check\n                                            type=\"checkbox\"\n                                            id=\"infection\"\n                                            name=\"bleeding\"\n                                            onClick={this.handleCheckboxChange('infection')}\n                                            defaultChecked={this.state.infection}\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Others :</Form.Label>\n                                    </Col>\n                                    <Col sm={9}>\n                                        <textarea\n                                            placeholder=\"Other Symptoms(If any)\"\n                                            onChange={this.handleChange('otherSymptoms')}\n                                            value={this.state.otherSymptoms}\n                                            id=\"otherSymptoms\"\n                                            className=\"form-control\"\n                                        />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button variant=\"primary\"\n                                    onClick={this.previous}\n                                    className=\"cool-button\"\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button variant=\"primary\"\n                                    onClick={this.validateAndNext}\n                                    className=\"cool-button\"\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default ObservationsForm;\n","import React from 'react';\nimport { Row, Col, Container, Form, Button } from 'react-bootstrap';\nimport './BloodProfile.css';\nclass BloodProfile extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            dateOfBloodTest: props.getValue('dateOfBloodTest'),\n            wbc: props.getValue('wbc'),\n            pcv: props.getValue('pcv'),\n            rbc: props.getValue('rbc'),\n            mcv: props.getValue('mch'),\n            mchc: props.getValue('mchc'),\n            rdw: props.getValue('rdw'),\n            monocytes: props.getValue('monocytes'),\n            lymphocytes: props.getValue('lymphocytes'),\n            eosinophils: props.getValue('eosinophils'),\n            neutrophils: props.getValue('neutrophils'),\n            hbClassification: props.getValue('hbClassification'),\n            haemoglobin: props.getValue('haemoglobin'),\n            platelet: props.getValue('platelet'),\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    saveData = async () => {\n        await new Promise(resolve => this.props.changeData(this.state, () => resolve()))\n    }\n\n    next = () => {\n        this.saveData().then(() => {\n            this.props.changeData({formName: \"TestDetails\"});\n        })\n    }\n\n    previous = () => {\n        this.saveData().then(() => {\n            this.props.changeData({formName: \"Observations\"});\n        })\n    }\n\n    render() {\n        const styles = {\n            center: {\n                textAlign: \"center\"\n            },\n            paddingLeft: {\n                paddingLeft: \"10px\"\n            },\n            left: {\n                textAlign: \"left\"\n            },\n            right: {\n                textAlign: \"right\"\n            }\n        }\n        const hbClassifications = [\n            {\n                label: 'Children: 6-59 months of age',\n                value: 'CHILD_6_TO_59_MONTHS',\n            },\n            {\n                label: 'Children: 5-11 years of age',\n                value: 'CHILD_5_TO_11_YEARS',\n            },\n            {\n                label: 'Children: 12-14 years of age',\n                value: 'CHILD_12_TO_14_YEARS',\n            },\n            {\n                label: 'Non-Pregnant Women: 15 years or above',\n                value: 'NP_WOMEN_15_PLUS_YEARS',\n            },\n            {\n                label: 'Pregnant Women',\n                value: 'P_WOMEN',\n            },\n            {\n                label: 'Men: 15 years of age or above',\n                value: 'MEN_15_PLUS_YEARS',\n            },\n        ];\n        return (\n            <Container>\n                <Row>\n                    <fieldset style={{ 'width': '100%', ...styles.center }}>\n                        <legend>Blood Profile</legend>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Date of testing :</Form.Label>\n                                    </Col>\n                                <Col sm={3}>\n                                 <Form.Control \n                                   rows=\"3\"\n                                   type=\"date\"\n                                   placeholder=\"DD/MM/YYYY\"\n                                   onChange={this.handleChange('dateOfBloodTest')}\n                                   value={this.state.dateOfBloodTest}\n                                   id=\"dateOfBloodTest\" />\n                                  </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Total WBC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"WBC in (K/microL)\"\n                                            onChange={this.handleChange('wbc')}\n                                            value={this.state.wbc}\n                                            id=\"wbc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Age Classification :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={this.handleChange('hbClassification')}\n                                            id=\"hbClassification\"\n                                            value={this.state.hbClassification}\n                                        >\n                                            <option value=\"\">Select</option>\n                                            {hbClassifications.map((hbClassification, i) => {\n                                                return (\n                                                    <option value={hbClassification.value} key={i}>\n                                                        {hbClassification.label}\n                                                    </option>\n                                                );\n                                            })}\n                                        </Form.Control>\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Haemoglobin :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Haemoglobin in (g/dL)\"\n                                            onChange={this.handleChange('haemoglobin')}\n                                            value={this.state.haemoglobin}\n                                            id=\"haemoglobin\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Packed Cell Volume :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Packed Cell Volume in (%)\"\n                                            onChange={this.handleChange('pcv')}\n                                            value={this.state.pcv}\n                                            id=\"pcv\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>RBC Count :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"RBC in (mill/mm3)\"\n                                            onChange={this.handleChange('rbc')}\n                                            value={this.state.rbc}\n                                            id=\"rbc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCV :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCV in (fL)\"\n                                            onChange={this.handleChange('mcv')}\n                                            value={this.state.mcv}\n                                            id=\"mcv\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCH :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCH in (g)\"\n                                            onChange={this.handleChange('mch')}\n                                            value={this.state.mch}\n                                            id=\"mch\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>MCHC :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"MCHC in (g/dL)\"\n                                            onChange={this.handleChange('mchc')}\n                                            value={this.state.mchc}\n                                            id=\"mchc\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Red Cell Distotion Width :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Red Cell Distotion Width  (%)\"\n                                            onChange={this.handleChange('rdw')}\n                                            value={this.state.rdw}\n                                            id=\"rdw\"\n\n                                        />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Platelet Count :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"Platlet in (K/microL)\"\n                                            onChange={this.handleChange('platelet')}\n                                            value={this.state.platelet}\n                                            id=\"platelet\" />\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Form.Group as={Row}>\n                                <Col className=\"section-heading\">\n                                    <h3>Differential Count</h3>\n                                </Col>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Col sm={12}>\n                                <Form.Group as={Row}>\n                                    <Col sm={3}>\n                                        <Form.Label>Monocytes:</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('monocytes')}\n                                            value={this.state.monocytes}\n                                            id=\"monocytes\"\n                                        />\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Lymphocytes :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('lymphocytes')}\n                                            value={this.state.lymphocytes}\n                                            id=\"lymphocytes\" />\n\n                                    </Col>\n\n                                    <Col sm={3}>\n                                        <Form.Label>Eosinophils :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('eosinophils')}\n                                            value={this.state.Eosinophils}\n                                            id=\"eosinophils\" />\n\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Label>Neutrophils :</Form.Label>\n                                    </Col>\n                                    <Col sm={3}>\n                                        <Form.Control\n\n                                            className=\"my-1 mr-sm-2\"\n                                            rows=\"3\"\n                                            type=\"number\"\n                                            placeholder=\"%\"\n                                            onChange={this.handleChange('neutrophils')}\n                                            value={this.state.neutrophils}\n                                            id=\"neutrophils\" />\n\n                                    </Col>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row style={{textAlign: \"center\"}}>\n                            <Col sm={6} xs={6} style={styles.right}>\n                                <Button \n                                    variant=\"primary\"\n                                    className=\"cool-button\"\n                                    onClick={this.previous}\n                                >Previous</Button>\n                            </Col>\n                            <Col sm={6} xs={6} style={styles.left}>\n                                <Button \n                                    variant=\"primary\"\n                                    className=\"cool-button\"\n                                    onClick={this.next}\n                                >Next</Button>\n                            </Col>\n                        </Row>\n                    </fieldset>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default BloodProfile;\n\n\n","import React from 'react';\n\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './FormSuccess.css';\n\nexport default function FormSuccess() {\n\n    const redirect = () => {\n        window.location.href = \"/add\";\n    }\n\n    return (\n        <Container>\n            <fieldset style={{textAlign: \"center\"}}>\n                <legend className=\"success-legend\">Success</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faCheckCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Data Saved Sucessfully</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        <Button variant=\"primary\"\n                        onClick={redirect}\n                        className=\"cool-button\"\n                        >\n                            Add another patient\n                        </Button>\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container>\n    )\n}","import React from 'react';\n\nimport BasicDetailsForm from '../BasicDetailsForm/BasicDetailsForm';\nimport TestDetailsForm from '../TestDetailsForm/TestDetailsForm';\nimport HospitalDetailsForm from '../HospitalDetailsForm/HospitalDetailsForm';\nimport ObservationsForm from '../ObservationsForm/ObservationsForm';\nimport BloodProfile from '../BloodProfile/BloodProfile';\n\nimport axios from 'axios';\nimport { uri } from '../../index';\nimport FormSuccess from '../FormSuccess/FormSuccess';\n\nimport { authenticationService } from '../../services';\nimport { authHeader } from '../../helpers';\n\nconst CryptoJS = require('crypto-js');\n\nclass MainForm extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            formName: \"BasicDetails\",\n            pkid: this.generatePkid(32)\n        }\n    }\n\n    generatePkid = (length) => {\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    appendState = (childState, callback) => {\n        if (callback) {\n            this.setState(childState, callback());\n        }\n        else {\n            this.setState(childState);\n        }\n    }\n\n    getValue = (key) => {\n        return this.state[key] === undefined ? \"\" : this.state[key];\n    }\n\n    getEncryptedAdhaar = () => {\n        if (!this.state.adhaar) {\n            return '';\n        } else {\n            let decrypted =\n                this.state.adhaar;\n            let encryptedText = CryptoJS.AES.encrypt(\n                decrypted,\n                process.env.REACT_APP_CIPHER_KEY,\n            ).toString();\n            // console.log(decrypted);\n            // console.log(encryptedText);\n            return encryptedText;\n        }\n    };\n\n    submitForm = () => {\n        let opdCheck = false\n        let dialysisCheck = false\n        let doctorreqCheck = false\n        if (this.state.kidneystatus === \"abnormal\") {\n            if (this.state.dialysis === 'true') {\n                dialysisCheck = true\n            }\n        }\n        else if (this.state.kidneystatus === \"good\") {\n            dialysisCheck = false\n        }\n\n        if (this.state.kidneystatus === \"abnormal\") {\n\n            if (this.state.doctorreq === 'true') {\n                doctorreqCheck = true\n            }\n        }\n        else if (this.state.kidneystatus === \"good\") {\n            doctorreqCheck = false\n        }\n\n        if (this.state.kidneystatus === 'good' || this.state.doctorreq === 'false') {\n            opdCheck = false\n        }\n        else if (this.state.kidneystatus === 'abnormal' && this.state.doctorreq === 'true') {\n            opdCheck = true\n        }\n        let dataToSend = {\n            pkid: this.state.pkid,\n            adhaar: this.getEncryptedAdhaar(),\n            mandal: this.state.mandal,\n            phc: this.state.phc,\n            villagesec: this.state.village_sec,\n            village: this.state.village,\n            name: this.state.name,\n            surname: this.state.surname,\n            relation: this.state.relation,\n            gaurdian_name: this.state.gaurdian_name,\n            age: this.state.age,\n            gender: this.state.gender,\n            maritalstatus: this.state.maritalstatus,\n            phone: this.state.phone,\n            bloodgroup: this.state.bloodgroup,\n            address: this.state.address,\n            PVTG: this.state.PVTG,\n            pedalEdema: this.state.pedalEdema ? this.state.pedalEdema : \"\",\n            pedal_profile:\n                this.state.pedalEdema === 'N'\n                    ? {}\n                    : {\n                        pedaltype: this.state.pedaltype,\n                        dateoftesting: this.state.dateoftesting,\n                        serumCreatinine: this.state.serumCreatinine\n                            ? this.state.serumCreatinine\n                            : 0,\n                        bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n                        uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n                        electrolytes_sodium: this.state.electrolytes_sodium\n                            ? this.state.electrolytes_sodium\n                            : 0,\n                        electrolytes_potassium: this.state.electrolytes_potassium\n                            ? this.state.electrolytes_potassium\n                            : 0,\n                        bun: this.state.bun ? this.state.bun : 0,\n                    },\n            // dateoftesting: this.state.dateoftesting ? this.state.dateoftesting : \"\",\n            // serumCreatinine: this.state.serumCreatinine ? this.state.serumCreatinine : 0,\n            // bloodUrea: this.state.bloodUrea ? this.state.bloodUrea : 0,\n            // uricAcid: this.state.uricAcid ? this.state.uricAcid : 0,\n            // electrolytes_sodium: this.state.electrolytes_sodium ? this.state.electrolytes_sodium : 0,\n            // electrolytes_potassium: this.state.electrolytes_potassium ? this.state.electrolytes_potassium : 0,\n            // bun: this.state.bun ? this.state.bun : 0,\n            // pedaltype: this.state.pedalEdema === 'N' ? \"\" : this.state.pedaltype,\n            // kidneystatus: this.state.kidneystatus !== undefined ? this.state.kidneystatus : \"\",\n            // ailments: this.state.kidneystatus === \"good\" ? \"\" : this.state.ailments,\n            dialysis: dialysisCheck,\n            KidneyProfile: {\n                kidneystatus:\n                    this.state.kidneystatus !== undefined ? this.state.kidneystatus : '',\n                ailments: this.state.kidneystatus === 'good' ? '' : this.state.ailments,\n                dialysis: dialysisCheck,\n            },\n            doctorreq: doctorreqCheck,\n            hospitalAdmit: this.state.hospitalAdmit !== undefined ? this.state.hospitalAdmit : \"\",\n            dateOfAdmit: this.state.dateOfAdmit !== undefined ? this.state.dateOfAdmit : \"\",\n            refered: this.state.refered ? this.state.refered : false,\n            referredto: this.state.referred === \"yes\" ? this.state.referredto : \"\",\n            ref_status: this.state.referred === \"yes\" ? this.state.status : \"\",\n            treatmentDone: this.state.referred === \"yes\" ? this.state.treatmentDone : \"\",\n            discharge: this.state.referred === \"no\" ? this.state.discharge : \"\",\n            dischargeStatus: this.state.referred === \"no\" ? this.state.dischargeStatus : \"\",\n            deceased: this.state.referred === \"no\" ? this.state.deceased : false,\n            DetailsDeath:\n                this.state.deceased === 'no'\n                    ? {}\n                    : {\n                        deathDate:\n                            this.state.deceased === 'yes' ? this.state.deathDate : '',\n                        placeOfDeath:\n                            this.state.deceased === 'yes' ? this.state.placeOfDeath : '',\n                        causeOfDeath:\n                            this.state.deceased === 'yes' ? this.state.causeOfDeath : '',\n                    },\n            // deathDate: this.state.deceased === \"yes\" ? this.state.deathDate : \"\",\n            // placeOfDeath: this.state.deceased === \"yes\" ? this.state.placeOfDeath : \"\",\n            // causeOfDeath: this.state.deceased === \"yes\" ? this.state.causeOfDeath : \"\",\n            deworming: this.state.deworming ? this.state.deworming : false,\n            type_data: ['dev', 'dev2'].indexOf(authenticationService.currentUserValue.username) !== -1 ? \"Development\" : \"Production\",\n            opd: opdCheck,\n            weight: this.state.weight ? this.state.weight : 0.0,\n            height: this.state.height ? this.state.height : 0.0,\n            BasicVitals: {\n                Temperature: this.state.temperature,\n                BP: this.state.bloodpressure,\n                HR: this.state.heartrate,\n                Pulse: this.state.pulserate,\n                RespRate: this.state.respiratoryrate\n            },\n            BasicSymptoms: {\n                Fever: this.state.fever,\n                Cold: this.state.cold,\n                Cough: this.state.cough,\n                Fatigue: this.state.fatigue,\n                Aches: this.state.aches,\n                Diarrohea: this.state.diarrohea,\n                Bleeding: this.state.bleeding,\n                Infection: this.state.infection,\n                others: this.state.otherSymptoms\n            },\n            report: {},\n            patient_status: \"Closed\",\n            habits: {\n                smoking: this.state.smoking,\n                drinking: this.state.drinking\n            },\n            AnemiaProfile: {\n                dateOfBloodTest: this.state.dateOfBloodTest,\n                wbc_count: this.state.wbc ? this.state.wbc : 0.0,\n                hb: this.state.haemoglobin ? this.state.haemoglobin : 0.0,\n                diffrential_count: {\n                    monocytes: this.state.monocytes ? this.state.monocytes : null,\n                    lymphocytes: this.state.lymphocytes ? this.state.lymphocytes : null,\n                    eosinophils: this.state.eosinophils ? this.state.eosinophils : null,\n                    neutrophils: this.state.neutrophils ? this.state.neutrophils : null,\n                },\n                plat_count: this.state.platelet ? this.state.platelet : 0.0,\n                pcv: this.state.pcv,\n                rbc: this.state.rbc,\n                mcv: this.state.mcv,\n                mch: this.state.mch,\n                mchc: this.state.mchc,\n                rdw: this.state.rdw,\n            },\n            // hb: this.state.haemoglobin ? this.state.haemoglobin : 0.0,\n            // wbc_count: this.state.wbc ? this.state.wbc : 0.0,\n            // diffrential_count: {\n            //     monocytes: this.state.monocytes ? this.state.monocytes : null,\n            //     lymphocytes: this.state.lymphocytes ? this.state.lymphocytes : null,\n            //     eosinophils: this.state.eosinophils ? this.state.eosinophils : null\n            // },\n            // plat_count: this.state.platelet ? this.state.platelet : 0.0,\n        }\n        axios.post(uri + 'AddPatient/',\n            dataToSend,\n            {\n                headers: authHeader()\n            }).then(response => {\n                console.log(dataToSend);\n                // console.log(\"Sending data\");\n                // console.log(response);\n                if (response.data.pkid === this.state.pkid) {\n                    this.setState({}, this.setState({ formName: \"Success\" }));\n                }\n                else {\n                    alert(\"Failed to save.. Please Try again\");\n                    // this.setState({ formName: \"Success\" });\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        switch (this.state.formName) {\n            case \"BasicDetails\":\n                return <BasicDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"TestDetails\":\n                return <TestDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"HospitalDetails\":\n                return <HospitalDetailsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Observations\":\n                return <ObservationsForm submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"BloodProfile\":\n                return <BloodProfile submit={this.submitForm} changeData={this.appendState} getValue={this.getValue} />\n            case \"Success\":\n                return <FormSuccess />\n            default:\n                return \"\";\n        }\n    }\n}\n\nexport default MainForm;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Error404() {\n\n    var seconds = 3;\n\n    setInterval(() => {\n        seconds--;\n        document.getElementById('seconds').innerHTML = seconds;\n        if(seconds === 0){\n            clearInterval();\n            window.location.href = \"/\";\n        }\n    }, 1000);\n\n    return (\n        <Container>\n            <fieldset style={{ textAlign: \"center\" }}>\n                <legend className=\"success-legend\">Error 404</legend>\n                <Row>\n                    <Col>\n                        <FontAwesomeIcon icon={faTimesCircle} size=\"8x\" color=\"green\" />\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\" }}>\n                    <Col>\n                        <h2>Page Not Found</h2>\n                    </Col>\n                </Row>\n                <Row style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n                    <Col>\n                        Redirecting to homepage in <span id=\"seconds\">{seconds}</span> seconds...\n                    </Col>\n                </Row>\n            </fieldset>\n        </Container >\n    )\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\n// import Header from '../Header/Header';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <React.Fragment>\n            {/* <Header /> */}\n            <Component {...props} />\n        </React.Fragment>\n    }} />\n)\n\nexport default PrivateRoute;","import React from 'react';\nimport './Login.css';\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { authenticationService } from '../../services';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            btn:\"Login\",\n            username: \"\",\n            password: \"\",\n            loading:false,\n            text:false\n        }\n        if (authenticationService.currentUserValue) {\n            this.props.history.push('/');\n        }\n    }\n\n    login = () => {\n        let { username, password } = this.state;\n        if(!username || !password)\n        {\n          alert(\"Both fields are mandatory\");\n        }\n        else{\n        this.setState({ btn: \"Logging in\", loading: true });\n        authenticationService.login(username, password)\n            .then(\n                user => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n                    this.props.history.push(from);\n                },\n                error => {\n                    console.log(error);\n                    this.setState({ btn: \"Login\", loading: false });\n                }\n            );\n        }\n    }\n\n    handleChange = input => event => {\n        this.setState({ [input]: event.target.value })\n    }\n\n    render() {\n        const {loading}=this.state;\n        const { btn } = this.state ;\n        return (\n            <Container style={{ marginTop: \"10vh\", textAlign: \"center\" }}>\n                <Row className=\"heading\">\n                    <Col>\n                        <h2>Kindly Login to access all features..</h2>\n                    </Col>\n                </Row>\n                <fieldset style={{ marginTop: \"10vh\"}}>\n                    <legend>Enter your Login Details</legend>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"username\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Username :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter username\" onChange={this.handleChange('username')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Form.Group as={Row} controlId=\"password\">\n                                <Col md={6} sm={12}>\n                                    <Form.Label>Password :</Form.Label>\n                                </Col>\n                                <Col md={6} sm={12}>\n                                    <Form.Control placeholder=\"Enter password\" type=\"password\" onChange={this.handleChange('password')} />\n                                </Col>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                        <Col>\n                        <Button className=\"cool-button\" size=\"lg\" onClick={this.login} >\n                          {loading && <i className=\"spinner-border spinner-border-sm\"  role=\"status\"></i>} {btn}</Button>\n                        </Col>\n                    </Row>\n                </fieldset>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport MainForm from './components/MainForm/MainForm';\nimport Error404 from './components/Error404/Error404';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Login from './components/Login/Login';\nimport { history } from './helpers';\nimport { authenticationService } from './services';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    authenticationService.currentUser.subscribe(x => this.setState({ currentUser: x }, this.refreshAuth));\n  }\n\n  refreshAuth = () => {\n    let { currentUser } = this.state;\n    if (currentUser) {\n      let msecDifference = new Date().getTime() - new Date(this.state.currentUser.timestamp).getTime();\n      if(msecDifference / (1000 * 60 * 60) >= 4){\n        authenticationService.logout();\n      }\n      else if(msecDifference / (1000 * 60 * 60) > 3) {\n        authenticationService.refresh();\n      }\n    }\n  }\n\n  logout() {\n    authenticationService.logout();\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Router history={history}>\n          <div>\n            <Switch>\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/add\" component={MainForm} />\n              {/* <PrivateRoute exact path=\"/directory\" component={Directory} /> */}\n              <Route component={Error404} />\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function configureFakeBackend() {\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'test', lastName: 'test' },\n        { id: 2, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'Admin' }];\n    let realFetch = window.fetch;\n    window.fetch = function (url, opts) {\n        const isLoggedIn = opts.headers['Authorization'] === 'Bearer fake-jwt-token';\n\n        return new Promise((resolve, reject) => {\n            // wrap in timeout to simulate server api call\n            setTimeout(() => {\n                // authenticate - public\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\n                    const params = JSON.parse(opts.body);\n                    const user = users.find(x => x.username === params.username && x.password === params.password);\n                    if (!user) return error('Username or password is incorrect');\n                    return ok({\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    });\n                }\n\n                // get users - secure\n                if (url.endsWith('/users') && opts.method === 'GET') {\n                    if (!isLoggedIn) return unauthorised();\n                    return ok(users);\n                }\n\n                // pass through any requests not handled above\n                realFetch(url, opts).then(response => resolve(response));\n\n                // private helper functions\n\n                function ok(body) {\n                    resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(body)) })\n                }\n\n                function unauthorised() {\n                    resolve({ status: 401, text: () => Promise.resolve(JSON.stringify({ message: 'Unauthorised' })) })\n                }\n\n                function error(message) {\n                    resolve({ status: 400, text: () => Promise.resolve(JSON.stringify({ message })) })\n                }\n            }, 500);\n        });\n    }\n}","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { configureFakeBackend } from './helpers';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport const uri = process.env.REACT_APP_SERVER_URI;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}